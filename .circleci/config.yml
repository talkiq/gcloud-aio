version: 2

jobs:
  lint:
    docker:
      - image: python:3.6.2
    steps:
      - checkout
      - run: pip install pre-commit
      - run: pre-commit run --all-files

  test-auth:
    docker:
      - image: googleapis/nox:0.18.2
    steps:
      - run:
          name: install dependencies
          command: |
            apt-get update
            apt-get install -y ca-certificates
      - run: echo ${GOOGLE_SERVICE_JSON} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - checkout
      - run: nox -f auth/nox.py

  test-bigquery:
    docker:
      - image: googleapis/nox:0.18.2
    steps:
      - run:
          name: install dependencies
          command: |
            apt-get update
            apt-get install -y ca-certificates
      - run: echo ${GOOGLE_SERVICE_JSON} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - checkout
      - run: nox -f bigquery/nox.py

  test-datastore:
    docker:
      - image: googleapis/nox:0.18.2
    steps:
      - run:
          name: install dependencies
          command: |
            apt-get update
            apt-get install -y ca-certificates
      - run: echo ${GOOGLE_SERVICE_JSON} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - checkout
      - run: nox -f datastore/nox.py

  test-pubsub:
    docker:
      - image: googleapis/nox:0.18.2
    steps:
      - run:
          name: install dependencies
          command: |
            apt-get update
            apt-get install -y ca-certificates
      - run: echo ${GOOGLE_SERVICE_JSON} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - checkout
      - run: nox -f pubsub/nox.py

  test-storage:
    docker:
      - image: googleapis/nox:0.18.2
    steps:
      - run:
          name: install dependencies
          command: |
            apt-get update
            apt-get install -y ca-certificates
      - run: echo ${GOOGLE_SERVICE_JSON} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - checkout
      - run: nox -f storage/nox.py

  test-taskqueue:
    docker:
      - image: googleapis/nox:0.18.2
    steps:
      - run:
          name: install dependencies
          command: |
            apt-get update
            apt-get install -y ca-certificates
      - run: echo ${GOOGLE_SERVICE_JSON} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - checkout
      - run: nox -f taskqueue/nox.py

  pypi:
    docker:
      - image: python:3.6.2-alpine3.6
    steps:
      - run: pip install twine
      - checkout
      - deploy:
          name: upload to pypi
          command: |
            cd $(echo "${CIRCLE_TAG}" | sed 's/-.*//')
            python setup.py sdist bdist_wheel
            twine upload dist/*

  github:
    docker:
      - image: python:3.6.2-alpine3.6
    steps:
      - run: apk add --no-cache curl git openssh-client
      - checkout
      - run:
          name: install github-release
          command: |
            curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 > github-release.tar.bz2
            tar xjf github-release.tar.bz2
            rm -f github-release.tar.bz2
      - deploy:
          name: create GitHub release
          command: |
            export PROJECT=$(echo "${CIRCLE_TAG}" | sed 's/-.*//')
            export PREV_RELEASE=$(git tag --sort=version:refname | grep ${PROJECT} | tail -n2 | head -n1)
            [ "${PREV_RELEASE}" = "${CIRCLE_TAG}" ] && export PREV_RELEASE=$(git rev-list --max-parents=0 HEAD)
            [ -z "${PREV_RELEASE}" ] && export PREV_RELEASE=$(git rev-list --max-parents=0 HEAD)

            git log ${PREV_RELEASE}..${CIRCLE_TAG} --pretty=format:'- %s' > release-description.md
            ./bin/linux/amd64/github-release release -t "${CIRCLE_TAG}"
            cat release-description.md | grep ${PROJECT} | ./bin/linux/amd64/github-release edit -t ${CIRCLE_TAG} -d -

workflows:
  version: 2
  run-jobs:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/

      - test-auth:
          filters:
            tags:
              only: /.*/
      - test-bigquery:
          filters:
            tags:
              only: /.*/
      - test-datastore:
          filters:
            tags:
              only: /.*/
      - test-pubsub:
          filters:
            tags:
              only: /.*/
      - test-storage:
          filters:
            tags:
              only: /.*/
      - test-taskqueue:
          filters:
            tags:
              only: /.*/

      - pypi:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[a-z]+-[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - lint
            - test-auth
            - test-bigquery
            - test-datastore
            - test-pubsub
            - test-storage
            - test-taskqueue
      - github:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[a-z]+-[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - lint
            - test-auth
            - test-bigquery
            - test-datastore
            - test-pubsub
            - test-storage
            - test-taskqueue

experimental:
  notify:
    branches:
      only:
        - master
