version: 2.1

orbs:
  linter: thekevjames/linter@0.1

jobs:
  nox:
    docker:
      - image: thekevjames/nox:2018.10.17
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /key.json
    parameters:
      folder:
        type: string
    steps:
      - run: apt-get -qy update && apt-get -qy install libssl-dev
      - run: echo ${GOOGLE_SERVICE_PUBLIC} | base64 -d > "${GOOGLE_APPLICATION_CREDENTIALS}"
      - checkout
      - run: nox -f <<parameters.folder>>/noxfile.py

  docs:
    docker:
      - image: python:3.7.4
    steps:
      - run: pip install pdoc3
      - checkout
      - run:
          name: install all sub-projects
          command: |
            pip install ./auth
            pip install ./bigquery
            pip install ./datastore
            pip install ./kms
            pip install ./pubsub
            pip install ./storage
            pip install ./taskqueue
      - run: pdoc --html -o ./docs gcloud
      - persist_to_workspace:
          root: docs
          paths: gcloud

  pages:
    docker:
      - image: node:8.16.1
    steps:
      - checkout
      - attach_workspace:
          at: docs
      - run: npm install -g --silent gh-pages@2.0.1
      - run:
          name: configure git creds
          command: |
            git config user.email "voiceai-eng+ci@dialpad.com"
            git config user.name "Vi Eng (CI)"
      - add_ssh_keys:
          fingerprints:
            - "f6:b5:5d:10:ed:5d:cd:e0:83:28:dd:39:8c:f8:0b:c3"
      - run: gh-pages --message "[skip ci] updated docs" --dist docs/gcloud

  pypi:
    docker:
      - image: python:3.7.4-slim
    steps:
      - run: pip install pyopenssl twine
      - checkout
      - deploy:
          name: upload to pypi
          command: |
            cd $(echo "${CIRCLE_TAG}" | sed 's/-.*//')
            python setup.py sdist bdist_wheel
            twine upload dist/*

  github:
    docker:
      - image: python:3.7.4-alpine
    steps:
      - run: apk add --no-cache curl git openssh-client
      - checkout
      - run:
          name: install github-release
          command: |
            curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 > github-release.tar.bz2
            tar xjf github-release.tar.bz2
            rm -f github-release.tar.bz2
      - deploy:
          name: create GitHub release
          command: |
            export PROJECT=$(echo "${CIRCLE_TAG}" | sed 's/-.*//')
            export PREV_RELEASE=$(git tag --sort=version:refname | grep ${PROJECT} | tail -n2 | head -n1)
            [ "${PREV_RELEASE}" = "${CIRCLE_TAG}" ] && export PREV_RELEASE=$(git rev-list --max-parents=0 HEAD)
            [ -z "${PREV_RELEASE}" ] && export PREV_RELEASE=$(git rev-list --max-parents=0 HEAD)

            git log ${PREV_RELEASE}..${CIRCLE_TAG} --pretty=format:'- %s' > release-description.md
            ./bin/linux/amd64/github-release release -t "${CIRCLE_TAG}"
            cat release-description.md | grep ${PROJECT} | ./bin/linux/amd64/github-release edit -t ${CIRCLE_TAG} -d -

workflows:
  run-jobs:
    jobs:
      - linter/pre-commit:
          python_version: 3.6.6
          filters:
            tags:
              only: /.*/

      - nox:
          name: test-auth
          folder: auth
          filters:
            tags:
              only: /.*/
      - nox:
          name: test-bigquery
          folder: bigquery
          filters:
            tags:
              only: /.*/
      - nox:
          name: test-datastore
          folder: datastore
          filters:
            tags:
              only: /.*/
      - nox:
          name: test-kms
          folder: kms
          filters:
            tags:
              only: /.*/
      - nox:
          name: test-pubsub
          folder: pubsub
          filters:
            tags:
              only: /.*/
      - nox:
          name: test-storage
          folder: storage
          filters:
            tags:
              only: /.*/
      - nox:
          name: test-taskqueue
          folder: taskqueue
          filters:
            tags:
              only: /.*/

      - docs:
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/

      - pages:
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/
          requires:
            - linter/pre-commit
            - test-auth
            - test-bigquery
            - test-datastore
            - test-kms
            - test-pubsub
            - test-storage
            - test-taskqueue
            - docs
      - pypi:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[a-z]+-[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - linter/pre-commit
            - test-auth
            - test-bigquery
            - test-datastore
            - test-kms
            - test-pubsub
            - test-storage
            - test-taskqueue
      - github:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[a-z]+-[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - linter/pre-commit
            - test-auth
            - test-bigquery
            - test-datastore
            - test-kms
            - test-pubsub
            - test-storage
            - test-taskqueue
