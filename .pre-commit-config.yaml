ci:
    autofix_commit_msg: 'refactor(lint): apply automatic lint fixes'
    autoupdate_commit_msg: 'chore(deps): bump pre-commit linter versions'

default_language_version:
    python: python3.7

repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: check-case-conflict
    -   id: check-executables-have-shebangs
    -   id: check-json
    -   id: check-merge-conflict
    -   id: check-shebang-scripts-are-executable
    -   id: check-symlinks
    -   id: check-toml
    -   id: check-vcs-permalinks
    -   id: check-xml
    -   id: check-yaml
        args: [--allow-multiple-documents]
    -   id: detect-private-key
        exclude: (auth/tests/unit/token_test.py)|(storage/gcloud/aio/storage/blob.py)
    -   id: end-of-file-fixer
    -   id: mixed-line-ending
        args: [--fix=lf]
    -   id: trailing-whitespace

# python
    -   id: check-ast
    -   id: check-builtin-literals
    -   id: check-docstring-first
    -   id: debug-statements
    -   id: double-quote-string-fixer
    -   id: name-tests-test
    -   id: requirements-txt-fixer
-   repo: https://github.com/PyCQA/pylint
    rev: v2.15.9
    hooks:
    -   id: pylint
        additional_dependencies:
        - pylint-import-modules==0.3.0
        args:
        - --allowed-direct-imports="typing.*"
        - --load-plugins=pylint_import_modules,pylint.extensions.mccabe
        - --max-complexity=10
        - --max-line-length=79
        - --max-args=10
        - --score=n
        - -d broad-except
        - -d deprecated-decorator
        - -d duplicate-code
        - -d fixme
        - -d import-error
        - -d import-only-modules
        - -d invalid-name
        - -d locally-disabled
        - -d missing-docstring
        - -d too-few-public-methods
        - -d too-many-arguments
        - -d try-except-raise
        - -d ungrouped-imports  # conflicts with reorder-python-imports
        - -d wrong-import-order  # conflicts with reorder-python-imports
        - -d consider-using-f-string  # we support py27, etc
-   repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.3.1
    hooks:
    -   id: remove-crlf
    -   id: remove-tabs
-   repo: https://github.com/asottile/reorder_python_imports
    rev: v3.9.0
    hooks:
    -   id: reorder-python-imports
        args: [--py26-plus]
-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.991
    hooks:
    -   &mypy
        id: mypy
        name: mypy-auth
        entry: env MYPYPATH=./stubs mypy  # TODO: use additional_dependencies instead
        require_serial: True
        # N.B. mypy requires an installed version of whatever third-party
        # library it is asked to check against. In practice, that means
        # whenever we see an error telling us to do so, we should add the
        # relevant library to `additional_dependencies`.
        # Note that some libraries keep their type hints in packages named
        # `types-$lib` or `$lib-stubs`.
        additional_dependencies:
        - aiohttp
        - types-cryptography
        - types-jwt
        - types-pkg_resources
        - types-requests
        args:
        - --show-error-codes
        - --strict
        - --strict-equality
        - --warn-unreachable
        files: auth/
        exclude: tests/
    -   <<: *mypy
        name: mypy-bigquery
        additional_dependencies:
        - aiohttp
        - gcloud-aio-auth
        - types-pkg_resources
        - types-requests
        files: bigquery/
    -   <<: *mypy
        name: mypy-datastore
        additional_dependencies:
        - aiohttp
        - gcloud-aio-auth
        - types-pkg_resources
        - types-requests
        files: datastore/
    -   <<: *mypy
        name: mypy-kms
        additional_dependencies:
        - aiohttp
        - gcloud-aio-auth
        - types-pkg_resources
        - types-requests
        files: kms/
    -   <<: *mypy
        name: mypy-pubsub
        additional_dependencies:
        - aiohttp
        - gcloud-aio-auth
        - prometheus-client
        - types-pkg_resources
        - types-requests
        files: pubsub/
    -   <<: *mypy
        name: mypy-storage
        additional_dependencies:
        - aiohttp
        - gcloud-aio-auth
        - rsa
        - types-aiofiles
        - types-pkg_resources
        - types-requests
        files: storage/
    -   <<: *mypy
        name: mypy-taskqueue
        additional_dependencies:
        - aiohttp
        - gcloud-aio-auth
        - types-pkg_resources
        - types-requests
        files: taskqueue/
-   repo: https://github.com/asottile/yesqa
    rev: v1.4.0
    hooks:
    -   id: yesqa
-   repo: https://github.com/pre-commit/mirrors-autopep8
    rev: v2.0.1
    hooks:
    -   id: autopep8
-   repo: https://github.com/PyCQA/flake8
    rev: 5.0.4
    hooks:
    -   id: flake8
        additional_dependencies:
        - flake8-2020==1.7.0
        - flake8-broken-line==0.6.0
        # - flake8-commas==2.1.0  # TODO: enable me
        - flake8-comprehensions==3.10.1
        - importlib-metadata<5  # TODO: nuke once we upgrade past py3.7
        args:
        - --ignore=A003,E501,W503,F401,F811
-   repo: local
    hooks:
    -   &poetry-check
        id: poetry-check
        name: poetry-check-auth
        description: 'Validate the structure of the pyproject.toml file'
        entry: bash -c 'cd auth && poetry check'
        language: python
        additional_dependencies:
        - poetry>=1.2.0
        pass_filenames: false
        types: [toml]
    -   <<: *poetry-check
        name: poetry-check-bigquery
        entry: bash -c 'cd bigquery && poetry check'
    -   <<: *poetry-check
        name: poetry-check-datastore
        entry: bash -c 'cd datastore && poetry check'
    -   <<: *poetry-check
        name: poetry-check-kms
        entry: bash -c 'cd kms && poetry check'
    -   <<: *poetry-check
        name: poetry-check-pubsub
        entry: bash -c 'cd pubsub && poetry check'
    -   <<: *poetry-check
        name: poetry-check-storage
        entry: bash -c 'cd storage && poetry check'
    -   <<: *poetry-check
        name: poetry-check-taskqueue
        entry: bash -c 'cd taskqueue && poetry check'
    -   id: pytest-fixture-require-scope
        name: Require explicit scope for pytest fixtures
        description: 'Ensure we explicitly set pytest fixture scopes'
        entry: '@pytest\.fixture( |\n|(\(\)))'
        language: pygrep
        types: [python]
-   repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.9.0
    hooks:
    -   id: python-no-eval
    -   id: python-no-log-warn
    -   id: python-use-type-annotations

# rst
    -   id: rst-backticks
    -   id: rst-directive-colons
    -   id: rst-inline-touching-normal
