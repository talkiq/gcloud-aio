#!/usr/bin/env bash
set -euo pipefail

PROJECTS="auth bigquery datastore kms pubsub storage taskqueue"
if [[ "$OSTYPE" == "darwin"* ]]; then
    SED=gsed
else
    SED=sed
fi


rm -rf ./build
mkdir ./build
for folder in ${PROJECTS}; do
    cp -r $folder ./build
done
pushd ./build >/dev/null
trap "popd >/dev/null" EXIT


# Rename files and paths to `rest` and make strings py2 compatible
find . -path '*aio*' -exec dirname {} \; \
    | $SED 's/aio/rest/g' \
    | xargs -L1 mkdir -p
for file in $(find . -type f -path '*aio*'); do
    mv $file ${file//aio/rest}
done

# Remove the files with `aio` in file names (we moved all required files
# already)
find . -type f -path '*aio*' \
    | xargs -L1 rm -rf

# Replace build metadata
find . -type f \
    | xargs -L1 $SED -Ei 's/gcloud(.)aio/gcloud\1rest/g'
find . -type f \
    | xargs -L1 $SED -Ei 's#docs/aio.md#../docs/rest.md#g'

# Physically update files to remove incompatible syntax
## dependencies
find . -type f \
    | grep "pyproject\.toml$" \
    | xargs -L1 $SED -Ei 's#github.com/talkiq/gcloud-rest#github.com/talkiq/gcloud-aio#g'
find . -type f -path '*pyproject.toml' \
    | xargs -L1 $SED -Ei 's/^aiohttp/# aiohttp/g'
find . -type f -path '*pyproject.toml' \
    | xargs -L1 $SED -Ei 's/^aiofiles/# aiofiles/g'
find . -type f -path '*pyproject.toml' \
    | xargs -L1 $SED -Ei 's/^pytest-asyncio/# pytest-asyncio/g'
find . -type f -path '*pyproject.toml' \
    | xargs -L1 $SED -Ei 's/^asyncio_mode/# asyncio_mode/g'
find . -type f -path '*pyproject.toml' \
    | xargs -L1 $SED -Ei 's/^# requests/requests/g'
find . -type f -path '*pyproject.toml' \
    | xargs -L1 $SED -Ei 's/^prometheus-client/# prometheus-client/g'
for folder in ${PROJECTS}; do
    pushd $folder >/dev/null

    if diff ../../$folder/pyproject.rest.toml pyproject.toml; then
        cp poetry.rest.lock poetry.lock
    else
        echo "$folder/pyproject.toml changed, rebuilding rest lockfile..."
        cp pyproject.toml ../../$folder/pyproject.rest.toml
        poetry lock
        cp poetry.lock ../../$folder/poetry.rest.lock
    fi

    popd >/dev/null
done
## others
find . -type f \
    | grep -v "session.py" \
    | xargs -L1 $SED -Ei 's/AioSession/SyncSession/g'
find . -type f \
    | xargs -L1 $SED -Ei 's/asyncio.ensure_future(.*)/\1/g'
find . -type f \
    | xargs -L1 $SED -Ei 's/asyncio.create_task(.*)/\1/g'
find . -type f -path '*py' \
    | xargs -L1 $SED -Ei 's/(async|await) //g'
find . -type f -path '*tests/*' \
    | xargs -L1 $SED -Ei 's/@pytest.mark.asyncio/#@pytest.mark.asyncio/g'
find . -type f -path '*tests/*' \
    | xargs -L1 $SED -Ei 's/Session\(.*\)\sas/Session() as/g'
find . -type f -path '*py' \
    | xargs -L1 $SED -Ei 's/__aenter__/__enter__/g'
find . -type f -path '*py' \
    | xargs -L1 $SED -Ei 's/__aexit__/__exit__/g'
## aiohttp vs requests
find . -type f -path '*py' \
    | xargs -L1 $SED -Ei 's/content_type=None//g'
