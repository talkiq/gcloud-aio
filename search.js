window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "gcloud", "modulename": "gcloud", "kind": "module", "doc": "<p>These docs cover two projects: <code>gcloud-aio-*</code> and <code>gcloud-rest-*</code>. Both of them are HTTP implementations of the Google Cloud client libraries. The former has been built to work with Python 3's asyncio. The later is a threadsafe <code>requests</code>-based implementation.</p>\n\n<p>For supported clients, see the modules in the sidebar.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-<span class=\"o\">{</span>aio,rest<span class=\"o\">}</span>-<span class=\"o\">{</span>client_name<span class=\"o\">}</span>\n</code></pre>\n</div>\n"}, {"fullname": "gcloud.aio", "modulename": "gcloud.aio", "kind": "module", "doc": "<h2 id=\"emulator-usage\">Emulator Usage</h2>\n\n<p>All of our API clients are integrated to make use of the official Google emulators, where those exist. As a general rule, this means you can set the <code>$FOO_EMULATOR_HOST</code> environment variable (where <code>$FOO</code> is the service being emulated, such as <code>PUBSUB_EMULATOR_HOST</code>) and your <code>gcloud</code> client will point to the emulator rather than the live APIs.</p>\n\n<p>Alternatively, you can provide the <code>api_root</code> option to any relevant constructor to have full control over the API being used. Note that while the environment variable expects just the hostname (to support the standard Google emulator usecase), if you assign this value manually via the contructor arg you must include the entire path.</p>\n\n<p>If you override the API value (either by constructor option or environment variable), tls verification and other such security measures will be disabled as needed. This feature is not intended for production use!</p>\n\n<p>Note also that this library only supports a single version of the Google APIs at a given time (generally the most recent version). If the API you point to does not conform to the correct version of the spec, we make no promises as to what might happen.</p>\n\n<p>For example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">_api_root</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;https://datastore.googleapis.com/v1&#39;</span>\n\n<span class=\"c1\"># generally set via `gcloud emulators datastore env-init`</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;DATASTORE_EMULATOR_HOST&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;127.0.0.1:8432&#39;</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">_api_root</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;http://127.0.0.1:8432/v1&#39;</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">(</span><span class=\"n\">api_root</span><span class=\"o\">=</span><span class=\"s1\">&#39;http://example.com/datastoreapi&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">_api_root</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;http://example.com/datastoreapi&#39;</span>\n</code></pre>\n</div>\n\n<p>Note that, in any case, these values will be loaded at the time the class instance is constructed.</p>\n\n<h2 id=\"session-management\">Session Management</h2>\n\n<p>Since we use <code>aiohttp</code> under the hood, ensuring we properly close our <code>ClientSession</code> upon shutdown is important to avoid \"unclosed connection\" errors.</p>\n\n<p>As such, there are several possible ways to handle session management depending on your use-case. Note that these methods apply to all <code>gcloud-aio-*</code> classes.</p>\n\n<p><strong>Manually Close the Class</strong></p>\n\n<p>If you've created the class manually, you'll have to close it:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"c1\"># use the class</span>\n<span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p><strong>Context Manager</strong></p>\n\n<p>Alternatively, you can let a context manager handle that for you:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"c1\"># use the class</span>\n</code></pre>\n</div>\n\n<p><strong>Manage Your Own Session</strong></p>\n\n<p>If you need to manage your own session, you'll want to make sure you handle everything:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">)</span>\n    <span class=\"c1\"># use the class</span>\n\n    <span class=\"c1\"># DO NOT call `client.close()`, or the `async with ClientSession` will</span>\n    <span class=\"c1\"># attempt to close a second time.</span>\n</code></pre>\n</div>\n\n<h2 id=\"token-management\">Token Management</h2>\n\n<p>By default, you should not need to care about managing a <code>gcloud.aio.auth.Token</code> instance. When you initialize a given client library, it will handle creating a token with the correct scopes.</p>\n\n<p>However, in some cases you may find it valuable to share a token across multiple libraries (eg. to include the HTTP calls in a single session or to reduce how many individual refreshes need to happen). In that case, you can pass it in as follows.</p>\n\n<p>Note that if you are using a service account file, setting explicit scopes is mandatory! As such, you'll need to make sure your token has the correct scopes for all the libraries you plan to use it with.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">scopes</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">&#39;https://www.googleapis.com/auth/cloudkms&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;https://www.googleapis.com/auth/datastore&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">(</span><span class=\"n\">scopes</span><span class=\"o\">=</span><span class=\"n\">scopes</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">token</span><span class=\"p\">:</span>\n    <span class=\"n\">datastore</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"n\">token</span><span class=\"p\">)</span>\n    <span class=\"n\">kms</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">kms</span><span class=\"o\">.</span><span class=\"n\">KMS</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"n\">token</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"compatibility\">Compatibility</h2>\n\n<p>Here are notes on compatibility issues. While we cannot offer specific support for issues originating from other projects, we can point toward known resolutions.</p>\n\n<ul>\n<li>Google Cloud Functions pins <code>yarl</code>; <code>gcloud-aio-*</code> indirectly requires <code>yarl</code> via <code>aiohttp</code> and an unpinned version of <code>yarl</code> can cause your cloud functions to stop building. Please pin your requirements as described here: <a href=\"https://cloud.google.com/functions/docs/writing/specifying-dependencies-python\">Google Cloud Function Dependencies</a>.</li>\n</ul>\n"}, {"fullname": "gcloud.aio.auth", "modulename": "gcloud.aio.auth", "kind": "module", "doc": "<p>This library implements various methods for working with the Google IAM / auth\nAPIs. This includes authenticating for the purpose of using other Google APIs,\nmanaging service accounts and public keys, URL-signing blobs, etc.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-aio-auth\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.auth</span> <span class=\"kn\">import</span> <span class=\"n\">IamClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.auth</span> <span class=\"kn\">import</span> <span class=\"n\">Token</span>\n\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">IamClient</span><span class=\"p\">()</span>\n<span class=\"n\">pubkeys</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">list_public_keys</span><span class=\"p\">()</span>\n\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">Token</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n</code></pre>\n</div>\n\n<p>Additionally, the <code>Token</code> constructor accepts the following optional arguments:</p>\n\n<ul>\n<li><code>service_file</code>: path to a <a href=\"https://console.cloud.google.com/iam-admin/serviceaccounts\">service account</a> authorized user\nfile, or any other application credentials. Alternatively, you can pass a\nfile-like object, like an <code>io.StringIO</code> instance, in case your credentials\nare not stored in a file but in memory. If omitted, will attempt to find one\non your path or fallback to generating a token from GCE metadata.</li>\n<li><code>session</code>: an <code>aiohttp.ClientSession</code> instance to be used for all requests.\nIf omitted, a default session will be created. If you use the default\nsession, you may be interested in using <code>Token()</code> as a context manager\n(<code>async with Token(..) as token:</code>) or explicitly calling the <code>Token.close()</code>\nmethod to ensure the session is cleaned up appropriately.</li>\n<li><code>scopes</code>: an optional list of GCP <code>scopes</code>_ for which to generate our token.\nOnly valid (and required!) for <a href=\"https://console.cloud.google.com/iam-admin/serviceaccounts\">service account</a>\nauthentication.</li>\n</ul>\n"}, {"fullname": "gcloud.aio.auth.AioSession", "modulename": "gcloud.aio.auth", "qualname": "AioSession", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.aio.auth.session.BaseSession"}, {"fullname": "gcloud.aio.auth.AioSession.session", "modulename": "gcloud.aio.auth", "qualname": "AioSession.session", "kind": "variable", "doc": "<p></p>\n", "annotation": ": aiohttp.client.ClientSession"}, {"fullname": "gcloud.aio.auth.AioSession.post", "modulename": "gcloud.aio.auth", "qualname": "AioSession.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientTimeout</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client_reqrep</span><span class=\"o\">.</span><span class=\"n\">ClientResponse</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.AioSession.get", "modulename": "gcloud.aio.auth", "qualname": "AioSession.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientTimeout</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client_reqrep</span><span class=\"o\">.</span><span class=\"n\">ClientResponse</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.AioSession.patch", "modulename": "gcloud.aio.auth", "qualname": "AioSession.patch", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientTimeout</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client_reqrep</span><span class=\"o\">.</span><span class=\"n\">ClientResponse</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.AioSession.put", "modulename": "gcloud.aio.auth", "qualname": "AioSession.put", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientTimeout</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client_reqrep</span><span class=\"o\">.</span><span class=\"n\">ClientResponse</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.AioSession.delete", "modulename": "gcloud.aio.auth", "qualname": "AioSession.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientTimeout</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client_reqrep</span><span class=\"o\">.</span><span class=\"n\">ClientResponse</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.AioSession.request", "modulename": "gcloud.aio.auth", "qualname": "AioSession.request", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">auto_raise_for_status</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client_reqrep</span><span class=\"o\">.</span><span class=\"n\">ClientResponse</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.AioSession.close", "modulename": "gcloud.aio.auth", "qualname": "AioSession.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.BUILD_GCLOUD_REST", "modulename": "gcloud.aio.auth", "qualname": "BUILD_GCLOUD_REST", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, {"fullname": "gcloud.aio.auth.IamClient", "modulename": "gcloud.aio.auth", "qualname": "IamClient", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.auth.IamClient.__init__", "modulename": "gcloud.aio.auth", "qualname": "IamClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.auth.IamClient.session", "modulename": "gcloud.aio.auth", "qualname": "IamClient.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.auth.IamClient.token", "modulename": "gcloud.aio.auth", "qualname": "IamClient.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.auth.IamClient.headers", "modulename": "gcloud.aio.auth", "qualname": "IamClient.headers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.IamClient.service_account_email", "modulename": "gcloud.aio.auth", "qualname": "IamClient.service_account_email", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, {"fullname": "gcloud.aio.auth.IamClient.get_public_key", "modulename": "gcloud.aio.auth", "qualname": "IamClient.get_public_key", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_account_email</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.IamClient.list_public_keys", "modulename": "gcloud.aio.auth", "qualname": "IamClient.list_public_keys", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">service_account_email</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.IamClient.sign_blob", "modulename": "gcloud.aio.auth", "qualname": "IamClient.sign_blob", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">service_account_email</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">delegates</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.IamClient.close", "modulename": "gcloud.aio.auth", "qualname": "IamClient.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.Token", "modulename": "gcloud.aio.auth", "qualname": "Token", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.auth.Token.__init__", "modulename": "gcloud.aio.auth", "qualname": "Token.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scopes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.auth.Token.service_data", "modulename": "gcloud.aio.auth", "qualname": "Token.service_data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.auth.Token.session", "modulename": "gcloud.aio.auth", "qualname": "Token.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.auth.Token.scopes", "modulename": "gcloud.aio.auth", "qualname": "Token.scopes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.auth.Token.access_token", "modulename": "gcloud.aio.auth", "qualname": "Token.access_token", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, {"fullname": "gcloud.aio.auth.Token.access_token_duration", "modulename": "gcloud.aio.auth", "qualname": "Token.access_token_duration", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.auth.Token.access_token_acquired_at", "modulename": "gcloud.aio.auth", "qualname": "Token.access_token_acquired_at", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.auth.Token.acquiring", "modulename": "gcloud.aio.auth", "qualname": "Token.acquiring", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[_asyncio.Future[Any]]"}, {"fullname": "gcloud.aio.auth.Token.get_project", "modulename": "gcloud.aio.auth", "qualname": "Token.get_project", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.Token.get", "modulename": "gcloud.aio.auth", "qualname": "Token.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.Token.ensure_token", "modulename": "gcloud.aio.auth", "qualname": "Token.ensure_token", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.Token.acquire_access_token", "modulename": "gcloud.aio.auth", "qualname": "Token.acquire_access_token", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.Token.close", "modulename": "gcloud.aio.auth", "qualname": "Token.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.auth.decode", "modulename": "gcloud.aio.auth", "qualname": "decode", "kind": "function", "doc": "<p>Modified Base64 for URL variants exist, where the + and / characters of\nstandard Base64 are respectively replaced by - and _.</p>\n\n<p>See <a href=\"https://en.wikipedia.org/wiki/Base64#URL_applications\">https://en.wikipedia.org/wiki/Base64#URL_applications</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.auth.encode", "modulename": "gcloud.aio.auth", "qualname": "encode", "kind": "function", "doc": "<p>Modified Base64 for URL variants exist, where the + and / characters of\nstandard Base64 are respectively replaced by - and _.</p>\n\n<p>See <a href=\"https://en.wikipedia.org/wiki/Base64#URL_applications\">https://en.wikipedia.org/wiki/Base64#URL_applications</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.bigquery", "modulename": "gcloud.aio.bigquery", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Bigquery\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-aio-bigquery\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>We're still working on documentation -- for now, you can use the\n<a href=\"https://github.com/talkiq/gcloud-aio/blob/master/bigquery/tests/integration/smoke_test.py\">smoke test</a> as an example.</p>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-aio-bigquery</code> along with a\nlocal emulator. Setting the <code>$BIGQUERY_EMULATOR_HOST</code> environment variable to\nthe address of your emulator should be enough to do the trick.</p>\n"}, {"fullname": "gcloud.aio.bigquery.Dataset", "modulename": "gcloud.aio.bigquery", "qualname": "Dataset", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.aio.bigquery.bigquery.BigqueryBase"}, {"fullname": "gcloud.aio.bigquery.Dataset.__init__", "modulename": "gcloud.aio.bigquery", "qualname": "Dataset.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.bigquery.Dataset.dataset_name", "modulename": "gcloud.aio.bigquery", "qualname": "Dataset.dataset_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.bigquery.Dataset.list_tables", "modulename": "gcloud.aio.bigquery", "qualname": "Dataset.list_tables", "kind": "function", "doc": "<p>List tables in a dataset.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Dataset.list_datasets", "modulename": "gcloud.aio.bigquery", "qualname": "Dataset.list_datasets", "kind": "function", "doc": "<p>List datasets in current project.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Dataset.get", "modulename": "gcloud.aio.bigquery", "qualname": "Dataset.get", "kind": "function", "doc": "<p>Get a specific dataset in current project.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Dataset.insert", "modulename": "gcloud.aio.bigquery", "qualname": "Dataset.insert", "kind": "function", "doc": "<p>Create datasets in current project.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Dataset.delete", "modulename": "gcloud.aio.bigquery", "qualname": "Dataset.delete", "kind": "function", "doc": "<p>Delete datasets in current project.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Disposition", "modulename": "gcloud.aio.bigquery", "qualname": "Disposition", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.bigquery.Disposition.WRITE_APPEND", "modulename": "gcloud.aio.bigquery", "qualname": "Disposition.WRITE_APPEND", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Disposition.WRITE_APPEND: &#x27;WRITE_APPEND&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.Disposition.WRITE_EMPTY", "modulename": "gcloud.aio.bigquery", "qualname": "Disposition.WRITE_EMPTY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Disposition.WRITE_EMPTY: &#x27;WRITE_EMPTY&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.Disposition.WRITE_TRUNCATE", "modulename": "gcloud.aio.bigquery", "qualname": "Disposition.WRITE_TRUNCATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Disposition.WRITE_TRUNCATE: &#x27;WRITE_TRUNCATE&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.Job", "modulename": "gcloud.aio.bigquery", "qualname": "Job", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.aio.bigquery.bigquery.BigqueryBase"}, {"fullname": "gcloud.aio.bigquery.Job.__init__", "modulename": "gcloud.aio.bigquery", "qualname": "Job.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.bigquery.Job.job_id", "modulename": "gcloud.aio.bigquery", "qualname": "Job.job_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.bigquery.Job.get_job", "modulename": "gcloud.aio.bigquery", "qualname": "Job.get_job", "kind": "function", "doc": "<p>Get the specified job resource by job ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Job.get_query_results", "modulename": "gcloud.aio.bigquery", "qualname": "Job.get_query_results", "kind": "function", "doc": "<p>Get the specified jobQueryResults by job ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Job.cancel", "modulename": "gcloud.aio.bigquery", "qualname": "Job.cancel", "kind": "function", "doc": "<p>Cancel the specified job by job ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Job.query", "modulename": "gcloud.aio.bigquery", "qualname": "Job.query", "kind": "function", "doc": "<p>Runs a query synchronously and returns query results if completes\nwithin a specified timeout.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query_request</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Job.insert", "modulename": "gcloud.aio.bigquery", "qualname": "Job.insert", "kind": "function", "doc": "<p>Insert a new asynchronous job.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">job</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Job.insert_via_query", "modulename": "gcloud.aio.bigquery", "qualname": "Job.insert_via_query", "kind": "function", "doc": "<p>Create table as a result of the query</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">write_disposition</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">Disposition</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Disposition</span><span class=\"o\">.</span><span class=\"n\">WRITE_EMPTY</span><span class=\"p\">:</span> <span class=\"s1\">&#39;WRITE_EMPTY&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">use_query_cache</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">dry_run</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">use_legacy_sql</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">destination_table</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Job.result", "modulename": "gcloud.aio.bigquery", "qualname": "Job.result", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Job.delete", "modulename": "gcloud.aio.bigquery", "qualname": "Job.delete", "kind": "function", "doc": "<p>Delete the specified job by job ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.SCOPES", "modulename": "gcloud.aio.bigquery", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/bigquery.insertdata&#x27;, &#x27;https://www.googleapis.com/auth/bigquery&#x27;]"}, {"fullname": "gcloud.aio.bigquery.SchemaUpdateOption", "modulename": "gcloud.aio.bigquery", "qualname": "SchemaUpdateOption", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.bigquery.SchemaUpdateOption.ALLOW_FIELD_ADDITION", "modulename": "gcloud.aio.bigquery", "qualname": "SchemaUpdateOption.ALLOW_FIELD_ADDITION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SchemaUpdateOption.ALLOW_FIELD_ADDITION: &#x27;ALLOW_FIELD_ADDITION&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.SchemaUpdateOption.ALLOW_FIELD_RELAXATION", "modulename": "gcloud.aio.bigquery", "qualname": "SchemaUpdateOption.ALLOW_FIELD_RELAXATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SchemaUpdateOption.ALLOW_FIELD_RELAXATION: &#x27;ALLOW_FIELD_RELAXATION&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.SourceFormat", "modulename": "gcloud.aio.bigquery", "qualname": "SourceFormat", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.bigquery.SourceFormat.AVRO", "modulename": "gcloud.aio.bigquery", "qualname": "SourceFormat.AVRO", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.AVRO: &#x27;AVRO&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.SourceFormat.CSV", "modulename": "gcloud.aio.bigquery", "qualname": "SourceFormat.CSV", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.CSV: &#x27;CSV&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.SourceFormat.DATASTORE_BACKUP", "modulename": "gcloud.aio.bigquery", "qualname": "SourceFormat.DATASTORE_BACKUP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.DATASTORE_BACKUP: &#x27;DATASTORE_BACKUP&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.SourceFormat.NEWLINE_DELIMITED_JSON", "modulename": "gcloud.aio.bigquery", "qualname": "SourceFormat.NEWLINE_DELIMITED_JSON", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.NEWLINE_DELIMITED_JSON: &#x27;NEWLINE_DELIMITED_JSON&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.SourceFormat.ORC", "modulename": "gcloud.aio.bigquery", "qualname": "SourceFormat.ORC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.ORC: &#x27;ORC&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.SourceFormat.PARQUET", "modulename": "gcloud.aio.bigquery", "qualname": "SourceFormat.PARQUET", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.PARQUET: &#x27;PARQUET&#x27;&gt;"}, {"fullname": "gcloud.aio.bigquery.Table", "modulename": "gcloud.aio.bigquery", "qualname": "Table", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.aio.bigquery.bigquery.BigqueryBase"}, {"fullname": "gcloud.aio.bigquery.Table.__init__", "modulename": "gcloud.aio.bigquery", "qualname": "Table.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">table_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.bigquery.Table.dataset_name", "modulename": "gcloud.aio.bigquery", "qualname": "Table.dataset_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.bigquery.Table.table_name", "modulename": "gcloud.aio.bigquery", "qualname": "Table.table_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.bigquery.Table.create", "modulename": "gcloud.aio.bigquery", "qualname": "Table.create", "kind": "function", "doc": "<p>Create the table specified by tableId from the dataset.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">table</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Table.patch", "modulename": "gcloud.aio.bigquery", "qualname": "Table.patch", "kind": "function", "doc": "<p>Patch an existing table specified by tableId from the dataset.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">table</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Table.delete", "modulename": "gcloud.aio.bigquery", "qualname": "Table.delete", "kind": "function", "doc": "<p>Deletes the table specified by tableId from the dataset.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Table.get", "modulename": "gcloud.aio.bigquery", "qualname": "Table.get", "kind": "function", "doc": "<p>Gets the specified table resource by table ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Table.insert", "modulename": "gcloud.aio.bigquery", "qualname": "Table.insert", "kind": "function", "doc": "<p>Streams data into BigQuery</p>\n\n<p>By default, each row is assigned a unique insertId. This can be\ncustomized by supplying an <code>insert_id_fn</code> which takes a row and\nreturns an insertId.</p>\n\n<p>In cases where at least one row has successfully been inserted and at\nleast one row has failed to be inserted, the Google API will return a\n2xx (successful) response along with an <code>insertErrors</code> key in the\nresponse JSON containing details on the failing rows.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">rows</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">skip_invalid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_unknown</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">template_suffix</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">insert_id_fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Table.insert_via_copy", "modulename": "gcloud.aio.bigquery", "qualname": "Table.insert_via_copy", "kind": "function", "doc": "<p>Copy BQ table to another table in BQ</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">destination_project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">destination_dataset</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">destination_table</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">Job</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Table.insert_via_load", "modulename": "gcloud.aio.bigquery", "qualname": "Table.insert_via_load", "kind": "function", "doc": "<p>Loads entities from storage to BigQuery.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">source_uris</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">autodetect</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">source_format</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">SourceFormat</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">SourceFormat</span><span class=\"o\">.</span><span class=\"n\">CSV</span><span class=\"p\">:</span> <span class=\"s1\">&#39;CSV&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">write_disposition</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">Disposition</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Disposition</span><span class=\"o\">.</span><span class=\"n\">WRITE_TRUNCATE</span><span class=\"p\">:</span> <span class=\"s1\">&#39;WRITE_TRUNCATE&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_unknown_values</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">schema_update_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">SchemaUpdateOption</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">Job</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Table.insert_via_query", "modulename": "gcloud.aio.bigquery", "qualname": "Table.insert_via_query", "kind": "function", "doc": "<p>Create table as a result of the query</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">write_disposition</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">Disposition</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Disposition</span><span class=\"o\">.</span><span class=\"n\">WRITE_EMPTY</span><span class=\"p\">:</span> <span class=\"s1\">&#39;WRITE_EMPTY&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">use_query_cache</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">dry_run</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">Job</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.Table.list_tabledata", "modulename": "gcloud.aio.bigquery", "qualname": "Table.list_tabledata", "kind": "function", "doc": "<p>List the content of a table in rows.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.bigquery.query_response_to_dict", "modulename": "gcloud.aio.bigquery", "qualname": "query_response_to_dict", "kind": "function", "doc": "<p>Convert a query response to a dictionary.</p>\n\n<p>API responses for job queries are packed into a difficult-to-use format.\nThis method deserializes a response into a List of rows, with each row\nbeing a dictionary of field names to the row's value.</p>\n\n<p>This method also handles converting the values according to the schema\ndefined in the response (eg. into builtin python types).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore", "modulename": "gcloud.aio.datastore", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Datastore\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-aio-datastore\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>We're still working on documentation; for now, this should help get you\nstarted:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Datastore</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Direction</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Filter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">GQLQuery</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Key</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">PathElement</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">PropertyFilter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">PropertyFilterOperator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">PropertyOrder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">Datastore</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcloud-project&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/path/to/creds.json&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">key1</span> <span class=\"o\">=</span> <span class=\"n\">Key</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcloud-project&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">PathElement</span><span class=\"p\">(</span><span class=\"s1\">&#39;Kind&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;entityname&#39;</span><span class=\"p\">)])</span>\n<span class=\"n\">key2</span> <span class=\"o\">=</span> <span class=\"n\">Key</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcloud-project&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">PathElement</span><span class=\"p\">(</span><span class=\"s1\">&#39;Kind&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;entityname2&#39;</span><span class=\"p\">)])</span>\n\n<span class=\"c1\"># batched lookups</span>\n<span class=\"n\">entities</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">lookup</span><span class=\"p\">([</span><span class=\"n\">key1</span><span class=\"p\">,</span> <span class=\"n\">key2</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># convenience functions for any datastore mutations</span>\n<span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;a_boolean&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meaning_of_life&#39;</span><span class=\"p\">:</span> <span class=\"mi\">41</span><span class=\"p\">})</span>\n<span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;a_boolean&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meaning_of_life&#39;</span><span class=\"p\">:</span> <span class=\"mi\">42</span><span class=\"p\">})</span>\n<span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">upsert</span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;animal&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;aardvark&#39;</span><span class=\"p\">})</span>\n<span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or build your own mutation sequences with full transaction support</span>\n<span class=\"n\">transaction</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">beginTransaction</span><span class=\"p\">()</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">mutations</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">make_mutation</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"o\">.</span><span class=\"n\">INSERT</span><span class=\"p\">,</span> <span class=\"n\">key1</span><span class=\"p\">,</span>\n                         <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;animal&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;sloth&#39;</span><span class=\"p\">}),</span>\n        <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">make_mutation</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"o\">.</span><span class=\"n\">UPSERT</span><span class=\"p\">,</span> <span class=\"n\">key1</span><span class=\"p\">,</span>\n                         <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;animal&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;aardvark&#39;</span><span class=\"p\">}),</span>\n        <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">make_mutation</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"o\">.</span><span class=\"n\">INSERT</span><span class=\"p\">,</span> <span class=\"n\">key2</span><span class=\"p\">,</span>\n                         <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;animal&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;aardvark&#39;</span><span class=\"p\">}),</span>\n    <span class=\"p\">]</span>\n    <span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">(</span><span class=\"n\">transaction</span><span class=\"p\">,</span> <span class=\"n\">mutations</span><span class=\"o\">=</span><span class=\"n\">mutations</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">rollback</span><span class=\"p\">(</span><span class=\"n\">transaction</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># support for partial keys</span>\n<span class=\"n\">partial_key</span> <span class=\"o\">=</span> <span class=\"n\">Key</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcloud-project&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">PathElement</span><span class=\"p\">(</span><span class=\"s1\">&#39;Kind&#39;</span><span class=\"p\">)])</span>\n<span class=\"c1\"># and ID allocation or reservation</span>\n<span class=\"n\">allocated_keys</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">allocateIds</span><span class=\"p\">([</span><span class=\"n\">partial_key</span><span class=\"p\">])</span>\n<span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">reserveIds</span><span class=\"p\">(</span><span class=\"n\">allocated_keys</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># query support</span>\n<span class=\"n\">property_filter</span> <span class=\"o\">=</span> <span class=\"n\">PropertyFilter</span><span class=\"p\">(</span><span class=\"n\">prop</span><span class=\"o\">=</span><span class=\"s1\">&#39;answer&#39;</span><span class=\"p\">,</span>\n                                 <span class=\"n\">operator</span><span class=\"o\">=</span><span class=\"n\">PropertyFilterOperator</span><span class=\"o\">.</span><span class=\"n\">EQUAL</span><span class=\"p\">,</span>\n                                 <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">))</span>\n<span class=\"n\">property_order</span> <span class=\"o\">=</span> <span class=\"n\">PropertyOrder</span><span class=\"p\">(</span><span class=\"n\">prop</span><span class=\"o\">=</span><span class=\"s1\">&#39;length&#39;</span><span class=\"p\">,</span>\n                               <span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DESCENDING</span><span class=\"p\">)</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"s1\">&#39;the_meaning_of_life&#39;</span><span class=\"p\">,</span>\n              <span class=\"n\">query_filter</span><span class=\"o\">=</span><span class=\"n\">Filter</span><span class=\"p\">(</span><span class=\"n\">property_filter</span><span class=\"p\">),</span>\n              <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"n\">property_order</span><span class=\"p\">)</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">runQuery</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># alternatively, query support using GQL</span>\n<span class=\"n\">gql_query</span> <span class=\"o\">=</span> <span class=\"n\">GQLQuery</span><span class=\"p\">(</span><span class=\"s1\">&#39;SELECT * FROM meaning_of_life WHERE answer = @answer&#39;</span><span class=\"p\">,</span>\n                     <span class=\"n\">named_bindings</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;answer&#39;</span><span class=\"p\">:</span> <span class=\"mi\">42</span><span class=\"p\">})</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">runQuery</span><span class=\"p\">(</span><span class=\"n\">gql_query</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># close the HTTP session</span>\n<span class=\"c1\"># Note that other options include:</span>\n<span class=\"c1\"># * providing your own session: `Datastore(.., session=session)`</span>\n<span class=\"c1\"># * using a context manager: `async with Datastore(..) as ds:`</span>\n<span class=\"k\">await</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"custom-subclasses\">Custom Subclasses</h2>\n\n<p><code>gcloud-aio-datastore</code> provides class interfaces mirroring all official Google\nAPI types, ie. <code>Key</code> and <code>PathElement</code>, <code>Entity</code> and <code>EntityResult</code>,\n<code>QueryResultBatch</code>, and <code>Value</code>. These types will be returned from arbitrary\nDatastore operations, for example <code>Datastore.allocateIds(...)</code> will return a\nlist of <code>Key</code> entities.</p>\n\n<p>For advanced usage, all of these datatypes may be overloaded. A common use-case\nmay be to deserialize entities into more specific classes. For example, given a\ncustom entity class such as:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MyEntityKind</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Entity</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">key</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_an_aardvark</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">properties</span> <span class=\"ow\">or</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;aardvark&#39;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;I&#39;m an aardvark!&quot;</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_an_aardvark</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;Sorry, nope&quot;</span>\n</code></pre>\n</div>\n\n<p>We can then configure <code>gcloud-aio-datastore</code> to serialize/deserialize from this\ncustom entity class with:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MyCustomDatastore</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">):</span>\n    <span class=\"n\">entity_result_kind</span><span class=\"o\">.</span><span class=\"n\">entity_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyEntityKind</span>\n</code></pre>\n</div>\n\n<p>The full list of classes which may be overridden in this way is:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MyVeryCustomDatastore</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">):</span>\n    <span class=\"n\">datastore_operation_kind</span> <span class=\"o\">=</span> <span class=\"n\">DatastoreOperation</span>\n    <span class=\"n\">entity_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">EntityResult</span>\n    <span class=\"n\">entity_result_kind</span><span class=\"o\">.</span><span class=\"n\">entity_kind</span> <span class=\"o\">=</span> <span class=\"n\">Entity</span>\n    <span class=\"n\">entity_result_kind</span><span class=\"o\">.</span><span class=\"n\">entity_kind</span><span class=\"o\">.</span><span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">Key</span>\n    <span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">Key</span>\n    <span class=\"n\">key_kind</span><span class=\"o\">.</span><span class=\"n\">path_element_kind</span> <span class=\"o\">=</span> <span class=\"n\">PathElement</span>\n    <span class=\"n\">mutation_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">MutationResult</span>\n    <span class=\"n\">mutation_result_kind</span><span class=\"o\">.</span><span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">Key</span>\n    <span class=\"n\">query_result_batch_kind</span> <span class=\"o\">=</span> <span class=\"n\">QueryResultBatch</span>\n    <span class=\"n\">query_result_batch_kind</span><span class=\"o\">.</span><span class=\"n\">entity_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">EntityResult</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">Value</span>\n    <span class=\"n\">value_kind</span><span class=\"o\">.</span><span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">Key</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyVeryCustomQuery</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">):</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">Value</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyVeryCustomGQLQuery</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">GQLQuery</span><span class=\"p\">):</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">Value</span>\n</code></pre>\n</div>\n\n<p>You can then drop-in the <code>MyVeryCustomDatastore</code> class anywhere where you\npreviously used <code>Datastore</code> and do the same for <code>Query</code> and <code>GQLQuery</code>.</p>\n\n<p>To override any sub-key, you'll need to override any parents which use it. For\nexample, if you want to use a custom Key kind and be able to use queries with\nit, you will need to implement your own <code>Value</code>, <code>Query</code>, and <code>GQLQuery</code>\nclasses and wire them up to the rest of the custom classes:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MyKey</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyValue</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">):</span>\n    <span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyKey</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyEntity</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Entity</span><span class=\"p\">):</span>\n    <span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyKey</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyValue</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyEntityResult</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">EntityResult</span><span class=\"p\">):</span>\n    <span class=\"n\">entity_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyEntity</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyQueryResultBatch</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">QueryResultBatch</span><span class=\"p\">):</span>\n    <span class=\"n\">entity_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyEntityResult</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyDatastore</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">):</span>\n    <span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyKey</span>\n    <span class=\"n\">entity_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyEntityResult</span>\n    <span class=\"n\">query_result_batch</span> <span class=\"o\">=</span> <span class=\"n\">MyQueryResultBatch</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyValue</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyQuery</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">):</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyValue</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyGQLQuery</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">GQLQuery</span><span class=\"p\">):</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyValue</span>\n</code></pre>\n</div>\n"}, {"fullname": "gcloud.aio.datastore.CompositeFilter", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilter", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.aio.datastore.filter.BaseFilter"}, {"fullname": "gcloud.aio.datastore.CompositeFilter.__init__", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">operator</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">CompositeFilterOperator</span>,</span><span class=\"param\">\t<span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">Filter</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.CompositeFilter.json_key", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilter.json_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;compositeFilter&#x27;"}, {"fullname": "gcloud.aio.datastore.CompositeFilter.operator", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilter.operator", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.CompositeFilter.filters", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilter.filters", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.CompositeFilter.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilter.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">CompositeFilter</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.CompositeFilter.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilter.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.CompositeFilterOperator", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilterOperator", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.datastore.CompositeFilterOperator.AND", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilterOperator.AND", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CompositeFilterOperator.AND: &#x27;AND&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.CompositeFilterOperator.UNSPECIFIED", "modulename": "gcloud.aio.datastore", "qualname": "CompositeFilterOperator.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CompositeFilterOperator.UNSPECIFIED: &#x27;OPERATOR_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Consistency", "modulename": "gcloud.aio.datastore", "qualname": "Consistency", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.datastore.Consistency.EVENTUAL", "modulename": "gcloud.aio.datastore", "qualname": "Consistency.EVENTUAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Consistency.EVENTUAL: &#x27;EVENTUAL&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Consistency.STRONG", "modulename": "gcloud.aio.datastore", "qualname": "Consistency.STRONG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Consistency.STRONG: &#x27;STRONG&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Consistency.UNSPECIFIED", "modulename": "gcloud.aio.datastore", "qualname": "Consistency.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Consistency.UNSPECIFIED: &#x27;READ_CONSISTENCY_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Datastore", "modulename": "gcloud.aio.datastore", "qualname": "Datastore", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Datastore.__init__", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">namespace</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.Datastore.datastore_operation_kind", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.datastore_operation_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.datastore_operation.DatastoreOperation&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Datastore.entity_result_kind", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.entity_result_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.entity.EntityResult&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Datastore.key_kind", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.key_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.key.Key&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Datastore.mutation_result_kind", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.mutation_result_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.mutation.MutationResult&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Datastore.query_result_batch_kind", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.query_result_batch_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.query.QueryResultBatch&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Datastore.value_kind", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.value_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.value.Value&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Datastore.namespace", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.namespace", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Datastore.session", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Datastore.token", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Datastore.project", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.project", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.headers", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.headers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.make_mutation", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.make_mutation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">operation</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Operation</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Datastore.allocateIds", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.allocateIds", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.beginTransaction", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.beginTransaction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.commit", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.commit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">mutations</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">transaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Mode</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Mode</span><span class=\"o\">.</span><span class=\"n\">TRANSACTIONAL</span><span class=\"p\">:</span> <span class=\"s1\">&#39;TRANSACTIONAL&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.export", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.export", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">output_bucket_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">kinds</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">namespaces</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">datastore_operation</span><span class=\"o\">.</span><span class=\"n\">DatastoreOperation</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.get_datastore_operation", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.get_datastore_operation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">datastore_operation</span><span class=\"o\">.</span><span class=\"n\">DatastoreOperation</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.lookup", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.lookup", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">transaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">newTransaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">transaction_options</span><span class=\"o\">.</span><span class=\"n\">TransactionOptions</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">consistency</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Consistency</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Consistency</span><span class=\"o\">.</span><span class=\"n\">STRONG</span><span class=\"p\">:</span> <span class=\"s1\">&#39;STRONG&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">EntityResult</span><span class=\"p\">,</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]]]]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.reserveIds", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.reserveIds", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">database_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.rollback", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.rollback", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">transaction</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.runQuery", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.runQuery", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">BaseQuery</span>,</span><span class=\"param\">\t<span class=\"n\">transaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">consistency</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Consistency</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Consistency</span><span class=\"o\">.</span><span class=\"n\">EVENTUAL</span><span class=\"p\">:</span> <span class=\"s1\">&#39;EVENTUAL&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">QueryResultBatch</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.delete", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.insert", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.insert", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.update", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.upsert", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.upsert", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.operate", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.operate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">operation</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Operation</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.Datastore.close", "modulename": "gcloud.aio.datastore", "qualname": "Datastore.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.datastore.DatastoreOperation", "modulename": "gcloud.aio.datastore", "qualname": "DatastoreOperation", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.DatastoreOperation.__init__", "modulename": "gcloud.aio.datastore", "qualname": "DatastoreOperation.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">done</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.DatastoreOperation.name", "modulename": "gcloud.aio.datastore", "qualname": "DatastoreOperation.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.DatastoreOperation.done", "modulename": "gcloud.aio.datastore", "qualname": "DatastoreOperation.done", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.DatastoreOperation.metadata", "modulename": "gcloud.aio.datastore", "qualname": "DatastoreOperation.metadata", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.DatastoreOperation.error", "modulename": "gcloud.aio.datastore", "qualname": "DatastoreOperation.error", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.DatastoreOperation.response", "modulename": "gcloud.aio.datastore", "qualname": "DatastoreOperation.response", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.DatastoreOperation.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "DatastoreOperation.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">datastore_operation</span><span class=\"o\">.</span><span class=\"n\">DatastoreOperation</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.DatastoreOperation.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "DatastoreOperation.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Direction", "modulename": "gcloud.aio.datastore", "qualname": "Direction", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.datastore.Direction.ASCENDING", "modulename": "gcloud.aio.datastore", "qualname": "Direction.ASCENDING", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.ASCENDING: &#x27;ASCENDING&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Direction.DESCENDING", "modulename": "gcloud.aio.datastore", "qualname": "Direction.DESCENDING", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.DESCENDING: &#x27;DESCENDING&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Direction.UNSPECIFIED", "modulename": "gcloud.aio.datastore", "qualname": "Direction.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.UNSPECIFIED: &#x27;DIRECTION_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Entity", "modulename": "gcloud.aio.datastore", "qualname": "Entity", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Entity.__init__", "modulename": "gcloud.aio.datastore", "qualname": "Entity.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.Entity.key_kind", "modulename": "gcloud.aio.datastore", "qualname": "Entity.key_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.key.Key&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Entity.value_kind", "modulename": "gcloud.aio.datastore", "qualname": "Entity.value_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.value.Value&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Entity.key", "modulename": "gcloud.aio.datastore", "qualname": "Entity.key", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Entity.properties", "modulename": "gcloud.aio.datastore", "qualname": "Entity.properties", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Entity.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "Entity.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">Entity</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Entity.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "Entity.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.EntityResult", "modulename": "gcloud.aio.datastore", "qualname": "EntityResult", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.EntityResult.__init__", "modulename": "gcloud.aio.datastore", "qualname": "EntityResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">entity</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">Entity</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.EntityResult.entity_kind", "modulename": "gcloud.aio.datastore", "qualname": "EntityResult.entity_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.entity.Entity&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.EntityResult.entity", "modulename": "gcloud.aio.datastore", "qualname": "EntityResult.entity", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.EntityResult.version", "modulename": "gcloud.aio.datastore", "qualname": "EntityResult.version", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.EntityResult.cursor", "modulename": "gcloud.aio.datastore", "qualname": "EntityResult.cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.EntityResult.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "EntityResult.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">EntityResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.EntityResult.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "EntityResult.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Filter", "modulename": "gcloud.aio.datastore", "qualname": "Filter", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Filter.__init__", "modulename": "gcloud.aio.datastore", "qualname": "Filter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inner_filter</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">BaseFilter</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.Filter.inner_filter", "modulename": "gcloud.aio.datastore", "qualname": "Filter.inner_filter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Filter.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "Filter.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">Filter</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Filter.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "Filter.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.GQLCursor", "modulename": "gcloud.aio.datastore", "qualname": "GQLCursor", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.GQLCursor.__init__", "modulename": "gcloud.aio.datastore", "qualname": "GQLCursor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.GQLCursor.value", "modulename": "gcloud.aio.datastore", "qualname": "GQLCursor.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.GQLQuery", "modulename": "gcloud.aio.datastore", "qualname": "GQLQuery", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.aio.datastore.query.BaseQuery"}, {"fullname": "gcloud.aio.datastore.GQLQuery.__init__", "modulename": "gcloud.aio.datastore", "qualname": "GQLQuery.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query_string</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">allow_literals</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">named_bindings</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">positional_bindings</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.GQLQuery.json_key", "modulename": "gcloud.aio.datastore", "qualname": "GQLQuery.json_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;gqlQuery&#x27;"}, {"fullname": "gcloud.aio.datastore.GQLQuery.query_string", "modulename": "gcloud.aio.datastore", "qualname": "GQLQuery.query_string", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.GQLQuery.allow_literals", "modulename": "gcloud.aio.datastore", "qualname": "GQLQuery.allow_literals", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.GQLQuery.named_bindings", "modulename": "gcloud.aio.datastore", "qualname": "GQLQuery.named_bindings", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.GQLQuery.positional_bindings", "modulename": "gcloud.aio.datastore", "qualname": "GQLQuery.positional_bindings", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.GQLQuery.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "GQLQuery.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">GQLQuery</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.GQLQuery.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "GQLQuery.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Key", "modulename": "gcloud.aio.datastore", "qualname": "Key", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Key.__init__", "modulename": "gcloud.aio.datastore", "qualname": "Key.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">PathElement</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">namespace</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.Key.path_element_kind", "modulename": "gcloud.aio.datastore", "qualname": "Key.path_element_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.key.PathElement&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Key.project", "modulename": "gcloud.aio.datastore", "qualname": "Key.project", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Key.namespace", "modulename": "gcloud.aio.datastore", "qualname": "Key.namespace", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Key.path", "modulename": "gcloud.aio.datastore", "qualname": "Key.path", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Key.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "Key.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Key.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "Key.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.LatLng", "modulename": "gcloud.aio.datastore", "qualname": "LatLng", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.LatLng.__init__", "modulename": "gcloud.aio.datastore", "qualname": "LatLng.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lat</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">lon</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.LatLng.lat", "modulename": "gcloud.aio.datastore", "qualname": "LatLng.lat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.LatLng.lon", "modulename": "gcloud.aio.datastore", "qualname": "LatLng.lon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.LatLng.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "LatLng.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">lat_lng</span><span class=\"o\">.</span><span class=\"n\">LatLng</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.LatLng.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "LatLng.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Mode", "modulename": "gcloud.aio.datastore", "qualname": "Mode", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.datastore.Mode.NON_TRANSACTIONAL", "modulename": "gcloud.aio.datastore", "qualname": "Mode.NON_TRANSACTIONAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Mode.NON_TRANSACTIONAL: &#x27;NON_TRANSACTIONAL&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Mode.TRANSACTIONAL", "modulename": "gcloud.aio.datastore", "qualname": "Mode.TRANSACTIONAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Mode.TRANSACTIONAL: &#x27;TRANSACTIONAL&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Mode.UNSPECIFIED", "modulename": "gcloud.aio.datastore", "qualname": "Mode.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Mode.UNSPECIFIED: &#x27;MODE_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.MoreResultsType", "modulename": "gcloud.aio.datastore", "qualname": "MoreResultsType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.datastore.MoreResultsType.MORE_RESULTS_AFTER_CURSOR", "modulename": "gcloud.aio.datastore", "qualname": "MoreResultsType.MORE_RESULTS_AFTER_CURSOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.MORE_RESULTS_AFTER_CURSOR: &#x27;MORE_RESULTS_AFTER_CURSOR&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.MoreResultsType.MORE_RESULTS_AFTER_LIMIT", "modulename": "gcloud.aio.datastore", "qualname": "MoreResultsType.MORE_RESULTS_AFTER_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.MORE_RESULTS_AFTER_LIMIT: &#x27;MORE_RESULTS_AFTER_LIMIT&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.MoreResultsType.NO_MORE_RESULTS", "modulename": "gcloud.aio.datastore", "qualname": "MoreResultsType.NO_MORE_RESULTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.NO_MORE_RESULTS: &#x27;NO_MORE_RESULTS&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.MoreResultsType.NOT_FINISHED", "modulename": "gcloud.aio.datastore", "qualname": "MoreResultsType.NOT_FINISHED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.NOT_FINISHED: &#x27;NOT_FINISHED&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.MoreResultsType.UNSPECIFIED", "modulename": "gcloud.aio.datastore", "qualname": "MoreResultsType.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.UNSPECIFIED: &#x27;MORE_RESULTS_TYPE_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.MutationResult", "modulename": "gcloud.aio.datastore", "qualname": "MutationResult", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.MutationResult.__init__", "modulename": "gcloud.aio.datastore", "qualname": "MutationResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">conflict_detected</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.MutationResult.key_kind", "modulename": "gcloud.aio.datastore", "qualname": "MutationResult.key_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.key.Key&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.MutationResult.key", "modulename": "gcloud.aio.datastore", "qualname": "MutationResult.key", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.MutationResult.version", "modulename": "gcloud.aio.datastore", "qualname": "MutationResult.version", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.MutationResult.conflict_detected", "modulename": "gcloud.aio.datastore", "qualname": "MutationResult.conflict_detected", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.MutationResult.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "MutationResult.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">mutation</span><span class=\"o\">.</span><span class=\"n\">MutationResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.MutationResult.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "MutationResult.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Operation", "modulename": "gcloud.aio.datastore", "qualname": "Operation", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.datastore.Operation.DELETE", "modulename": "gcloud.aio.datastore", "qualname": "Operation.DELETE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Operation.DELETE: &#x27;delete&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Operation.INSERT", "modulename": "gcloud.aio.datastore", "qualname": "Operation.INSERT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Operation.INSERT: &#x27;insert&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Operation.UPDATE", "modulename": "gcloud.aio.datastore", "qualname": "Operation.UPDATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Operation.UPDATE: &#x27;update&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Operation.UPSERT", "modulename": "gcloud.aio.datastore", "qualname": "Operation.UPSERT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Operation.UPSERT: &#x27;upsert&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.PathElement", "modulename": "gcloud.aio.datastore", "qualname": "PathElement", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PathElement.__init__", "modulename": "gcloud.aio.datastore", "qualname": "PathElement.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">id_</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.PathElement.kind", "modulename": "gcloud.aio.datastore", "qualname": "PathElement.kind", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PathElement.id", "modulename": "gcloud.aio.datastore", "qualname": "PathElement.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PathElement.name", "modulename": "gcloud.aio.datastore", "qualname": "PathElement.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PathElement.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "PathElement.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">PathElement</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.PathElement.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "PathElement.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Projection", "modulename": "gcloud.aio.datastore", "qualname": "Projection", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Projection.__init__", "modulename": "gcloud.aio.datastore", "qualname": "Projection.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">prop</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.Projection.prop", "modulename": "gcloud.aio.datastore", "qualname": "Projection.prop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Projection.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "Projection.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">projection</span><span class=\"o\">.</span><span class=\"n\">Projection</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Projection.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "Projection.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.PropertyFilter", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilter", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.aio.datastore.filter.BaseFilter"}, {"fullname": "gcloud.aio.datastore.PropertyFilter.__init__", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prop</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">operator</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">PropertyFilterOperator</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">Value</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.PropertyFilter.json_key", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilter.json_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;propertyFilter&#x27;"}, {"fullname": "gcloud.aio.datastore.PropertyFilter.prop", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilter.prop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PropertyFilter.operator", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilter.operator", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PropertyFilter.value", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilter.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PropertyFilter.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilter.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">PropertyFilter</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.PropertyFilter.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilter.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.PropertyFilterOperator", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilterOperator", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.datastore.PropertyFilterOperator.EQUAL", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilterOperator.EQUAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.EQUAL: &#x27;EQUAL&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.PropertyFilterOperator.GREATER_THAN", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilterOperator.GREATER_THAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.GREATER_THAN: &#x27;GREATER_THAN&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.PropertyFilterOperator.GREATER_THAN_OR_EQUAL", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilterOperator.GREATER_THAN_OR_EQUAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.GREATER_THAN_OR_EQUAL: &#x27;GREATER_THAN_OR_EQUAL&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.PropertyFilterOperator.HAS_ANCESTOR", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilterOperator.HAS_ANCESTOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.HAS_ANCESTOR: &#x27;HAS_ANCESTOR&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.PropertyFilterOperator.LESS_THAN", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilterOperator.LESS_THAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.LESS_THAN: &#x27;LESS_THAN&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.PropertyFilterOperator.LESS_THAN_OR_EQUAL", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilterOperator.LESS_THAN_OR_EQUAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.LESS_THAN_OR_EQUAL: &#x27;LESS_THAN_OR_EQUAL&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.PropertyFilterOperator.UNSPECIFIED", "modulename": "gcloud.aio.datastore", "qualname": "PropertyFilterOperator.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.UNSPECIFIED: &#x27;OPERATOR_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.PropertyOrder", "modulename": "gcloud.aio.datastore", "qualname": "PropertyOrder", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PropertyOrder.__init__", "modulename": "gcloud.aio.datastore", "qualname": "PropertyOrder.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prop</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Direction</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">ASCENDING</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ASCENDING&#39;</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.PropertyOrder.prop", "modulename": "gcloud.aio.datastore", "qualname": "PropertyOrder.prop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PropertyOrder.direction", "modulename": "gcloud.aio.datastore", "qualname": "PropertyOrder.direction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.PropertyOrder.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "PropertyOrder.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">property_order</span><span class=\"o\">.</span><span class=\"n\">PropertyOrder</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.PropertyOrder.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "PropertyOrder.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Query", "modulename": "gcloud.aio.datastore", "qualname": "Query", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.aio.datastore.query.BaseQuery"}, {"fullname": "gcloud.aio.datastore.Query.__init__", "modulename": "gcloud.aio.datastore", "qualname": "Query.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">query_filter</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">Filter</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">property_order</span><span class=\"o\">.</span><span class=\"n\">PropertyOrder</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">start_cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">end_cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">projection</span><span class=\"o\">.</span><span class=\"n\">Projection</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">distinct_on</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.Query.json_key", "modulename": "gcloud.aio.datastore", "qualname": "Query.json_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;query&#x27;"}, {"fullname": "gcloud.aio.datastore.Query.kind", "modulename": "gcloud.aio.datastore", "qualname": "Query.kind", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Query.query_filter", "modulename": "gcloud.aio.datastore", "qualname": "Query.query_filter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Query.orders", "modulename": "gcloud.aio.datastore", "qualname": "Query.orders", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Query.start_cursor", "modulename": "gcloud.aio.datastore", "qualname": "Query.start_cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Query.end_cursor", "modulename": "gcloud.aio.datastore", "qualname": "Query.end_cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Query.offset", "modulename": "gcloud.aio.datastore", "qualname": "Query.offset", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Query.limit", "modulename": "gcloud.aio.datastore", "qualname": "Query.limit", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Query.projection", "modulename": "gcloud.aio.datastore", "qualname": "Query.projection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Query.distinct_on", "modulename": "gcloud.aio.datastore", "qualname": "Query.distinct_on", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Query.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "Query.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">Query</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Query.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "Query.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.__init__", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">end_cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">entity_result_type</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">ResultType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">ResultType</span><span class=\"o\">.</span><span class=\"n\">UNSPECIFIED</span><span class=\"p\">:</span> <span class=\"s1\">&#39;RESULT_TYPE_UNSPECIFIED&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">entity_results</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">EntityResult</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">more_results</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">MoreResultsType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">MoreResultsType</span><span class=\"o\">.</span><span class=\"n\">UNSPECIFIED</span><span class=\"p\">:</span> <span class=\"s1\">&#39;MORE_RESULTS_TYPE_UNSPECIFIED&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">skipped_cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">skipped_results</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">snapshot_version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.entity_result_kind", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.entity_result_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.entity.EntityResult&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.end_cursor", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.end_cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.entity_result_type", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.entity_result_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.entity_results", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.entity_results", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.more_results", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.more_results", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.skipped_cursor", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.skipped_cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.skipped_results", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.skipped_results", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.snapshot_version", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.snapshot_version", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">QueryResultBatch</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.QueryResultBatch.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "QueryResultBatch.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.ReadOnly", "modulename": "gcloud.aio.datastore", "qualname": "ReadOnly", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.ReadOnly.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "ReadOnly.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.ReadWrite", "modulename": "gcloud.aio.datastore", "qualname": "ReadWrite", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.ReadWrite.__init__", "modulename": "gcloud.aio.datastore", "qualname": "ReadWrite.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">previous_transaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.ReadWrite.previous_transaction", "modulename": "gcloud.aio.datastore", "qualname": "ReadWrite.previous_transaction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.ReadWrite.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "ReadWrite.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.ResultType", "modulename": "gcloud.aio.datastore", "qualname": "ResultType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.aio.datastore.ResultType.FULL", "modulename": "gcloud.aio.datastore", "qualname": "ResultType.FULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResultType.FULL: &#x27;FULL&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.ResultType.KEY_ONLY", "modulename": "gcloud.aio.datastore", "qualname": "ResultType.KEY_ONLY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResultType.KEY_ONLY: &#x27;KEY_ONLY&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.ResultType.PROJECTION", "modulename": "gcloud.aio.datastore", "qualname": "ResultType.PROJECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResultType.PROJECTION: &#x27;PROJECTION&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.ResultType.UNSPECIFIED", "modulename": "gcloud.aio.datastore", "qualname": "ResultType.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResultType.UNSPECIFIED: &#x27;RESULT_TYPE_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.SCOPES", "modulename": "gcloud.aio.datastore", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/cloud-platform&#x27;, &#x27;https://www.googleapis.com/auth/datastore&#x27;]"}, {"fullname": "gcloud.aio.datastore.TransactionOptions", "modulename": "gcloud.aio.datastore", "qualname": "TransactionOptions", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.TransactionOptions.__init__", "modulename": "gcloud.aio.datastore", "qualname": "TransactionOptions.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">option</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">transaction_options</span><span class=\"o\">.</span><span class=\"n\">ReadWrite</span><span class=\"p\">,</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">transaction_options</span><span class=\"o\">.</span><span class=\"n\">ReadOnly</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.TransactionOptions.option", "modulename": "gcloud.aio.datastore", "qualname": "TransactionOptions.option", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.TransactionOptions.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "TransactionOptions.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Value", "modulename": "gcloud.aio.datastore", "qualname": "Value", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Value.__init__", "modulename": "gcloud.aio.datastore", "qualname": "Value.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">exclude_from_indexes</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "gcloud.aio.datastore.Value.key_kind", "modulename": "gcloud.aio.datastore", "qualname": "Value.key_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.aio.datastore.key.Key&#x27;&gt;"}, {"fullname": "gcloud.aio.datastore.Value.value", "modulename": "gcloud.aio.datastore", "qualname": "Value.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Value.excludeFromIndexes", "modulename": "gcloud.aio.datastore", "qualname": "Value.excludeFromIndexes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.datastore.Value.from_repr", "modulename": "gcloud.aio.datastore", "qualname": "Value.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">Value</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.datastore.Value.to_repr", "modulename": "gcloud.aio.datastore", "qualname": "Value.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.kms", "modulename": "gcloud.aio.kms", "kind": "module", "doc": "<p>This library implements various methods for working with the Google KMS APIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-aio-kms\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>We're still working on more complete documentation, but roughly you can do:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.kms</span> <span class=\"kn\">import</span> <span class=\"n\">KMS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.kms</span> <span class=\"kn\">import</span> <span class=\"n\">decode</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.kms</span> <span class=\"kn\">import</span> <span class=\"n\">encode</span>\n\n<span class=\"n\">kms</span> <span class=\"o\">=</span> <span class=\"n\">KMS</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-kms-project&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;my-keyring&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;my-key-name&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># encrypt</span>\n<span class=\"n\">plaintext</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;the-best-animal-is-the-aardvark&#39;</span>\n<span class=\"n\">ciphertext</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">kms</span><span class=\"o\">.</span><span class=\"n\">encrypt</span><span class=\"p\">(</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">plaintext</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># decrypt</span>\n<span class=\"k\">assert</span> <span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">kms</span><span class=\"o\">.</span><span class=\"n\">decrypt</span><span class=\"p\">(</span><span class=\"n\">ciphertext</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">plaintext</span>\n\n<span class=\"c1\"># close the HTTP session</span>\n<span class=\"c1\"># Note that other options include:</span>\n<span class=\"c1\"># * providing your own session: `KMS(.., session=session)`</span>\n<span class=\"c1\"># * using a context manager: `async with KMS(..) as kms:`</span>\n<span class=\"k\">await</span> <span class=\"n\">kms</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-aio-kms</code> along with a local\nemulator. Setting the <code>$KMS_EMULATOR_HOST</code> environment variable to the address\nof your emulator should be enough to do the trick.</p>\n"}, {"fullname": "gcloud.aio.kms.decode", "modulename": "gcloud.aio.kms", "qualname": "decode", "kind": "function", "doc": "<p><a href=\"https://en.wikipedia.org/wiki/Base64#URL_applications\">https://en.wikipedia.org/wiki/Base64#URL_applications</a> modified Base64\nfor URL variants exist, where the + and / characters of standard\nBase64 are respectively replaced by - and _</p>\n\n<p>Does not make any assumptions about encoding -- if you're encoding a bytes\npayload then <code>foo == decode(encode(foo))</code>, but if <code>foo</code> is a string you'll\nneed to <code>.decode()</code> manually according to your expected encoding scheme.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.kms.encode", "modulename": "gcloud.aio.kms", "qualname": "encode", "kind": "function", "doc": "<p><a href=\"https://en.wikipedia.org/wiki/Base64#URL_applications\">https://en.wikipedia.org/wiki/Base64#URL_applications</a> modified Base64\nfor URL variants exist, where the + and / characters of standard\nBase64 are respectively replaced by - and _</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.kms.KMS", "modulename": "gcloud.aio.kms", "qualname": "KMS", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.kms.KMS.__init__", "modulename": "gcloud.aio.kms", "qualname": "KMS.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">keyproject</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">keyring</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">keyname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">location</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;global&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.kms.KMS.session", "modulename": "gcloud.aio.kms", "qualname": "KMS.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.kms.KMS.token", "modulename": "gcloud.aio.kms", "qualname": "KMS.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.kms.KMS.headers", "modulename": "gcloud.aio.kms", "qualname": "KMS.headers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.kms.KMS.decrypt", "modulename": "gcloud.aio.kms", "qualname": "KMS.decrypt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ciphertext</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.kms.KMS.encrypt", "modulename": "gcloud.aio.kms", "qualname": "KMS.encrypt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">plaintext</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.kms.KMS.close", "modulename": "gcloud.aio.kms", "qualname": "KMS.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.kms.SCOPES", "modulename": "gcloud.aio.kms", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/cloudkms&#x27;]"}, {"fullname": "gcloud.aio.pubsub", "modulename": "gcloud.aio.pubsub", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Pubsub\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-aio-pubsub\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<h3 id=\"subscriber\">Subscriber</h3>\n\n<p><code>gcloud-aio-pubsub</code> provides <code>SubscriberClient</code> as an interface to call\npubsub's HTTP API:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">SubscriberClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">SubscriberMessage</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">SubscriberClient</span><span class=\"p\">()</span>\n<span class=\"c1\"># create subscription</span>\n<span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_subscription</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;projects/&lt;project_name&gt;/subscriptions/&lt;subscription_name&gt;&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;projects/&lt;project_name&gt;/topics/&lt;topic_name&gt;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pull messages</span>\n<span class=\"n\">messages</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">SubscriberMessage</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">pull</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;projects/&lt;project_name&gt;/subscriptions/&lt;subscription_name&gt;&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">max_messages</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>There's also <code>gcloud.aio.pubsub.subscribe</code> helper function you can use to setup\na pubsub processing pipeline. It is built with <code>asyncio</code> and thus only\navailable in the <code>gcloud-aio-pubsub</code> package. The usage is fairly simple:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">SubscriberClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">subscribe</span>\n\n<span class=\"n\">subscriber_client</span> <span class=\"o\">=</span> <span class=\"n\">SubscriberClient</span><span class=\"p\">()</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handler</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span>\n\n<span class=\"k\">await</span> <span class=\"n\">subscribe</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;projects/&lt;my_project&gt;/subscriptions/&lt;my_subscription&gt;&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">handler</span><span class=\"p\">,</span>\n    <span class=\"n\">subscriber_client</span><span class=\"p\">,</span>\n    <span class=\"n\">num_producers</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">max_messages_per_producer</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n    <span class=\"n\">ack_window</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">,</span>\n    <span class=\"n\">num_tasks_per_consumer</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">enable_nack</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">nack_window</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>While defaults are somewhat sensible, it is highly recommended to performance\ntest your application and tweak function parameter to your specific needs.\nHere's a few hints:</p>\n\n<ul>\n<li><code>handler</code>: An async function that will be called for each message. It should\naccept an instance of <code>SubscriberMessage</code> as its only argument and return\n<code>None</code> if the message should be acked. An exception raised within the handler\nwill result in the message being left to expire, and thus it will be\nredelivered according to your subscription's ack deadline.</li>\n<li><code>num_producers</code>: Number of workers that will be making <code>pull</code> requests to\npubsub. Please note that a worker will only fetch new batch once the\n<code>handler</code> was called for each message from the previous batch. This means\nthat running only a single worker will most likely make your application IO\nbound. If you notice this being an issue don't hesitate to bump this\nparameter.</li>\n<li><code>max_messages_per_producer</code>: Number of pubsub messages a worker will try to\nfetch in a single batch. This value is passed to <code>pull</code> <a href=\"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/pull#request-body\">endpoint</a>\nas <code>maxMessages</code> parameter. A rule of thumb here is the faster your handler\nis the bigger this value should be.</li>\n<li><code>ack_window</code>: Ack requests are handled separately and are done in batches.\nThis parameters specifies how often ack requests will be made. Setting it to\n<code>0.0</code> will effectively disable batching.</li>\n<li><code>num_tasks_per_consumer</code>: How many <code>handle</code> calls a worker can make until it\nblocks to wait for them to return. If you process messages independently from\neach other you should be good with the default value of <code>1</code>. If you do\nsomething fancy (e.g. aggregate messages before processing them), you'll want\na higher pool here. You can think of <code>num_producers * num_tasks_per_consumer</code>\nas an upper limit of how many messages can possibly be within your\napplication state at any given moment.</li>\n<li><code>enable_nack</code>: If enabled messages for which <code>callback</code> raised an exception\nwill be explicitly nacked using <code>modifyAckDeadline</code> endpoint so they can be\nretried immediately.</li>\n<li><code>nack_window</code>: Same as <code>ack_window</code> but for nack requests.</li>\n</ul>\n\n<p>Note that this method was built under the assumption that it is the main thread\nof your application. It may work just fine otherwise, but be aware that the\nusecase of running it in a background thread has not been extensively tested.</p>\n\n<p>As it is generally assumed to run in the foreground, it relies on task\ncancellation to shut itself down (ie. caused by process termination). To cancel\nit from a thread, you can send an <code>asyncio.CancelledError</code> event via\n<code>Task.cancel()</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">subscribe_task</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># snip</span>\n\n<span class=\"n\">subscribe_task</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h3 id=\"prometheus-metrics\">Prometheus Metrics</h3>\n\n<p>If you like pull-based metrics like Prometheus you will be pleased to know that\nthe subscriber records Prometheus metrics in the form\n<code>gcloud_aio_pubsub_&lt;metric&gt;</code>, which will have no effect if you don't use\nPrometheus to scrape app metrics:</p>\n\n<ul>\n<li><code>subscriber_batch_size</code> - [histogram] how many messages were pulled from the\nsubscription in a single batch</li>\n<li><code>subscriber_consume</code> (labels: <code>outcome = {'succeeded', 'cancelled', 'failed',\n'failfast'}</code>) - [counter] a consume operation has completed with a given\noutcome</li>\n<li><code>subscriber_consume_latency_seconds</code> (labels: <code>phase = {'receive',\n'queueing', 'runtime'}</code>) - [histogram] how many seconds taken to receive a\nmessage, while waiting for processing, or to complete the callback</li>\n<li><code>subscriber_batch_status</code> (labels: <code>component = {'acker', 'nacker'}, outcome\n= {'succeeded', 'failed'}</code>) - [counter] a batch has succeeded or failed to be\nacked or nacked</li>\n<li><code>subscriber_messages_processed</code> (labels: <code>component = {'acker', 'nacker'}</code>) -\n[counter] the number of messages that were processed, either by being acked\nor nacked</li>\n<li><code>subscriber_messages_received</code> - [counter] the number of messages pulled from\npubsub</li>\n</ul>\n\n<h3 id=\"metrics-agent-deprecated\">Metrics Agent (Deprecated)</h3>\n\n<p><code>subscribe</code> has also an optional <code>metrics_client</code> argument which will be\nremoved in a future release. You can provide any metrics agent that implements\nthe same interface as <code>MetricsAgent</code> (Datadog client will do ;) ) and get the\nfollowing metrics:</p>\n\n<ul>\n<li><code>pubsub.producer.batch</code> - [histogram] actual size of a batch retrieved from\npubsub.</li>\n<li><code>pubsub.consumer.failfast</code> - [increment] a message was dropped due to its\nlease being expired.</li>\n<li><code>pubsub.consumer.latency.receive</code> - [histogram] how many seconds it took for\na message to reach handler after it was published.</li>\n<li><code>pubsub.consumer.succeeded</code> - [increment] <code>handler</code> call was successfull.</li>\n<li><code>pubsub.consumer.failed</code> - [increment] <code>handler</code> call raised an exception.</li>\n<li><code>pubsub.consumer.latency.runtime</code> - [histogram] <code>handler</code> execution time in\nseconds.</li>\n<li><code>pubsub.acker.batch.failed</code> - [increment] ack request failed.</li>\n<li><code>pubsub.acker.batch</code> - [histogram] actual number of messages that was acked\nin a single request.</li>\n</ul>\n\n<h2 id=\"publisher\">Publisher</h2>\n\n<p>The <code>PublisherClient</code> is a dead-simple alternative to the official Google Cloud\nPub/Sub publisher client. The main design goal was to eliminate all the\nadditional gRPC overhead implemented by the upstream client.</p>\n\n<p>If migrating between this library and the official one, the main difference is\nthis: the <code>gcloud-{aio,rest}-pubsub</code> publisher's <code>.publish()</code> method\n<em>immediately</em> publishes the messages you've provided, rather than maintaining\nour own publishing queue, implementing batching and flow control, etc. If\nyou're looking for a full-featured publishing library with all the bells and\nwhistles built in, you may be interested in the upstream provider. If you're\nlooking to manage your own batching / timeouts / retry / threads / etc, this\nlibrary should be a bit easier to work with.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">PubsubMessage</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">PublisherClient</span>\n\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">PublisherClient</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">)</span>\n\n    <span class=\"n\">topic</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">topic_path</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcp-project&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;my-topic-name&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">PubsubMessage</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">&#39;payload&#39;</span><span class=\"p\">,</span> <span class=\"n\">attribute</span><span class=\"o\">=</span><span class=\"s1\">&#39;value&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">PubsubMessage</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">&#39;other payload&#39;</span><span class=\"p\">,</span> <span class=\"n\">other_attribute</span><span class=\"o\">=</span><span class=\"s1\">&#39;whatever&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">more_attributes</span><span class=\"o\">=</span><span class=\"s1\">&#39;something else&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"p\">,</span> <span class=\"n\">messages</span><span class=\"p\">)</span>\n    <span class=\"c1\"># response == {&#39;messageIds&#39;: [&#39;1&#39;, &#39;2&#39;]}</span>\n</code></pre>\n</div>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-aio-pubsub</code> along with a\nlocal Pubsub emulator. Setting the <code>$PUBSUB_EMULATOR_HOST</code> environment variable\nto the local address of your emulator should be enough to do the trick.</p>\n\n<p>For example, using the official Google Pubsub emulator:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>gcloud<span class=\"w\"> </span>beta<span class=\"w\"> </span>emulators<span class=\"w\"> </span>pubsub<span class=\"w\"> </span>start<span class=\"w\"> </span>--host-port<span class=\"o\">=</span><span class=\"m\">0</span>.0.0.0:8681\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">PUBSUB_EMULATOR_HOST</span><span class=\"o\">=</span><span class=\"s1\">&#39;0.0.0.0:8681&#39;</span>\n</code></pre>\n</div>\n\n<p>Any <code>gcloud-aio-pubsub</code> Publisher requests made with that environment variable\nset will query the emulator instead of the official GCS APIs.</p>\n\n<p>For easier ergonomics, you may be interested in\n<a href=\"https://github.com/TheKevJames/tools/tree/master/docker-gcloud-pubsub-emulator\">thekevjames/gcloud-pubsub-emulator</a>.</p>\n\n<h2 id=\"customization\">Customization</h2>\n\n<p>This library mostly tries to stay agnostic of potential use-cases; as such, we\ndo not implement any sort of retrying or other policies under the assumption\nthat we wouldn't get things right for every user's situation.</p>\n\n<p>As such, we recommend configuring your own policies on an as-needed basis. The\n<a href=\"https://pypi.org/project/backoff/\">backoff</a> library can make this quite straightforward! For example,\nyou may find it useful to configure something like:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SubscriberClientWithBackoff</span><span class=\"p\">(</span><span class=\"n\">SubscriberClient</span><span class=\"p\">):</span>\n    <span class=\"nd\">@backoff</span><span class=\"o\">.</span><span class=\"n\">on_exception</span><span class=\"p\">(</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">expo</span><span class=\"p\">,</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientResponseError</span><span class=\"p\">,</span>\n                          <span class=\"n\">max_tries</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">jitter</span><span class=\"o\">=</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">full_jitter</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">pull</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">pull</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, {"fullname": "gcloud.aio.pubsub.PublisherClient", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.__init__", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.session", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.token", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.project_path", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.project_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.subscription_path", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.subscription_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.topic_path", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.topic_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.list_topics", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.list_topics", "kind": "function", "doc": "<p>List topics</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query_params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.create_topic", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.create_topic", "kind": "function", "doc": "<p>Create topic.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.delete_topic", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.delete_topic", "kind": "function", "doc": "<p>Delete topic.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.publish", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.publish", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">messages</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">PubsubMessage</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.PublisherClient.close", "modulename": "gcloud.aio.pubsub", "qualname": "PublisherClient.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.PubsubMessage", "modulename": "gcloud.aio.pubsub", "qualname": "PubsubMessage", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.PubsubMessage.__init__", "modulename": "gcloud.aio.pubsub", "qualname": "PubsubMessage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">ordering_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, {"fullname": "gcloud.aio.pubsub.PubsubMessage.data", "modulename": "gcloud.aio.pubsub", "qualname": "PubsubMessage.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.PubsubMessage.attributes", "modulename": "gcloud.aio.pubsub", "qualname": "PubsubMessage.attributes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.PubsubMessage.ordering_key", "modulename": "gcloud.aio.pubsub", "qualname": "PubsubMessage.ordering_key", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.PubsubMessage.to_repr", "modulename": "gcloud.aio.pubsub", "qualname": "PubsubMessage.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.__init__", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.session", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.token", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.project_path", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.project_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.subscription_path", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.subscription_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.topic_path", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.topic_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.create_subscription", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.create_subscription", "kind": "function", "doc": "<p>Create subscription.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.patch_subscription", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.patch_subscription", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.delete_subscription", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.delete_subscription", "kind": "function", "doc": "<p>Delete subscription.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.pull", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.pull", "kind": "function", "doc": "<p>Pull messages from subscription</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">max_messages</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">subscriber_message</span><span class=\"o\">.</span><span class=\"n\">SubscriberMessage</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.acknowledge", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.acknowledge", "kind": "function", "doc": "<p>Acknowledge messages by ackIds</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ack_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.modify_ack_deadline", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.modify_ack_deadline", "kind": "function", "doc": "<p>Modify messages' ack deadline.\nSet ack deadline to 0 to nack messages.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ack_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">ack_deadline_seconds</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.get_subscription", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.get_subscription", "kind": "function", "doc": "<p>Get Subscription</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.list_subscriptions", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.list_subscriptions", "kind": "function", "doc": "<p>List subscriptions</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query_params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.SubscriberClient.close", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberClient.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage.__init__", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ack_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">message_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">publish_time</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">delivery_attempt</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage.ack_id", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage.ack_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage.message_id", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage.message_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage.publish_time", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage.publish_time", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage.data", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage.attributes", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage.attributes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage.delivery_attempt", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage.delivery_attempt", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage.from_repr", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">received_message</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">subscriber_message</span><span class=\"o\">.</span><span class=\"n\">SubscriberMessage</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.pubsub.SubscriberMessage.to_repr", "modulename": "gcloud.aio.pubsub", "qualname": "SubscriberMessage.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.pubsub.subscribe", "modulename": "gcloud.aio.pubsub", "qualname": "subscribe", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">subscriber_message</span><span class=\"o\">.</span><span class=\"n\">SubscriberMessage</span><span class=\"p\">],</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">subscriber_client</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">subscriber_client</span><span class=\"o\">.</span><span class=\"n\">SubscriberClient</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">num_producers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">max_messages_per_producer</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">ack_window</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span>,</span><span class=\"param\">\t<span class=\"n\">ack_deadline_cache_timeout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">num_tasks_per_consumer</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">enable_nack</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">nack_window</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span>,</span><span class=\"param\">\t<span class=\"n\">metrics_client</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">metrics_agent</span><span class=\"o\">.</span><span class=\"n\">MetricsAgent</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage", "modulename": "gcloud.aio.storage", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Storage\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-aio-storage\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>To upload a file, you might do something like the following:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">aiofiles</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.aio.storage</span> <span class=\"kn\">import</span> <span class=\"n\">Storage</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Storage</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">)</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">aiofiles</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;/path/to/my/file&#39;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n        <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;my-bucket-name&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;path/to/gcs/folder&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">output</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Note that there are multiple ways to accomplish the above, ie,. by making use\nof the <code>Bucket</code> and <code>Blob</code> convenience classes if that better fits your\nuse-case.</p>\n\n<p>Of course, the major benefit of using an async library is being able to\nparallelize operations like this. Since <code>gcloud-aio-storage</code> is fully\nasyncio-compatible, you can use any of the builtin asyncio method to perform\nmore complicated operations:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">my_files</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;/local/path/to/file.1&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;path/in/gcs.1&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;/local/path/to/file.2&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;path/in/gcs.2&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;/local/path/to/file.3&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;different/gcs/path/filename.3&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">Storage</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Prepare all our upload data</span>\n    <span class=\"n\">uploads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">local_name</span><span class=\"p\">,</span> <span class=\"n\">gcs_name</span> <span class=\"ow\">in</span> <span class=\"n\">my_files</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">aiofiles</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">local_name</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n            <span class=\"n\">uploads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">gcs_name</span><span class=\"p\">,</span> <span class=\"n\">contents</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># Simultaneously upload all files</span>\n    <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span>\n        <span class=\"o\">*</span><span class=\"p\">[</span>\n            <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-bucket-name&#39;</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">file_</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">file_</span> <span class=\"ow\">in</span> <span class=\"n\">uploads</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>You can also refer to the <a href=\"https://github.com/talkiq/gcloud-aio/blob/master/storage/tests/integration/smoke_test.py\">smoke test</a> for more info and examples.</p>\n\n<p>Note that you can also let <code>gcloud-aio-storage</code> do its own session management,\nso long as you give us a hint when to close that session:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">Storage</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"c1\"># closes the client.session on leaving the context manager</span>\n\n<span class=\"c1\"># OR</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Storage</span><span class=\"p\">()</span>\n<span class=\"c1\"># do stuff</span>\n<span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>  <span class=\"c1\"># close the session explicitly</span>\n</code></pre>\n</div>\n\n<h2 id=\"file-encodings\">File Encodings</h2>\n\n<p>In some cases, <code>aiohttp</code> needs to transform the objects returned from GCS into\nstrings, eg. for debug logging and other such issues. The built-in <code>await\nresponse.text()</code> operation relies on <a href=\"https://pypi.org/project/chardet/\">chardet</a> for guessing the\ncharacter encoding in any cases where it can not be determined based on the\nfile metadata.</p>\n\n<p>Unfortunately, this operation can be extremely slow, especially in cases where\nyou might be working with particularly large files. If you notice odd latency\nissues when reading your results, you may want to set your character encoding\nmore explicitly within GCS, eg. by ensuring you set the <code>contentType</code> of the\nrelevant objects to something suffixed with <code>; charset=utf-8</code>. For example, in\nthe case of <code>contentType='application/x-netcdf'</code> files exhibiting latency, you\ncould instead set <code>contentType='application/x-netcdf; charset=utf-8</code>. See\n<a href=\"https://github.com/talkiq/gcloud-aio/issues/172\">Issue #172</a> for more info!</p>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-aio-storage</code> along with a\nlocal GCS emulator. Setting the <code>$STORAGE_EMULATOR_HOST</code> environment variable\nto the address of your emulator should be enough to do the trick.</p>\n\n<p>For example, using <a href=\"https://github.com/fsouza/fake-gcs-server\">fsouza/fake-gcs-server</a>, you can do:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>docker<span class=\"w\"> </span>run<span class=\"w\"> </span>-d<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">4443</span>:4443<span class=\"w\"> </span>-v<span class=\"w\"> </span><span class=\"nv\">$PWD</span>/my-sample-data:/data<span class=\"w\"> </span>fsouza/fake-gcs-server\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">STORAGE_EMULATOR_HOST</span><span class=\"o\">=</span><span class=\"s1\">&#39;0.0.0.0:4443&#39;</span>\n</code></pre>\n</div>\n\n<p>Any <code>gcloud-aio-storage</code> requests made with that environment variable set will\nquery <code>fake-gcs-server</code> instead of the official GCS API.</p>\n\n<p>Note that some emulation systems require disabling SSL -- if you're using a\ncustom http session, you may need to disable SSL verification.</p>\n\n<h2 id=\"customization\">Customization</h2>\n\n<p>This library mostly tries to stay agnostic of potential use-cases; as such, we\ndo not implement any sort of retrying or other policies under the assumption\nthat we wouldn't get things right for every user's situation.</p>\n\n<p>As such, we recommend configuring your own policies on an as-needed basis. The\n<a href=\"https://pypi.org/project/backoff/\">backoff</a> library can make this quite straightforward! For example,\nyou may find it useful to configure something like:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">StorageWithBackoff</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">Storage</span><span class=\"p\">):</span>\n    <span class=\"nd\">@backoff</span><span class=\"o\">.</span><span class=\"n\">on_exception</span><span class=\"p\">(</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">expo</span><span class=\"p\">,</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientResponseError</span><span class=\"p\">,</span>\n                          <span class=\"n\">max_tries</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">jitter</span><span class=\"o\">=</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">full_jitter</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@backoff</span><span class=\"o\">.</span><span class=\"n\">on_exception</span><span class=\"p\">(</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">expo</span><span class=\"p\">,</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientResponseError</span><span class=\"p\">,</span>\n                          <span class=\"n\">max_tries</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">jitter</span><span class=\"o\">=</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">full_jitter</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">download</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, {"fullname": "gcloud.aio.storage.Blob", "modulename": "gcloud.aio.storage", "qualname": "Blob", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.storage.Blob.__init__", "modulename": "gcloud.aio.storage", "qualname": "Blob.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">Bucket</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "gcloud.aio.storage.Blob.bucket", "modulename": "gcloud.aio.storage", "qualname": "Blob.bucket", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.storage.Blob.name", "modulename": "gcloud.aio.storage", "qualname": "Blob.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.storage.Blob.size", "modulename": "gcloud.aio.storage", "qualname": "Blob.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "gcloud.aio.storage.Blob.chunk_size", "modulename": "gcloud.aio.storage", "qualname": "Blob.chunk_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "gcloud.aio.storage.Blob.download", "modulename": "gcloud.aio.storage", "qualname": "Blob.download", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Blob.upload", "modulename": "gcloud.aio.storage", "qualname": "Blob.upload", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Blob.get_signed_url", "modulename": "gcloud.aio.storage", "qualname": "Blob.get_signed_url", "kind": "function", "doc": "<p>Create a temporary access URL for Storage Blob accessible by anyone\nwith the link.</p>\n\n<p>Adapted from Google Documentation:\n<a href=\"https://cloud.google.com/storage/docs/access-control/signing-urls-manually#python-sample\">https://cloud.google.com/storage/docs/access-control/signing-urls-manually#python-sample</a></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">expiration</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">http_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;GET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Bucket", "modulename": "gcloud.aio.storage", "qualname": "Bucket", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.storage.Bucket.__init__", "modulename": "gcloud.aio.storage", "qualname": "Bucket.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">storage</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">Storage</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "gcloud.aio.storage.Bucket.storage", "modulename": "gcloud.aio.storage", "qualname": "Bucket.storage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.storage.Bucket.name", "modulename": "gcloud.aio.storage", "qualname": "Bucket.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.storage.Bucket.get_blob", "modulename": "gcloud.aio.storage", "qualname": "Bucket.get_blob", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">blob_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">blob</span><span class=\"o\">.</span><span class=\"n\">Blob</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Bucket.blob_exists", "modulename": "gcloud.aio.storage", "qualname": "Bucket.blob_exists", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">blob_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Bucket.list_blobs", "modulename": "gcloud.aio.storage", "qualname": "Bucket.list_blobs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Bucket.new_blob", "modulename": "gcloud.aio.storage", "qualname": "Bucket.new_blob", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">blob_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">blob</span><span class=\"o\">.</span><span class=\"n\">Blob</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.storage.Bucket.get_metadata", "modulename": "gcloud.aio.storage", "qualname": "Bucket.get_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.SCOPES", "modulename": "gcloud.aio.storage", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/devstorage.read_write&#x27;]"}, {"fullname": "gcloud.aio.storage.Storage", "modulename": "gcloud.aio.storage", "qualname": "Storage", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.storage.Storage.__init__", "modulename": "gcloud.aio.storage", "qualname": "Storage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.storage.Storage.session", "modulename": "gcloud.aio.storage", "qualname": "Storage.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.storage.Storage.token", "modulename": "gcloud.aio.storage", "qualname": "Storage.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.storage.Storage.list_buckets", "modulename": "gcloud.aio.storage", "qualname": "Storage.list_buckets", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">Bucket</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.get_bucket", "modulename": "gcloud.aio.storage", "qualname": "Storage.get_bucket", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bucket_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">Bucket</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.storage.Storage.copy", "modulename": "gcloud.aio.storage", "qualname": "Storage.copy", "kind": "function", "doc": "<p>When files are too large, multiple calls to <code>rewriteTo</code> are made. We\nrefer to the same copy job by using the <code>rewriteToken</code> from the\nprevious return payload in subsequent <code>rewriteTo</code> calls.</p>\n\n<p>Using the <code>rewriteTo</code> GCS API is preferred in part because it is able\nto make multiple calls to fully copy an object whereas the <code>copyTo</code> GCS\nAPI only calls <code>rewriteTo</code> once under the hood, and thus may fail if\nfiles are large.</p>\n\n<p>In the rare case you need to resume a copy operation, include the\n<code>rewriteToken</code> in the <code>params</code> dictionary. Once you begin a multi-part\ncopy operation, you then have 1 week to complete the copy job.</p>\n\n<p><a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/rewrite\">https://cloud.google.com/storage/docs/json_api/v1/objects/rewrite</a></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">destination_bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">new_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.delete", "modulename": "gcloud.aio.storage", "qualname": "Storage.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.download", "modulename": "gcloud.aio.storage", "qualname": "Storage.download", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.download_to_filename", "modulename": "gcloud.aio.storage", "qualname": "Storage.download_to_filename", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.download_metadata", "modulename": "gcloud.aio.storage", "qualname": "Storage.download_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.download_stream", "modulename": "gcloud.aio.storage", "qualname": "Storage.download_stream", "kind": "function", "doc": "<p>Download a GCS object in a buffered stream.</p>\n\n<p>Args:\n    bucket (str): The bucket from which to download.\n    object_name (str): The object within the bucket to download.\n    headers (Optional[Dict[str, Any]], optional): Custom header values\n        for the request, such as range. Defaults to None.\n    timeout (int, optional): Timeout, in seconds, for the request. Note\n        that with this function, this is the time to the beginning of\n        the response data (TTFB). Defaults to 10.\n    session (Optional[Session], optional): A specific session to\n        (re)use. Defaults to None.</p>\n\n<p>Returns:\n    StreamResponse: A object encapsulating the stream, similar to\n    io.BufferedIOBase, but it only supports the read() function.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">StreamResponse</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.list_objects", "modulename": "gcloud.aio.storage", "qualname": "Storage.list_objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.upload", "modulename": "gcloud.aio.storage", "qualname": "Storage.upload", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">file_data</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force_resumable_upload</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.upload_from_filename", "modulename": "gcloud.aio.storage", "qualname": "Storage.upload_from_filename", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.patch_metadata", "modulename": "gcloud.aio.storage", "qualname": "Storage.patch_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.get_bucket_metadata", "modulename": "gcloud.aio.storage", "qualname": "Storage.get_bucket_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.Storage.close", "modulename": "gcloud.aio.storage", "qualname": "Storage.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.storage.StreamResponse", "modulename": "gcloud.aio.storage", "qualname": "StreamResponse", "kind": "class", "doc": "<p>This class provides an abstraction between the slightly different\nrecommended streaming implementations between requests and aiohttp.</p>\n"}, {"fullname": "gcloud.aio.storage.StreamResponse.__init__", "modulename": "gcloud.aio.storage", "qualname": "StreamResponse.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, {"fullname": "gcloud.aio.storage.StreamResponse.content_length", "modulename": "gcloud.aio.storage", "qualname": "StreamResponse.content_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "gcloud.aio.storage.StreamResponse.read", "modulename": "gcloud.aio.storage", "qualname": "StreamResponse.read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.taskqueue", "modulename": "gcloud.aio.taskqueue", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Taskqueue\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-aio-taskqueue\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>We're still working on documentation -- for now, you can use the\n<a href=\"https://github.com/talkiq/gcloud-aio/tree/master/taskqueue/tests/integration\">smoke tests</a> as an example.</p>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-aio-taskqueue</code> along with a\nlocal emulator. Setting the <code>$CLOUDTASKS_EMULATOR_HOST</code> environment variable to\nthe address of your emulator should be enough to do the trick.</p>\n"}, {"fullname": "gcloud.aio.taskqueue.PushQueue", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.__init__", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">taskqueue</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">location</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;us-central1&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">aio</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.session", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.token", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.headers", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.headers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.task_name", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.task_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.create", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.create", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.delete", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">tname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.get", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">tname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.list", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.list", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">page_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">page_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.run", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.run", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">tname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.taskqueue.PushQueue.close", "modulename": "gcloud.aio.taskqueue", "qualname": "PushQueue.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, {"fullname": "gcloud.aio.taskqueue.SCOPES", "modulename": "gcloud.aio.taskqueue", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/cloud-tasks&#x27;]"}, {"fullname": "gcloud.rest", "modulename": "gcloud.rest", "kind": "module", "doc": "<h2 id=\"emulator-usage\">Emulator Usage</h2>\n\n<p>All of our API clients are integrated to make use of the official Google emulators, where those exist. As a general rule, this means you can set the <code>$FOO_EMULATOR_HOST</code> environment variable (where <code>$FOO</code> is the service being emulated, such as <code>PUBSUB_EMULATOR_HOST</code>) and your <code>gcloud</code> client will point to the emulator rather than the live APIs.</p>\n\n<p>Alternatively, you can provide the <code>api_root</code> option to any relevant constructor to have full control over the API being used. Note that while the environment variable expects just the hostname (to support the standard Google emulator usecase), if you assign this value manually via the contructor arg you must include the entire path.</p>\n\n<p>If you override the API value (either by constructor option or environment variable), tls verification and other such security measures will be disabled as needed. This feature is not intended for production use!</p>\n\n<p>Note also that this library only supports a single version of the Google APIs at a given time (generally the most recent version). If the API you point to does not conform to the correct version of the spec, we make no promises as to what might happen.</p>\n\n<p>For example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">_api_root</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;https://datastore.googleapis.com/v1&#39;</span>\n\n<span class=\"c1\"># generally set via `gcloud emulators datastore env-init`</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;DATASTORE_EMULATOR_HOST&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;127.0.0.1:8432&#39;</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">_api_root</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;http://127.0.0.1:8432/v1&#39;</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">(</span><span class=\"n\">api_root</span><span class=\"o\">=</span><span class=\"s1\">&#39;http://example.com/datastoreapi&#39;</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">_api_root</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;http://example.com/datastoreapi&#39;</span>\n</code></pre>\n</div>\n\n<p>Note that, in any case, these values will be loaded at the time the class instance is constructed.</p>\n\n<h2 id=\"token-management\">Token Management</h2>\n\n<p>By default, you should not need to care about managing a <code>gcloud.rest.auth.Token</code> instance. When you initialize a given client library, it will handle creating a token with the correct scopes.</p>\n\n<p>However, in some cases you may find it valuable to share a token across multiple libraries (eg. to include the HTTP calls in a single session or to reduce how many individual refreshes need to happen). In that case, you can pass it in as follows.</p>\n\n<p>Note that if you are using a service account file, setting explicit scopes is mandatory! As such, you'll need to make sure your token has the correct scopes for all the libraries you plan to use it with.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">scopes</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">&#39;https://www.googleapis.com/auth/cloudkms&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;https://www.googleapis.com/auth/datastore&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"k\">with</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">(</span><span class=\"n\">scopes</span><span class=\"o\">=</span><span class=\"n\">scopes</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">token</span><span class=\"p\">:</span>\n    <span class=\"n\">datastore</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"n\">token</span><span class=\"p\">)</span>\n    <span class=\"n\">kms</span> <span class=\"o\">=</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">kms</span><span class=\"o\">.</span><span class=\"n\">KMS</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"n\">token</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, {"fullname": "gcloud.rest.auth", "modulename": "gcloud.rest.auth", "kind": "module", "doc": "<p>This library implements various methods for working with the Google IAM / auth\nAPIs. This includes authenticating for the purpose of using other Google APIs,\nmanaging service accounts and public keys, URL-signing blobs, etc.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-rest-auth\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.auth</span> <span class=\"kn\">import</span> <span class=\"n\">IamClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.auth</span> <span class=\"kn\">import</span> <span class=\"n\">Token</span>\n\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">IamClient</span><span class=\"p\">()</span>\n<span class=\"n\">pubkeys</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">list_public_keys</span><span class=\"p\">()</span>\n\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">Token</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n</code></pre>\n</div>\n\n<p>Additionally, the <code>Token</code> constructor accepts the following optional arguments:</p>\n\n<ul>\n<li><code>service_file</code>: path to a <a href=\"https://console.cloud.google.com/iam-admin/serviceaccounts\">service account</a> authorized user\nfile, or any other application credentials. Alternatively, you can pass a\nfile-like object, like an <code>io.StringIO</code> instance, in case your credentials\nare not stored in a file but in memory. If omitted, will attempt to find one\non your path or fallback to generating a token from GCE metadata.</li>\n<li><code>session</code>: an <code>aiohttp.ClientSession</code> instance to be used for all requests.\nIf omitted, a default session will be created. If you use the default\nsession, you may be interested in using <code>Token()</code> as a context manager\n(<code>with Token(..) as token:</code>) or explicitly calling the <code>Token.close()</code>\nmethod to ensure the session is cleaned up appropriately.</li>\n<li><code>scopes</code>: an optional list of GCP <code>scopes</code>_ for which to generate our token.\nOnly valid (and required!) for <a href=\"https://console.cloud.google.com/iam-admin/serviceaccounts\">service account</a>\nauthentication.</li>\n</ul>\n"}, {"fullname": "gcloud.rest.auth.SyncSession", "modulename": "gcloud.rest.auth", "qualname": "SyncSession", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.rest.auth.session.BaseSession"}, {"fullname": "gcloud.rest.auth.SyncSession.google_api_lock", "modulename": "gcloud.rest.auth", "qualname": "SyncSession.google_api_lock", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;function RLock at 0x7f1758121300&gt;"}, {"fullname": "gcloud.rest.auth.SyncSession.session", "modulename": "gcloud.rest.auth", "qualname": "SyncSession.session", "kind": "variable", "doc": "<p></p>\n", "annotation": ": requests.sessions.Session"}, {"fullname": "gcloud.rest.auth.SyncSession.post", "modulename": "gcloud.rest.auth", "qualname": "SyncSession.post", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.SyncSession.get", "modulename": "gcloud.rest.auth", "qualname": "SyncSession.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.SyncSession.patch", "modulename": "gcloud.rest.auth", "qualname": "SyncSession.patch", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.SyncSession.put", "modulename": "gcloud.rest.auth", "qualname": "SyncSession.put", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.SyncSession.delete", "modulename": "gcloud.rest.auth", "qualname": "SyncSession.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.SyncSession.request", "modulename": "gcloud.rest.auth", "qualname": "SyncSession.request", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">auto_raise_for_status</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.SyncSession.close", "modulename": "gcloud.rest.auth", "qualname": "SyncSession.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.BUILD_GCLOUD_REST", "modulename": "gcloud.rest.auth", "qualname": "BUILD_GCLOUD_REST", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "gcloud.rest.auth.IamClient", "modulename": "gcloud.rest.auth", "qualname": "IamClient", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.auth.IamClient.__init__", "modulename": "gcloud.rest.auth", "qualname": "IamClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.auth.IamClient.session", "modulename": "gcloud.rest.auth", "qualname": "IamClient.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.auth.IamClient.token", "modulename": "gcloud.rest.auth", "qualname": "IamClient.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.auth.IamClient.headers", "modulename": "gcloud.rest.auth", "qualname": "IamClient.headers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.IamClient.service_account_email", "modulename": "gcloud.rest.auth", "qualname": "IamClient.service_account_email", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, {"fullname": "gcloud.rest.auth.IamClient.get_public_key", "modulename": "gcloud.rest.auth", "qualname": "IamClient.get_public_key", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_account_email</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.IamClient.list_public_keys", "modulename": "gcloud.rest.auth", "qualname": "IamClient.list_public_keys", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">service_account_email</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.IamClient.sign_blob", "modulename": "gcloud.rest.auth", "qualname": "IamClient.sign_blob", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">service_account_email</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">delegates</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.IamClient.close", "modulename": "gcloud.rest.auth", "qualname": "IamClient.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.Token", "modulename": "gcloud.rest.auth", "qualname": "Token", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.auth.Token.__init__", "modulename": "gcloud.rest.auth", "qualname": "Token.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scopes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.auth.Token.service_data", "modulename": "gcloud.rest.auth", "qualname": "Token.service_data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.auth.Token.session", "modulename": "gcloud.rest.auth", "qualname": "Token.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.auth.Token.scopes", "modulename": "gcloud.rest.auth", "qualname": "Token.scopes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.auth.Token.access_token", "modulename": "gcloud.rest.auth", "qualname": "Token.access_token", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]"}, {"fullname": "gcloud.rest.auth.Token.access_token_duration", "modulename": "gcloud.rest.auth", "qualname": "Token.access_token_duration", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.auth.Token.access_token_acquired_at", "modulename": "gcloud.rest.auth", "qualname": "Token.access_token_acquired_at", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.auth.Token.acquiring", "modulename": "gcloud.rest.auth", "qualname": "Token.acquiring", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[_asyncio.Future[Any]]"}, {"fullname": "gcloud.rest.auth.Token.get_project", "modulename": "gcloud.rest.auth", "qualname": "Token.get_project", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.Token.get", "modulename": "gcloud.rest.auth", "qualname": "Token.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.Token.ensure_token", "modulename": "gcloud.rest.auth", "qualname": "Token.ensure_token", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.Token.acquire_access_token", "modulename": "gcloud.rest.auth", "qualname": "Token.acquire_access_token", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.Token.close", "modulename": "gcloud.rest.auth", "qualname": "Token.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.decode", "modulename": "gcloud.rest.auth", "qualname": "decode", "kind": "function", "doc": "<p>Modified Base64 for URL variants exist, where the + and / characters of\nstandard Base64 are respectively replaced by - and _.</p>\n\n<p>See <a href=\"https://en.wikipedia.org/wiki/Base64#URL_applications\">https://en.wikipedia.org/wiki/Base64#URL_applications</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.auth.encode", "modulename": "gcloud.rest.auth", "qualname": "encode", "kind": "function", "doc": "<p>Modified Base64 for URL variants exist, where the + and / characters of\nstandard Base64 are respectively replaced by - and _.</p>\n\n<p>See <a href=\"https://en.wikipedia.org/wiki/Base64#URL_applications\">https://en.wikipedia.org/wiki/Base64#URL_applications</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery", "modulename": "gcloud.rest.bigquery", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Bigquery\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-rest-bigquery\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>We're still working on documentation -- for now, you can use the\n<a href=\"https://github.com/talkiq/gcloud-rest/blob/master/bigquery/tests/integration/smoke_test.py\">smoke test</a> as an example.</p>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-rest-bigquery</code> along with a\nlocal emulator. Setting the <code>$BIGQUERY_EMULATOR_HOST</code> environment variable to\nthe address of your emulator should be enough to do the trick.</p>\n"}, {"fullname": "gcloud.rest.bigquery.Dataset", "modulename": "gcloud.rest.bigquery", "qualname": "Dataset", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.rest.bigquery.bigquery.BigqueryBase"}, {"fullname": "gcloud.rest.bigquery.Dataset.__init__", "modulename": "gcloud.rest.bigquery", "qualname": "Dataset.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.bigquery.Dataset.dataset_name", "modulename": "gcloud.rest.bigquery", "qualname": "Dataset.dataset_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.bigquery.Dataset.list_tables", "modulename": "gcloud.rest.bigquery", "qualname": "Dataset.list_tables", "kind": "function", "doc": "<p>List tables in a dataset.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Dataset.list_datasets", "modulename": "gcloud.rest.bigquery", "qualname": "Dataset.list_datasets", "kind": "function", "doc": "<p>List datasets in current project.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Dataset.get", "modulename": "gcloud.rest.bigquery", "qualname": "Dataset.get", "kind": "function", "doc": "<p>Get a specific dataset in current project.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Dataset.insert", "modulename": "gcloud.rest.bigquery", "qualname": "Dataset.insert", "kind": "function", "doc": "<p>Create datasets in current project.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Dataset.delete", "modulename": "gcloud.rest.bigquery", "qualname": "Dataset.delete", "kind": "function", "doc": "<p>Delete datasets in current project.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Disposition", "modulename": "gcloud.rest.bigquery", "qualname": "Disposition", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.bigquery.Disposition.WRITE_APPEND", "modulename": "gcloud.rest.bigquery", "qualname": "Disposition.WRITE_APPEND", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Disposition.WRITE_APPEND: &#x27;WRITE_APPEND&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.Disposition.WRITE_EMPTY", "modulename": "gcloud.rest.bigquery", "qualname": "Disposition.WRITE_EMPTY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Disposition.WRITE_EMPTY: &#x27;WRITE_EMPTY&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.Disposition.WRITE_TRUNCATE", "modulename": "gcloud.rest.bigquery", "qualname": "Disposition.WRITE_TRUNCATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Disposition.WRITE_TRUNCATE: &#x27;WRITE_TRUNCATE&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.Job", "modulename": "gcloud.rest.bigquery", "qualname": "Job", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.rest.bigquery.bigquery.BigqueryBase"}, {"fullname": "gcloud.rest.bigquery.Job.__init__", "modulename": "gcloud.rest.bigquery", "qualname": "Job.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.bigquery.Job.job_id", "modulename": "gcloud.rest.bigquery", "qualname": "Job.job_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.bigquery.Job.get_job", "modulename": "gcloud.rest.bigquery", "qualname": "Job.get_job", "kind": "function", "doc": "<p>Get the specified job resource by job ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Job.get_query_results", "modulename": "gcloud.rest.bigquery", "qualname": "Job.get_query_results", "kind": "function", "doc": "<p>Get the specified jobQueryResults by job ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Job.cancel", "modulename": "gcloud.rest.bigquery", "qualname": "Job.cancel", "kind": "function", "doc": "<p>Cancel the specified job by job ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Job.query", "modulename": "gcloud.rest.bigquery", "qualname": "Job.query", "kind": "function", "doc": "<p>Runs a query synchronously and returns query results if completes\nwithin a specified timeout.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query_request</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Job.insert", "modulename": "gcloud.rest.bigquery", "qualname": "Job.insert", "kind": "function", "doc": "<p>Insert a new asynchronous job.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">job</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Job.insert_via_query", "modulename": "gcloud.rest.bigquery", "qualname": "Job.insert_via_query", "kind": "function", "doc": "<p>Create table as a result of the query</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">write_disposition</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">Disposition</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Disposition</span><span class=\"o\">.</span><span class=\"n\">WRITE_EMPTY</span><span class=\"p\">:</span> <span class=\"s1\">&#39;WRITE_EMPTY&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">use_query_cache</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">dry_run</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">use_legacy_sql</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">destination_table</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Job.result", "modulename": "gcloud.rest.bigquery", "qualname": "Job.result", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Job.delete", "modulename": "gcloud.rest.bigquery", "qualname": "Job.delete", "kind": "function", "doc": "<p>Delete the specified job by job ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.SCOPES", "modulename": "gcloud.rest.bigquery", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/bigquery.insertdata&#x27;, &#x27;https://www.googleapis.com/auth/bigquery&#x27;]"}, {"fullname": "gcloud.rest.bigquery.SchemaUpdateOption", "modulename": "gcloud.rest.bigquery", "qualname": "SchemaUpdateOption", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.bigquery.SchemaUpdateOption.ALLOW_FIELD_ADDITION", "modulename": "gcloud.rest.bigquery", "qualname": "SchemaUpdateOption.ALLOW_FIELD_ADDITION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SchemaUpdateOption.ALLOW_FIELD_ADDITION: &#x27;ALLOW_FIELD_ADDITION&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.SchemaUpdateOption.ALLOW_FIELD_RELAXATION", "modulename": "gcloud.rest.bigquery", "qualname": "SchemaUpdateOption.ALLOW_FIELD_RELAXATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SchemaUpdateOption.ALLOW_FIELD_RELAXATION: &#x27;ALLOW_FIELD_RELAXATION&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.SourceFormat", "modulename": "gcloud.rest.bigquery", "qualname": "SourceFormat", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.bigquery.SourceFormat.AVRO", "modulename": "gcloud.rest.bigquery", "qualname": "SourceFormat.AVRO", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.AVRO: &#x27;AVRO&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.SourceFormat.CSV", "modulename": "gcloud.rest.bigquery", "qualname": "SourceFormat.CSV", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.CSV: &#x27;CSV&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.SourceFormat.DATASTORE_BACKUP", "modulename": "gcloud.rest.bigquery", "qualname": "SourceFormat.DATASTORE_BACKUP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.DATASTORE_BACKUP: &#x27;DATASTORE_BACKUP&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.SourceFormat.NEWLINE_DELIMITED_JSON", "modulename": "gcloud.rest.bigquery", "qualname": "SourceFormat.NEWLINE_DELIMITED_JSON", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.NEWLINE_DELIMITED_JSON: &#x27;NEWLINE_DELIMITED_JSON&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.SourceFormat.ORC", "modulename": "gcloud.rest.bigquery", "qualname": "SourceFormat.ORC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.ORC: &#x27;ORC&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.SourceFormat.PARQUET", "modulename": "gcloud.rest.bigquery", "qualname": "SourceFormat.PARQUET", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SourceFormat.PARQUET: &#x27;PARQUET&#x27;&gt;"}, {"fullname": "gcloud.rest.bigquery.Table", "modulename": "gcloud.rest.bigquery", "qualname": "Table", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.rest.bigquery.bigquery.BigqueryBase"}, {"fullname": "gcloud.rest.bigquery.Table.__init__", "modulename": "gcloud.rest.bigquery", "qualname": "Table.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">table_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.bigquery.Table.dataset_name", "modulename": "gcloud.rest.bigquery", "qualname": "Table.dataset_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.bigquery.Table.table_name", "modulename": "gcloud.rest.bigquery", "qualname": "Table.table_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.bigquery.Table.create", "modulename": "gcloud.rest.bigquery", "qualname": "Table.create", "kind": "function", "doc": "<p>Create the table specified by tableId from the dataset.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">table</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Table.patch", "modulename": "gcloud.rest.bigquery", "qualname": "Table.patch", "kind": "function", "doc": "<p>Patch an existing table specified by tableId from the dataset.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">table</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Table.delete", "modulename": "gcloud.rest.bigquery", "qualname": "Table.delete", "kind": "function", "doc": "<p>Deletes the table specified by tableId from the dataset.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Table.get", "modulename": "gcloud.rest.bigquery", "qualname": "Table.get", "kind": "function", "doc": "<p>Gets the specified table resource by table ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Table.insert", "modulename": "gcloud.rest.bigquery", "qualname": "Table.insert", "kind": "function", "doc": "<p>Streams data into BigQuery</p>\n\n<p>By default, each row is assigned a unique insertId. This can be\ncustomized by supplying an <code>insert_id_fn</code> which takes a row and\nreturns an insertId.</p>\n\n<p>In cases where at least one row has successfully been inserted and at\nleast one row has failed to be inserted, the Google API will return a\n2xx (successful) response along with an <code>insertErrors</code> key in the\nresponse JSON containing details on the failing rows.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">rows</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">skip_invalid</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_unknown</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">template_suffix</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">insert_id_fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Table.insert_via_copy", "modulename": "gcloud.rest.bigquery", "qualname": "Table.insert_via_copy", "kind": "function", "doc": "<p>Copy BQ table to another table in BQ</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">destination_project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">destination_dataset</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">destination_table</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">Job</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Table.insert_via_load", "modulename": "gcloud.rest.bigquery", "qualname": "Table.insert_via_load", "kind": "function", "doc": "<p>Loads entities from storage to BigQuery.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">source_uris</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">autodetect</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">source_format</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">SourceFormat</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">SourceFormat</span><span class=\"o\">.</span><span class=\"n\">CSV</span><span class=\"p\">:</span> <span class=\"s1\">&#39;CSV&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">write_disposition</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">Disposition</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Disposition</span><span class=\"o\">.</span><span class=\"n\">WRITE_TRUNCATE</span><span class=\"p\">:</span> <span class=\"s1\">&#39;WRITE_TRUNCATE&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_unknown_values</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">schema_update_options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">SchemaUpdateOption</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">Job</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Table.insert_via_query", "modulename": "gcloud.rest.bigquery", "qualname": "Table.insert_via_query", "kind": "function", "doc": "<p>Create table as a result of the query</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">write_disposition</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">Disposition</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Disposition</span><span class=\"o\">.</span><span class=\"n\">WRITE_EMPTY</span><span class=\"p\">:</span> <span class=\"s1\">&#39;WRITE_EMPTY&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">use_query_cache</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">dry_run</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">bigquery</span><span class=\"o\">.</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">Job</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.Table.list_tabledata", "modulename": "gcloud.rest.bigquery", "qualname": "Table.list_tabledata", "kind": "function", "doc": "<p>List the content of a table in rows.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.bigquery.query_response_to_dict", "modulename": "gcloud.rest.bigquery", "qualname": "query_response_to_dict", "kind": "function", "doc": "<p>Convert a query response to a dictionary.</p>\n\n<p>API responses for job queries are packed into a difficult-to-use format.\nThis method deserializes a response into a List of rows, with each row\nbeing a dictionary of field names to the row's value.</p>\n\n<p>This method also handles converting the values according to the schema\ndefined in the response (eg. into builtin python types).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore", "modulename": "gcloud.rest.datastore", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Datastore\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-rest-datastore\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>We're still working on documentation; for now, this should help get you\nstarted:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Datastore</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Direction</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Filter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">GQLQuery</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Key</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">PathElement</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">PropertyFilter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">PropertyFilterOperator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">PropertyOrder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.datastore</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">Datastore</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcloud-project&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/path/to/creds.json&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">key1</span> <span class=\"o\">=</span> <span class=\"n\">Key</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcloud-project&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">PathElement</span><span class=\"p\">(</span><span class=\"s1\">&#39;Kind&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;entityname&#39;</span><span class=\"p\">)])</span>\n<span class=\"n\">key2</span> <span class=\"o\">=</span> <span class=\"n\">Key</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcloud-project&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">PathElement</span><span class=\"p\">(</span><span class=\"s1\">&#39;Kind&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;entityname2&#39;</span><span class=\"p\">)])</span>\n\n<span class=\"c1\"># batched lookups</span>\n<span class=\"n\">entities</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">lookup</span><span class=\"p\">([</span><span class=\"n\">key1</span><span class=\"p\">,</span> <span class=\"n\">key2</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># convenience functions for any datastore mutations</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;a_boolean&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meaning_of_life&#39;</span><span class=\"p\">:</span> <span class=\"mi\">41</span><span class=\"p\">})</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;a_boolean&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">&#39;meaning_of_life&#39;</span><span class=\"p\">:</span> <span class=\"mi\">42</span><span class=\"p\">})</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">upsert</span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">&#39;animal&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;aardvark&#39;</span><span class=\"p\">})</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or build your own mutation sequences with full transaction support</span>\n<span class=\"n\">transaction</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">beginTransaction</span><span class=\"p\">()</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">mutations</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">make_mutation</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"o\">.</span><span class=\"n\">INSERT</span><span class=\"p\">,</span> <span class=\"n\">key1</span><span class=\"p\">,</span>\n                         <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;animal&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;sloth&#39;</span><span class=\"p\">}),</span>\n        <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">make_mutation</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"o\">.</span><span class=\"n\">UPSERT</span><span class=\"p\">,</span> <span class=\"n\">key1</span><span class=\"p\">,</span>\n                         <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;animal&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;aardvark&#39;</span><span class=\"p\">}),</span>\n        <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">make_mutation</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"o\">.</span><span class=\"n\">INSERT</span><span class=\"p\">,</span> <span class=\"n\">key2</span><span class=\"p\">,</span>\n                         <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;animal&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;aardvark&#39;</span><span class=\"p\">}),</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">(</span><span class=\"n\">transaction</span><span class=\"p\">,</span> <span class=\"n\">mutations</span><span class=\"o\">=</span><span class=\"n\">mutations</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n    <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">rollback</span><span class=\"p\">(</span><span class=\"n\">transaction</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># support for partial keys</span>\n<span class=\"n\">partial_key</span> <span class=\"o\">=</span> <span class=\"n\">Key</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcloud-project&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">PathElement</span><span class=\"p\">(</span><span class=\"s1\">&#39;Kind&#39;</span><span class=\"p\">)])</span>\n<span class=\"c1\"># and ID allocation or reservation</span>\n<span class=\"n\">allocated_keys</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">allocateIds</span><span class=\"p\">([</span><span class=\"n\">partial_key</span><span class=\"p\">])</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">reserveIds</span><span class=\"p\">(</span><span class=\"n\">allocated_keys</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># query support</span>\n<span class=\"n\">property_filter</span> <span class=\"o\">=</span> <span class=\"n\">PropertyFilter</span><span class=\"p\">(</span><span class=\"n\">prop</span><span class=\"o\">=</span><span class=\"s1\">&#39;answer&#39;</span><span class=\"p\">,</span>\n                                 <span class=\"n\">operator</span><span class=\"o\">=</span><span class=\"n\">PropertyFilterOperator</span><span class=\"o\">.</span><span class=\"n\">EQUAL</span><span class=\"p\">,</span>\n                                 <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">))</span>\n<span class=\"n\">property_order</span> <span class=\"o\">=</span> <span class=\"n\">PropertyOrder</span><span class=\"p\">(</span><span class=\"n\">prop</span><span class=\"o\">=</span><span class=\"s1\">&#39;length&#39;</span><span class=\"p\">,</span>\n                               <span class=\"n\">direction</span><span class=\"o\">=</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">DESCENDING</span><span class=\"p\">)</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"s1\">&#39;the_meaning_of_life&#39;</span><span class=\"p\">,</span>\n              <span class=\"n\">query_filter</span><span class=\"o\">=</span><span class=\"n\">Filter</span><span class=\"p\">(</span><span class=\"n\">property_filter</span><span class=\"p\">),</span>\n              <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"n\">property_order</span><span class=\"p\">)</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">runQuery</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># alternatively, query support using GQL</span>\n<span class=\"n\">gql_query</span> <span class=\"o\">=</span> <span class=\"n\">GQLQuery</span><span class=\"p\">(</span><span class=\"s1\">&#39;SELECT * FROM meaning_of_life WHERE answer = @answer&#39;</span><span class=\"p\">,</span>\n                     <span class=\"n\">named_bindings</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;answer&#39;</span><span class=\"p\">:</span> <span class=\"mi\">42</span><span class=\"p\">})</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">runQuery</span><span class=\"p\">(</span><span class=\"n\">gql_query</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># close the HTTP session</span>\n<span class=\"c1\"># Note that other options include:</span>\n<span class=\"c1\"># * providing your own session: `Datastore(.., session=session)`</span>\n<span class=\"c1\"># * using a context manager: `with Datastore(..) as ds:`</span>\n<span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"custom-subclasses\">Custom Subclasses</h2>\n\n<p><code>gcloud-rest-datastore</code> provides class interfaces mirroring all official Google\nAPI types, ie. <code>Key</code> and <code>PathElement</code>, <code>Entity</code> and <code>EntityResult</code>,\n<code>QueryResultBatch</code>, and <code>Value</code>. These types will be returned from arbitrary\nDatastore operations, for example <code>Datastore.allocateIds(...)</code> will return a\nlist of <code>Key</code> entities.</p>\n\n<p>For advanced usage, all of these datatypes may be overloaded. A common use-case\nmay be to deserialize entities into more specific classes. For example, given a\ncustom entity class such as:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MyEntityKind</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Entity</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">key</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_an_aardvark</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">properties</span> <span class=\"ow\">or</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;aardvark&#39;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;I&#39;m an aardvark!&quot;</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_an_aardvark</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;Sorry, nope&quot;</span>\n</code></pre>\n</div>\n\n<p>We can then configure <code>gcloud-rest-datastore</code> to serialize/deserialize from this\ncustom entity class with:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MyCustomDatastore</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">):</span>\n    <span class=\"n\">entity_result_kind</span><span class=\"o\">.</span><span class=\"n\">entity_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyEntityKind</span>\n</code></pre>\n</div>\n\n<p>The full list of classes which may be overridden in this way is:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MyVeryCustomDatastore</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">):</span>\n    <span class=\"n\">datastore_operation_kind</span> <span class=\"o\">=</span> <span class=\"n\">DatastoreOperation</span>\n    <span class=\"n\">entity_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">EntityResult</span>\n    <span class=\"n\">entity_result_kind</span><span class=\"o\">.</span><span class=\"n\">entity_kind</span> <span class=\"o\">=</span> <span class=\"n\">Entity</span>\n    <span class=\"n\">entity_result_kind</span><span class=\"o\">.</span><span class=\"n\">entity_kind</span><span class=\"o\">.</span><span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">Key</span>\n    <span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">Key</span>\n    <span class=\"n\">key_kind</span><span class=\"o\">.</span><span class=\"n\">path_element_kind</span> <span class=\"o\">=</span> <span class=\"n\">PathElement</span>\n    <span class=\"n\">mutation_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">MutationResult</span>\n    <span class=\"n\">mutation_result_kind</span><span class=\"o\">.</span><span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">Key</span>\n    <span class=\"n\">query_result_batch_kind</span> <span class=\"o\">=</span> <span class=\"n\">QueryResultBatch</span>\n    <span class=\"n\">query_result_batch_kind</span><span class=\"o\">.</span><span class=\"n\">entity_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">EntityResult</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">Value</span>\n    <span class=\"n\">value_kind</span><span class=\"o\">.</span><span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">Key</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyVeryCustomQuery</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">):</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">Value</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyVeryCustomGQLQuery</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">GQLQuery</span><span class=\"p\">):</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">Value</span>\n</code></pre>\n</div>\n\n<p>You can then drop-in the <code>MyVeryCustomDatastore</code> class anywhere where you\npreviously used <code>Datastore</code> and do the same for <code>Query</code> and <code>GQLQuery</code>.</p>\n\n<p>To override any sub-key, you'll need to override any parents which use it. For\nexample, if you want to use a custom Key kind and be able to use queries with\nit, you will need to implement your own <code>Value</code>, <code>Query</code>, and <code>GQLQuery</code>\nclasses and wire them up to the rest of the custom classes:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">MyKey</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyValue</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">):</span>\n    <span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyKey</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyEntity</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Entity</span><span class=\"p\">):</span>\n    <span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyKey</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyValue</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyEntityResult</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">EntityResult</span><span class=\"p\">):</span>\n    <span class=\"n\">entity_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyEntity</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyQueryResultBatch</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">QueryResultBatch</span><span class=\"p\">):</span>\n    <span class=\"n\">entity_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyEntityResult</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyDatastore</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Datastore</span><span class=\"p\">):</span>\n    <span class=\"n\">key_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyKey</span>\n    <span class=\"n\">entity_result_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyEntityResult</span>\n    <span class=\"n\">query_result_batch</span> <span class=\"o\">=</span> <span class=\"n\">MyQueryResultBatch</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyValue</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyQuery</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">Query</span><span class=\"p\">):</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyValue</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyGQLQuery</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">GQLQuery</span><span class=\"p\">):</span>\n    <span class=\"n\">value_kind</span> <span class=\"o\">=</span> <span class=\"n\">MyValue</span>\n</code></pre>\n</div>\n"}, {"fullname": "gcloud.rest.datastore.CompositeFilter", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilter", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.rest.datastore.filter.BaseFilter"}, {"fullname": "gcloud.rest.datastore.CompositeFilter.__init__", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">operator</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">CompositeFilterOperator</span>,</span><span class=\"param\">\t<span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">Filter</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.CompositeFilter.json_key", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilter.json_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;compositeFilter&#x27;"}, {"fullname": "gcloud.rest.datastore.CompositeFilter.operator", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilter.operator", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.CompositeFilter.filters", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilter.filters", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.CompositeFilter.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilter.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">CompositeFilter</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.CompositeFilter.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilter.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.CompositeFilterOperator", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilterOperator", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.datastore.CompositeFilterOperator.AND", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilterOperator.AND", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CompositeFilterOperator.AND: &#x27;AND&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.CompositeFilterOperator.UNSPECIFIED", "modulename": "gcloud.rest.datastore", "qualname": "CompositeFilterOperator.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;CompositeFilterOperator.UNSPECIFIED: &#x27;OPERATOR_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Consistency", "modulename": "gcloud.rest.datastore", "qualname": "Consistency", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.datastore.Consistency.EVENTUAL", "modulename": "gcloud.rest.datastore", "qualname": "Consistency.EVENTUAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Consistency.EVENTUAL: &#x27;EVENTUAL&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Consistency.STRONG", "modulename": "gcloud.rest.datastore", "qualname": "Consistency.STRONG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Consistency.STRONG: &#x27;STRONG&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Consistency.UNSPECIFIED", "modulename": "gcloud.rest.datastore", "qualname": "Consistency.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Consistency.UNSPECIFIED: &#x27;READ_CONSISTENCY_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Datastore", "modulename": "gcloud.rest.datastore", "qualname": "Datastore", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Datastore.__init__", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">namespace</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.Datastore.datastore_operation_kind", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.datastore_operation_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.datastore_operation.DatastoreOperation&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Datastore.entity_result_kind", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.entity_result_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.entity.EntityResult&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Datastore.key_kind", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.key_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.key.Key&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Datastore.mutation_result_kind", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.mutation_result_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.mutation.MutationResult&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Datastore.query_result_batch_kind", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.query_result_batch_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.query.QueryResultBatch&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Datastore.value_kind", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.value_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.value.Value&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Datastore.namespace", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.namespace", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Datastore.session", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Datastore.token", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Datastore.project", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.project", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.headers", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.headers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.make_mutation", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.make_mutation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">operation</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Operation</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.allocateIds", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.allocateIds", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.beginTransaction", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.beginTransaction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.commit", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.commit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">mutations</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">transaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Mode</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Mode</span><span class=\"o\">.</span><span class=\"n\">TRANSACTIONAL</span><span class=\"p\">:</span> <span class=\"s1\">&#39;TRANSACTIONAL&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.export", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.export", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">output_bucket_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">kinds</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">namespaces</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">datastore_operation</span><span class=\"o\">.</span><span class=\"n\">DatastoreOperation</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.get_datastore_operation", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.get_datastore_operation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">datastore_operation</span><span class=\"o\">.</span><span class=\"n\">DatastoreOperation</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.lookup", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.lookup", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">transaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">newTransaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">transaction_options</span><span class=\"o\">.</span><span class=\"n\">TransactionOptions</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">consistency</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Consistency</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Consistency</span><span class=\"o\">.</span><span class=\"n\">STRONG</span><span class=\"p\">:</span> <span class=\"s1\">&#39;STRONG&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">EntityResult</span><span class=\"p\">,</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.reserveIds", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.reserveIds", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">database_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.rollback", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.rollback", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">transaction</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.runQuery", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.runQuery", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">BaseQuery</span>,</span><span class=\"param\">\t<span class=\"n\">transaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">consistency</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Consistency</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Consistency</span><span class=\"o\">.</span><span class=\"n\">EVENTUAL</span><span class=\"p\">:</span> <span class=\"s1\">&#39;EVENTUAL&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">QueryResultBatch</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.delete", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.insert", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.insert", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.update", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.upsert", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.upsert", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.operate", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.operate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">operation</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Operation</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Datastore.close", "modulename": "gcloud.rest.datastore", "qualname": "Datastore.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.DatastoreOperation", "modulename": "gcloud.rest.datastore", "qualname": "DatastoreOperation", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.DatastoreOperation.__init__", "modulename": "gcloud.rest.datastore", "qualname": "DatastoreOperation.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">done</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.DatastoreOperation.name", "modulename": "gcloud.rest.datastore", "qualname": "DatastoreOperation.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.DatastoreOperation.done", "modulename": "gcloud.rest.datastore", "qualname": "DatastoreOperation.done", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.DatastoreOperation.metadata", "modulename": "gcloud.rest.datastore", "qualname": "DatastoreOperation.metadata", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.DatastoreOperation.error", "modulename": "gcloud.rest.datastore", "qualname": "DatastoreOperation.error", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.DatastoreOperation.response", "modulename": "gcloud.rest.datastore", "qualname": "DatastoreOperation.response", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.DatastoreOperation.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "DatastoreOperation.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">datastore_operation</span><span class=\"o\">.</span><span class=\"n\">DatastoreOperation</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.DatastoreOperation.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "DatastoreOperation.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Direction", "modulename": "gcloud.rest.datastore", "qualname": "Direction", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.datastore.Direction.ASCENDING", "modulename": "gcloud.rest.datastore", "qualname": "Direction.ASCENDING", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.ASCENDING: &#x27;ASCENDING&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Direction.DESCENDING", "modulename": "gcloud.rest.datastore", "qualname": "Direction.DESCENDING", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.DESCENDING: &#x27;DESCENDING&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Direction.UNSPECIFIED", "modulename": "gcloud.rest.datastore", "qualname": "Direction.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Direction.UNSPECIFIED: &#x27;DIRECTION_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Entity", "modulename": "gcloud.rest.datastore", "qualname": "Entity", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Entity.__init__", "modulename": "gcloud.rest.datastore", "qualname": "Entity.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.Entity.key_kind", "modulename": "gcloud.rest.datastore", "qualname": "Entity.key_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.key.Key&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Entity.value_kind", "modulename": "gcloud.rest.datastore", "qualname": "Entity.value_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.value.Value&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Entity.key", "modulename": "gcloud.rest.datastore", "qualname": "Entity.key", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Entity.properties", "modulename": "gcloud.rest.datastore", "qualname": "Entity.properties", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Entity.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "Entity.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">Entity</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Entity.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "Entity.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.EntityResult", "modulename": "gcloud.rest.datastore", "qualname": "EntityResult", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.EntityResult.__init__", "modulename": "gcloud.rest.datastore", "qualname": "EntityResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">entity</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">Entity</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.EntityResult.entity_kind", "modulename": "gcloud.rest.datastore", "qualname": "EntityResult.entity_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.entity.Entity&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.EntityResult.entity", "modulename": "gcloud.rest.datastore", "qualname": "EntityResult.entity", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.EntityResult.version", "modulename": "gcloud.rest.datastore", "qualname": "EntityResult.version", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.EntityResult.cursor", "modulename": "gcloud.rest.datastore", "qualname": "EntityResult.cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.EntityResult.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "EntityResult.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">EntityResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.EntityResult.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "EntityResult.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Filter", "modulename": "gcloud.rest.datastore", "qualname": "Filter", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Filter.__init__", "modulename": "gcloud.rest.datastore", "qualname": "Filter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inner_filter</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">BaseFilter</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.Filter.inner_filter", "modulename": "gcloud.rest.datastore", "qualname": "Filter.inner_filter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Filter.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "Filter.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">Filter</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Filter.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "Filter.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.GQLCursor", "modulename": "gcloud.rest.datastore", "qualname": "GQLCursor", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.GQLCursor.__init__", "modulename": "gcloud.rest.datastore", "qualname": "GQLCursor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.GQLCursor.value", "modulename": "gcloud.rest.datastore", "qualname": "GQLCursor.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.GQLQuery", "modulename": "gcloud.rest.datastore", "qualname": "GQLQuery", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.rest.datastore.query.BaseQuery"}, {"fullname": "gcloud.rest.datastore.GQLQuery.__init__", "modulename": "gcloud.rest.datastore", "qualname": "GQLQuery.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query_string</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">allow_literals</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">named_bindings</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">positional_bindings</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.GQLQuery.json_key", "modulename": "gcloud.rest.datastore", "qualname": "GQLQuery.json_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;gqlQuery&#x27;"}, {"fullname": "gcloud.rest.datastore.GQLQuery.query_string", "modulename": "gcloud.rest.datastore", "qualname": "GQLQuery.query_string", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.GQLQuery.allow_literals", "modulename": "gcloud.rest.datastore", "qualname": "GQLQuery.allow_literals", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.GQLQuery.named_bindings", "modulename": "gcloud.rest.datastore", "qualname": "GQLQuery.named_bindings", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.GQLQuery.positional_bindings", "modulename": "gcloud.rest.datastore", "qualname": "GQLQuery.positional_bindings", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.GQLQuery.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "GQLQuery.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">GQLQuery</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.GQLQuery.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "GQLQuery.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Key", "modulename": "gcloud.rest.datastore", "qualname": "Key", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Key.__init__", "modulename": "gcloud.rest.datastore", "qualname": "Key.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">PathElement</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">namespace</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.Key.path_element_kind", "modulename": "gcloud.rest.datastore", "qualname": "Key.path_element_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.key.PathElement&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Key.project", "modulename": "gcloud.rest.datastore", "qualname": "Key.project", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Key.namespace", "modulename": "gcloud.rest.datastore", "qualname": "Key.namespace", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Key.path", "modulename": "gcloud.rest.datastore", "qualname": "Key.path", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Key.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "Key.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Key.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "Key.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.LatLng", "modulename": "gcloud.rest.datastore", "qualname": "LatLng", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.LatLng.__init__", "modulename": "gcloud.rest.datastore", "qualname": "LatLng.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lat</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">lon</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.LatLng.lat", "modulename": "gcloud.rest.datastore", "qualname": "LatLng.lat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.LatLng.lon", "modulename": "gcloud.rest.datastore", "qualname": "LatLng.lon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.LatLng.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "LatLng.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">lat_lng</span><span class=\"o\">.</span><span class=\"n\">LatLng</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.LatLng.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "LatLng.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Mode", "modulename": "gcloud.rest.datastore", "qualname": "Mode", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.datastore.Mode.NON_TRANSACTIONAL", "modulename": "gcloud.rest.datastore", "qualname": "Mode.NON_TRANSACTIONAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Mode.NON_TRANSACTIONAL: &#x27;NON_TRANSACTIONAL&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Mode.TRANSACTIONAL", "modulename": "gcloud.rest.datastore", "qualname": "Mode.TRANSACTIONAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Mode.TRANSACTIONAL: &#x27;TRANSACTIONAL&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Mode.UNSPECIFIED", "modulename": "gcloud.rest.datastore", "qualname": "Mode.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Mode.UNSPECIFIED: &#x27;MODE_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.MoreResultsType", "modulename": "gcloud.rest.datastore", "qualname": "MoreResultsType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.datastore.MoreResultsType.MORE_RESULTS_AFTER_CURSOR", "modulename": "gcloud.rest.datastore", "qualname": "MoreResultsType.MORE_RESULTS_AFTER_CURSOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.MORE_RESULTS_AFTER_CURSOR: &#x27;MORE_RESULTS_AFTER_CURSOR&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.MoreResultsType.MORE_RESULTS_AFTER_LIMIT", "modulename": "gcloud.rest.datastore", "qualname": "MoreResultsType.MORE_RESULTS_AFTER_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.MORE_RESULTS_AFTER_LIMIT: &#x27;MORE_RESULTS_AFTER_LIMIT&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.MoreResultsType.NO_MORE_RESULTS", "modulename": "gcloud.rest.datastore", "qualname": "MoreResultsType.NO_MORE_RESULTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.NO_MORE_RESULTS: &#x27;NO_MORE_RESULTS&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.MoreResultsType.NOT_FINISHED", "modulename": "gcloud.rest.datastore", "qualname": "MoreResultsType.NOT_FINISHED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.NOT_FINISHED: &#x27;NOT_FINISHED&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.MoreResultsType.UNSPECIFIED", "modulename": "gcloud.rest.datastore", "qualname": "MoreResultsType.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MoreResultsType.UNSPECIFIED: &#x27;MORE_RESULTS_TYPE_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.MutationResult", "modulename": "gcloud.rest.datastore", "qualname": "MutationResult", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.MutationResult.__init__", "modulename": "gcloud.rest.datastore", "qualname": "MutationResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">conflict_detected</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.MutationResult.key_kind", "modulename": "gcloud.rest.datastore", "qualname": "MutationResult.key_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.key.Key&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.MutationResult.key", "modulename": "gcloud.rest.datastore", "qualname": "MutationResult.key", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.MutationResult.version", "modulename": "gcloud.rest.datastore", "qualname": "MutationResult.version", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.MutationResult.conflict_detected", "modulename": "gcloud.rest.datastore", "qualname": "MutationResult.conflict_detected", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.MutationResult.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "MutationResult.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">mutation</span><span class=\"o\">.</span><span class=\"n\">MutationResult</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.MutationResult.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "MutationResult.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Operation", "modulename": "gcloud.rest.datastore", "qualname": "Operation", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.datastore.Operation.DELETE", "modulename": "gcloud.rest.datastore", "qualname": "Operation.DELETE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Operation.DELETE: &#x27;delete&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Operation.INSERT", "modulename": "gcloud.rest.datastore", "qualname": "Operation.INSERT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Operation.INSERT: &#x27;insert&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Operation.UPDATE", "modulename": "gcloud.rest.datastore", "qualname": "Operation.UPDATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Operation.UPDATE: &#x27;update&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Operation.UPSERT", "modulename": "gcloud.rest.datastore", "qualname": "Operation.UPSERT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Operation.UPSERT: &#x27;upsert&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.PathElement", "modulename": "gcloud.rest.datastore", "qualname": "PathElement", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PathElement.__init__", "modulename": "gcloud.rest.datastore", "qualname": "PathElement.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">id_</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.PathElement.kind", "modulename": "gcloud.rest.datastore", "qualname": "PathElement.kind", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PathElement.id", "modulename": "gcloud.rest.datastore", "qualname": "PathElement.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PathElement.name", "modulename": "gcloud.rest.datastore", "qualname": "PathElement.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PathElement.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "PathElement.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">PathElement</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.PathElement.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "PathElement.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Projection", "modulename": "gcloud.rest.datastore", "qualname": "Projection", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Projection.__init__", "modulename": "gcloud.rest.datastore", "qualname": "Projection.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">prop</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.Projection.prop", "modulename": "gcloud.rest.datastore", "qualname": "Projection.prop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Projection.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "Projection.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">projection</span><span class=\"o\">.</span><span class=\"n\">Projection</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Projection.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "Projection.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.PropertyFilter", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilter", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.rest.datastore.filter.BaseFilter"}, {"fullname": "gcloud.rest.datastore.PropertyFilter.__init__", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prop</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">operator</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">PropertyFilterOperator</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">Value</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.PropertyFilter.json_key", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilter.json_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;propertyFilter&#x27;"}, {"fullname": "gcloud.rest.datastore.PropertyFilter.prop", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilter.prop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PropertyFilter.operator", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilter.operator", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PropertyFilter.value", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilter.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PropertyFilter.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilter.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">PropertyFilter</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.PropertyFilter.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilter.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.PropertyFilterOperator", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilterOperator", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.datastore.PropertyFilterOperator.EQUAL", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilterOperator.EQUAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.EQUAL: &#x27;EQUAL&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.PropertyFilterOperator.GREATER_THAN", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilterOperator.GREATER_THAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.GREATER_THAN: &#x27;GREATER_THAN&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.PropertyFilterOperator.GREATER_THAN_OR_EQUAL", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilterOperator.GREATER_THAN_OR_EQUAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.GREATER_THAN_OR_EQUAL: &#x27;GREATER_THAN_OR_EQUAL&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.PropertyFilterOperator.HAS_ANCESTOR", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilterOperator.HAS_ANCESTOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.HAS_ANCESTOR: &#x27;HAS_ANCESTOR&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.PropertyFilterOperator.LESS_THAN", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilterOperator.LESS_THAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.LESS_THAN: &#x27;LESS_THAN&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.PropertyFilterOperator.LESS_THAN_OR_EQUAL", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilterOperator.LESS_THAN_OR_EQUAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.LESS_THAN_OR_EQUAL: &#x27;LESS_THAN_OR_EQUAL&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.PropertyFilterOperator.UNSPECIFIED", "modulename": "gcloud.rest.datastore", "qualname": "PropertyFilterOperator.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PropertyFilterOperator.UNSPECIFIED: &#x27;OPERATOR_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.PropertyOrder", "modulename": "gcloud.rest.datastore", "qualname": "PropertyOrder", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PropertyOrder.__init__", "modulename": "gcloud.rest.datastore", "qualname": "PropertyOrder.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prop</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">Direction</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Direction</span><span class=\"o\">.</span><span class=\"n\">ASCENDING</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ASCENDING&#39;</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.PropertyOrder.prop", "modulename": "gcloud.rest.datastore", "qualname": "PropertyOrder.prop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PropertyOrder.direction", "modulename": "gcloud.rest.datastore", "qualname": "PropertyOrder.direction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.PropertyOrder.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "PropertyOrder.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">property_order</span><span class=\"o\">.</span><span class=\"n\">PropertyOrder</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.PropertyOrder.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "PropertyOrder.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Query", "modulename": "gcloud.rest.datastore", "qualname": "Query", "kind": "class", "doc": "<p></p>\n", "bases": "gcloud.rest.datastore.query.BaseQuery"}, {"fullname": "gcloud.rest.datastore.Query.__init__", "modulename": "gcloud.rest.datastore", "qualname": "Query.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">query_filter</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"o\">.</span><span class=\"n\">Filter</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">property_order</span><span class=\"o\">.</span><span class=\"n\">PropertyOrder</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">start_cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">end_cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">projection</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">projection</span><span class=\"o\">.</span><span class=\"n\">Projection</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">distinct_on</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.Query.json_key", "modulename": "gcloud.rest.datastore", "qualname": "Query.json_key", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;query&#x27;"}, {"fullname": "gcloud.rest.datastore.Query.kind", "modulename": "gcloud.rest.datastore", "qualname": "Query.kind", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Query.query_filter", "modulename": "gcloud.rest.datastore", "qualname": "Query.query_filter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Query.orders", "modulename": "gcloud.rest.datastore", "qualname": "Query.orders", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Query.start_cursor", "modulename": "gcloud.rest.datastore", "qualname": "Query.start_cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Query.end_cursor", "modulename": "gcloud.rest.datastore", "qualname": "Query.end_cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Query.offset", "modulename": "gcloud.rest.datastore", "qualname": "Query.offset", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Query.limit", "modulename": "gcloud.rest.datastore", "qualname": "Query.limit", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Query.projection", "modulename": "gcloud.rest.datastore", "qualname": "Query.projection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Query.distinct_on", "modulename": "gcloud.rest.datastore", "qualname": "Query.distinct_on", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Query.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "Query.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">Query</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Query.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "Query.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.__init__", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">end_cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">entity_result_type</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">ResultType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">ResultType</span><span class=\"o\">.</span><span class=\"n\">UNSPECIFIED</span><span class=\"p\">:</span> <span class=\"s1\">&#39;RESULT_TYPE_UNSPECIFIED&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">entity_results</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">EntityResult</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">more_results</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">MoreResultsType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">MoreResultsType</span><span class=\"o\">.</span><span class=\"n\">UNSPECIFIED</span><span class=\"p\">:</span> <span class=\"s1\">&#39;MORE_RESULTS_TYPE_UNSPECIFIED&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">skipped_cursor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">skipped_results</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">snapshot_version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.entity_result_kind", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.entity_result_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.entity.EntityResult&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.end_cursor", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.end_cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.entity_result_type", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.entity_result_type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.entity_results", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.entity_results", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.more_results", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.more_results", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.skipped_cursor", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.skipped_cursor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.skipped_results", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.skipped_results", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.snapshot_version", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.snapshot_version", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">QueryResultBatch</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.QueryResultBatch.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "QueryResultBatch.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.ReadOnly", "modulename": "gcloud.rest.datastore", "qualname": "ReadOnly", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.ReadOnly.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "ReadOnly.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.ReadWrite", "modulename": "gcloud.rest.datastore", "qualname": "ReadWrite", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.ReadWrite.__init__", "modulename": "gcloud.rest.datastore", "qualname": "ReadWrite.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">previous_transaction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.ReadWrite.previous_transaction", "modulename": "gcloud.rest.datastore", "qualname": "ReadWrite.previous_transaction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.ReadWrite.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "ReadWrite.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.ResultType", "modulename": "gcloud.rest.datastore", "qualname": "ResultType", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, {"fullname": "gcloud.rest.datastore.ResultType.FULL", "modulename": "gcloud.rest.datastore", "qualname": "ResultType.FULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResultType.FULL: &#x27;FULL&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.ResultType.KEY_ONLY", "modulename": "gcloud.rest.datastore", "qualname": "ResultType.KEY_ONLY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResultType.KEY_ONLY: &#x27;KEY_ONLY&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.ResultType.PROJECTION", "modulename": "gcloud.rest.datastore", "qualname": "ResultType.PROJECTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResultType.PROJECTION: &#x27;PROJECTION&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.ResultType.UNSPECIFIED", "modulename": "gcloud.rest.datastore", "qualname": "ResultType.UNSPECIFIED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ResultType.UNSPECIFIED: &#x27;RESULT_TYPE_UNSPECIFIED&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.SCOPES", "modulename": "gcloud.rest.datastore", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/cloud-platform&#x27;, &#x27;https://www.googleapis.com/auth/datastore&#x27;]"}, {"fullname": "gcloud.rest.datastore.TransactionOptions", "modulename": "gcloud.rest.datastore", "qualname": "TransactionOptions", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.TransactionOptions.__init__", "modulename": "gcloud.rest.datastore", "qualname": "TransactionOptions.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">option</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">transaction_options</span><span class=\"o\">.</span><span class=\"n\">ReadWrite</span><span class=\"p\">,</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">transaction_options</span><span class=\"o\">.</span><span class=\"n\">ReadOnly</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.TransactionOptions.option", "modulename": "gcloud.rest.datastore", "qualname": "TransactionOptions.option", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.TransactionOptions.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "TransactionOptions.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Value", "modulename": "gcloud.rest.datastore", "qualname": "Value", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Value.__init__", "modulename": "gcloud.rest.datastore", "qualname": "Value.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">exclude_from_indexes</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "gcloud.rest.datastore.Value.key_kind", "modulename": "gcloud.rest.datastore", "qualname": "Value.key_kind", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;gcloud.rest.datastore.key.Key&#x27;&gt;"}, {"fullname": "gcloud.rest.datastore.Value.value", "modulename": "gcloud.rest.datastore", "qualname": "Value.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Value.excludeFromIndexes", "modulename": "gcloud.rest.datastore", "qualname": "Value.excludeFromIndexes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.datastore.Value.from_repr", "modulename": "gcloud.rest.datastore", "qualname": "Value.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">datastore</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">Value</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.datastore.Value.to_repr", "modulename": "gcloud.rest.datastore", "qualname": "Value.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.kms", "modulename": "gcloud.rest.kms", "kind": "module", "doc": "<p>This library implements various methods for working with the Google KMS APIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-rest-kms\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>We're still working on more complete documentation, but roughly you can do:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.kms</span> <span class=\"kn\">import</span> <span class=\"n\">KMS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.kms</span> <span class=\"kn\">import</span> <span class=\"n\">decode</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.kms</span> <span class=\"kn\">import</span> <span class=\"n\">encode</span>\n\n<span class=\"n\">kms</span> <span class=\"o\">=</span> <span class=\"n\">KMS</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-kms-project&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;my-keyring&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;my-key-name&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># encrypt</span>\n<span class=\"n\">plaintext</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;the-best-animal-is-the-aardvark&#39;</span>\n<span class=\"n\">ciphertext</span> <span class=\"o\">=</span> <span class=\"n\">kms</span><span class=\"o\">.</span><span class=\"n\">encrypt</span><span class=\"p\">(</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">plaintext</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># decrypt</span>\n<span class=\"k\">assert</span> <span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">kms</span><span class=\"o\">.</span><span class=\"n\">decrypt</span><span class=\"p\">(</span><span class=\"n\">ciphertext</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">plaintext</span>\n\n<span class=\"c1\"># close the HTTP session</span>\n<span class=\"c1\"># Note that other options include:</span>\n<span class=\"c1\"># * providing your own session: `KMS(.., session=session)`</span>\n<span class=\"c1\"># * using a context manager: `with KMS(..) as kms:`</span>\n<span class=\"n\">kms</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-rest-kms</code> along with a local\nemulator. Setting the <code>$KMS_EMULATOR_HOST</code> environment variable to the address\nof your emulator should be enough to do the trick.</p>\n"}, {"fullname": "gcloud.rest.kms.decode", "modulename": "gcloud.rest.kms", "qualname": "decode", "kind": "function", "doc": "<p><a href=\"https://en.wikipedia.org/wiki/Base64#URL_applications\">https://en.wikipedia.org/wiki/Base64#URL_applications</a> modified Base64\nfor URL variants exist, where the + and / characters of standard\nBase64 are respectively replaced by - and _</p>\n\n<p>Does not make any assumptions about encoding -- if you're encoding a bytes\npayload then <code>foo == decode(encode(foo))</code>, but if <code>foo</code> is a string you'll\nneed to <code>.decode()</code> manually according to your expected encoding scheme.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.kms.encode", "modulename": "gcloud.rest.kms", "qualname": "encode", "kind": "function", "doc": "<p><a href=\"https://en.wikipedia.org/wiki/Base64#URL_applications\">https://en.wikipedia.org/wiki/Base64#URL_applications</a> modified Base64\nfor URL variants exist, where the + and / characters of standard\nBase64 are respectively replaced by - and _</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.kms.KMS", "modulename": "gcloud.rest.kms", "qualname": "KMS", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.kms.KMS.__init__", "modulename": "gcloud.rest.kms", "qualname": "KMS.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">keyproject</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">keyring</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">keyname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">location</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;global&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.kms.KMS.session", "modulename": "gcloud.rest.kms", "qualname": "KMS.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.kms.KMS.token", "modulename": "gcloud.rest.kms", "qualname": "KMS.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.kms.KMS.headers", "modulename": "gcloud.rest.kms", "qualname": "KMS.headers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.kms.KMS.decrypt", "modulename": "gcloud.rest.kms", "qualname": "KMS.decrypt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ciphertext</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.kms.KMS.encrypt", "modulename": "gcloud.rest.kms", "qualname": "KMS.encrypt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">plaintext</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.kms.KMS.close", "modulename": "gcloud.rest.kms", "qualname": "KMS.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.kms.SCOPES", "modulename": "gcloud.rest.kms", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/cloudkms&#x27;]"}, {"fullname": "gcloud.rest.pubsub", "modulename": "gcloud.rest.pubsub", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Pubsub\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-rest-pubsub\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<h3 id=\"subscriber\">Subscriber</h3>\n\n<p><code>gcloud-rest-pubsub</code> provides <code>SubscriberClient</code> as an interface to call\npubsub's HTTP API:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">SubscriberClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">SubscriberMessage</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">SubscriberClient</span><span class=\"p\">()</span>\n<span class=\"c1\"># create subscription</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_subscription</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;projects/&lt;project_name&gt;/subscriptions/&lt;subscription_name&gt;&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;projects/&lt;project_name&gt;/topics/&lt;topic_name&gt;&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pull messages</span>\n<span class=\"n\">messages</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">SubscriberMessage</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">pull</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;projects/&lt;project_name&gt;/subscriptions/&lt;subscription_name&gt;&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">max_messages</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>There's also <code>gcloud.rest.pubsub.subscribe</code> helper function you can use to setup\na pubsub processing pipeline. It is built with <code>asyncio</code> and thus only\navailable in the <code>gcloud-rest-pubsub</code> package. The usage is fairly simple:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">SubscriberClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">subscribe</span>\n\n<span class=\"n\">subscriber_client</span> <span class=\"o\">=</span> <span class=\"n\">SubscriberClient</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">handler</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span>\n\n<span class=\"n\">subscribe</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;projects/&lt;my_project&gt;/subscriptions/&lt;my_subscription&gt;&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">handler</span><span class=\"p\">,</span>\n    <span class=\"n\">subscriber_client</span><span class=\"p\">,</span>\n    <span class=\"n\">num_producers</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">max_messages_per_producer</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n    <span class=\"n\">ack_window</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">,</span>\n    <span class=\"n\">num_tasks_per_consumer</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">enable_nack</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">nack_window</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>While defaults are somewhat sensible, it is highly recommended to performance\ntest your application and tweak function parameter to your specific needs.\nHere's a few hints:</p>\n\n<ul>\n<li><code>handler</code>: An function that will be called for each message. It should\naccept an instance of <code>SubscriberMessage</code> as its only argument and return\n<code>None</code> if the message should be acked. An exception raised within the handler\nwill result in the message being left to expire, and thus it will be\nredelivered according to your subscription's ack deadline.</li>\n<li><code>num_producers</code>: Number of workers that will be making <code>pull</code> requests to\npubsub. Please note that a worker will only fetch new batch once the\n<code>handler</code> was called for each message from the previous batch. This means\nthat running only a single worker will most likely make your application IO\nbound. If you notice this being an issue don't hesitate to bump this\nparameter.</li>\n<li><code>max_messages_per_producer</code>: Number of pubsub messages a worker will try to\nfetch in a single batch. This value is passed to <code>pull</code> <a href=\"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions/pull#request-body\">endpoint</a>\nas <code>maxMessages</code> parameter. A rule of thumb here is the faster your handler\nis the bigger this value should be.</li>\n<li><code>ack_window</code>: Ack requests are handled separately and are done in batches.\nThis parameters specifies how often ack requests will be made. Setting it to\n<code>0.0</code> will effectively disable batching.</li>\n<li><code>num_tasks_per_consumer</code>: How many <code>handle</code> calls a worker can make until it\nblocks to wait for them to return. If you process messages independently from\neach other you should be good with the default value of <code>1</code>. If you do\nsomething fancy (e.g. aggregate messages before processing them), you'll want\na higher pool here. You can think of <code>num_producers * num_tasks_per_consumer</code>\nas an upper limit of how many messages can possibly be within your\napplication state at any given moment.</li>\n<li><code>enable_nack</code>: If enabled messages for which <code>callback</code> raised an exception\nwill be explicitly nacked using <code>modifyAckDeadline</code> endpoint so they can be\nretried immediately.</li>\n<li><code>nack_window</code>: Same as <code>ack_window</code> but for nack requests.</li>\n</ul>\n\n<p>Note that this method was built under the assumption that it is the main thread\nof your application. It may work just fine otherwise, but be aware that the\nusecase of running it in a background thread has not been extensively tested.</p>\n\n<p>As it is generally assumed to run in the foreground, it relies on task\ncancellation to shut itself down (ie. caused by process termination). To cancel\nit from a thread, you can send an <code>asyncio.CancelledError</code> event via\n<code>Task.cancel()</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">subscribe_task</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># snip</span>\n\n<span class=\"n\">subscribe_task</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h3 id=\"prometheus-metrics\">Prometheus Metrics</h3>\n\n<p>If you like pull-based metrics like Prometheus you will be pleased to know that\nthe subscriber records Prometheus metrics in the form\n<code>gcloud_rest_pubsub_&lt;metric&gt;</code>, which will have no effect if you don't use\nPrometheus to scrape app metrics:</p>\n\n<ul>\n<li><code>subscriber_batch_size</code> - [histogram] how many messages were pulled from the\nsubscription in a single batch</li>\n<li><code>subscriber_consume</code> (labels: <code>outcome = {'succeeded', 'cancelled', 'failed',\n'failfast'}</code>) - [counter] a consume operation has completed with a given\noutcome</li>\n<li><code>subscriber_consume_latency_seconds</code> (labels: <code>phase = {'receive',\n'queueing', 'runtime'}</code>) - [histogram] how many seconds taken to receive a\nmessage, while waiting for processing, or to complete the callback</li>\n<li><code>subscriber_batch_status</code> (labels: <code>component = {'acker', 'nacker'}, outcome\n= {'succeeded', 'failed'}</code>) - [counter] a batch has succeeded or failed to be\nacked or nacked</li>\n<li><code>subscriber_messages_processed</code> (labels: <code>component = {'acker', 'nacker'}</code>) -\n[counter] the number of messages that were processed, either by being acked\nor nacked</li>\n<li><code>subscriber_messages_received</code> - [counter] the number of messages pulled from\npubsub</li>\n</ul>\n\n<h3 id=\"metrics-agent-deprecated\">Metrics Agent (Deprecated)</h3>\n\n<p><code>subscribe</code> has also an optional <code>metrics_client</code> argument which will be\nremoved in a future release. You can provide any metrics agent that implements\nthe same interface as <code>MetricsAgent</code> (Datadog client will do ;) ) and get the\nfollowing metrics:</p>\n\n<ul>\n<li><code>pubsub.producer.batch</code> - [histogram] actual size of a batch retrieved from\npubsub.</li>\n<li><code>pubsub.consumer.failfast</code> - [increment] a message was dropped due to its\nlease being expired.</li>\n<li><code>pubsub.consumer.latency.receive</code> - [histogram] how many seconds it took for\na message to reach handler after it was published.</li>\n<li><code>pubsub.consumer.succeeded</code> - [increment] <code>handler</code> call was successfull.</li>\n<li><code>pubsub.consumer.failed</code> - [increment] <code>handler</code> call raised an exception.</li>\n<li><code>pubsub.consumer.latency.runtime</code> - [histogram] <code>handler</code> execution time in\nseconds.</li>\n<li><code>pubsub.acker.batch.failed</code> - [increment] ack request failed.</li>\n<li><code>pubsub.acker.batch</code> - [histogram] actual number of messages that was acked\nin a single request.</li>\n</ul>\n\n<h2 id=\"publisher\">Publisher</h2>\n\n<p>The <code>PublisherClient</code> is a dead-simple alternative to the official Google Cloud\nPub/Sub publisher client. The main design goal was to eliminate all the\nadditional gRPC overhead implemented by the upstream client.</p>\n\n<p>If migrating between this library and the official one, the main difference is\nthis: the <code>gcloud-{aio,rest}-pubsub</code> publisher's <code>.publish()</code> method\n<em>immediately</em> publishes the messages you've provided, rather than maintaining\nour own publishing queue, implementing batching and flow control, etc. If\nyou're looking for a full-featured publishing library with all the bells and\nwhistles built in, you may be interested in the upstream provider. If you're\nlooking to manage your own batching / timeouts / retry / threads / etc, this\nlibrary should be a bit easier to work with.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">PubsubMessage</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.pubsub</span> <span class=\"kn\">import</span> <span class=\"n\">PublisherClient</span>\n\n<span class=\"k\">with</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">PublisherClient</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">)</span>\n\n    <span class=\"n\">topic</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">topic_path</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-gcp-project&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;my-topic-name&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">PubsubMessage</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">&#39;payload&#39;</span><span class=\"p\">,</span> <span class=\"n\">attribute</span><span class=\"o\">=</span><span class=\"s1\">&#39;value&#39;</span><span class=\"p\">),</span>\n        <span class=\"n\">PubsubMessage</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">&#39;other payload&#39;</span><span class=\"p\">,</span> <span class=\"n\">other_attribute</span><span class=\"o\">=</span><span class=\"s1\">&#39;whatever&#39;</span><span class=\"p\">,</span>\n                      <span class=\"n\">more_attributes</span><span class=\"o\">=</span><span class=\"s1\">&#39;something else&#39;</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"p\">,</span> <span class=\"n\">messages</span><span class=\"p\">)</span>\n    <span class=\"c1\"># response == {&#39;messageIds&#39;: [&#39;1&#39;, &#39;2&#39;]}</span>\n</code></pre>\n</div>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-rest-pubsub</code> along with a\nlocal Pubsub emulator. Setting the <code>$PUBSUB_EMULATOR_HOST</code> environment variable\nto the local address of your emulator should be enough to do the trick.</p>\n\n<p>For example, using the official Google Pubsub emulator:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>gcloud<span class=\"w\"> </span>beta<span class=\"w\"> </span>emulators<span class=\"w\"> </span>pubsub<span class=\"w\"> </span>start<span class=\"w\"> </span>--host-port<span class=\"o\">=</span><span class=\"m\">0</span>.0.0.0:8681\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">PUBSUB_EMULATOR_HOST</span><span class=\"o\">=</span><span class=\"s1\">&#39;0.0.0.0:8681&#39;</span>\n</code></pre>\n</div>\n\n<p>Any <code>gcloud-rest-pubsub</code> Publisher requests made with that environment variable\nset will query the emulator instead of the official GCS APIs.</p>\n\n<p>For easier ergonomics, you may be interested in\n<a href=\"https://github.com/TheKevJames/tools/tree/master/docker-gcloud-pubsub-emulator\">thekevjames/gcloud-pubsub-emulator</a>.</p>\n\n<h2 id=\"customization\">Customization</h2>\n\n<p>This library mostly tries to stay agnostic of potential use-cases; as such, we\ndo not implement any sort of retrying or other policies under the assumption\nthat we wouldn't get things right for every user's situation.</p>\n\n<p>As such, we recommend configuring your own policies on an as-needed basis. The\n<a href=\"https://pypi.org/project/backoff/\">backoff</a> library can make this quite straightforward! For example,\nyou may find it useful to configure something like:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">SubscriberClientWithBackoff</span><span class=\"p\">(</span><span class=\"n\">SubscriberClient</span><span class=\"p\">):</span>\n    <span class=\"nd\">@backoff</span><span class=\"o\">.</span><span class=\"n\">on_exception</span><span class=\"p\">(</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">expo</span><span class=\"p\">,</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientResponseError</span><span class=\"p\">,</span>\n                          <span class=\"n\">max_tries</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">jitter</span><span class=\"o\">=</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">full_jitter</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pull</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">pull</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, {"fullname": "gcloud.rest.pubsub.PublisherClient", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.__init__", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.session", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.token", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.project_path", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.project_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.subscription_path", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.subscription_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.topic_path", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.topic_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.list_topics", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.list_topics", "kind": "function", "doc": "<p>List topics</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query_params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.create_topic", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.create_topic", "kind": "function", "doc": "<p>Create topic.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.delete_topic", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.delete_topic", "kind": "function", "doc": "<p>Delete topic.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.publish", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.publish", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">messages</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">PubsubMessage</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.PublisherClient.close", "modulename": "gcloud.rest.pubsub", "qualname": "PublisherClient.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.PubsubMessage", "modulename": "gcloud.rest.pubsub", "qualname": "PubsubMessage", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.PubsubMessage.__init__", "modulename": "gcloud.rest.pubsub", "qualname": "PubsubMessage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">ordering_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, {"fullname": "gcloud.rest.pubsub.PubsubMessage.data", "modulename": "gcloud.rest.pubsub", "qualname": "PubsubMessage.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.PubsubMessage.attributes", "modulename": "gcloud.rest.pubsub", "qualname": "PubsubMessage.attributes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.PubsubMessage.ordering_key", "modulename": "gcloud.rest.pubsub", "qualname": "PubsubMessage.ordering_key", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.PubsubMessage.to_repr", "modulename": "gcloud.rest.pubsub", "qualname": "PubsubMessage.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.__init__", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.session", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.token", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.project_path", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.project_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.subscription_path", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.subscription_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.topic_path", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.topic_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.create_subscription", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.create_subscription", "kind": "function", "doc": "<p>Create subscription.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.patch_subscription", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.patch_subscription", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.delete_subscription", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.delete_subscription", "kind": "function", "doc": "<p>Delete subscription.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.pull", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.pull", "kind": "function", "doc": "<p>Pull messages from subscription</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">max_messages</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">subscriber_message</span><span class=\"o\">.</span><span class=\"n\">SubscriberMessage</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.acknowledge", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.acknowledge", "kind": "function", "doc": "<p>Acknowledge messages by ackIds</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ack_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.modify_ack_deadline", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.modify_ack_deadline", "kind": "function", "doc": "<p>Modify messages' ack deadline.\nSet ack deadline to 0 to nack messages.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ack_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">ack_deadline_seconds</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.get_subscription", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.get_subscription", "kind": "function", "doc": "<p>Get Subscription</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">subscription</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.list_subscriptions", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.list_subscriptions", "kind": "function", "doc": "<p>List subscriptions</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query_params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberClient.close", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberClient.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage.__init__", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ack_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">message_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">publish_time</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">delivery_attempt</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage.ack_id", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage.ack_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage.message_id", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage.message_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage.publish_time", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage.publish_time", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage.data", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage.attributes", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage.attributes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage.delivery_attempt", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage.delivery_attempt", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage.from_repr", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage.from_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">received_message</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">pubsub</span><span class=\"o\">.</span><span class=\"n\">subscriber_message</span><span class=\"o\">.</span><span class=\"n\">SubscriberMessage</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.pubsub.SubscriberMessage.to_repr", "modulename": "gcloud.rest.pubsub", "qualname": "SubscriberMessage.to_repr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage", "modulename": "gcloud.rest.storage", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Storage\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-rest-storage\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>To upload a file, you might do something like the following:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">aiofiles</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.storage</span> <span class=\"kn\">import</span> <span class=\"n\">Storage</span>\n\n\n<span class=\"k\">with</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Storage</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">aiofiles</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;/path/to/my/file&#39;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n        <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;my-bucket-name&#39;</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;path/to/gcs/folder&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">output</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Note that there are multiple ways to accomplish the above, ie,. by making use\nof the <code>Bucket</code> and <code>Blob</code> convenience classes if that better fits your\nuse-case.</p>\n\n<p>Of course, the major benefit of using an library is being able to\nparallelize operations like this. Since <code>gcloud-rest-storage</code> is fully\nasyncio-compatible, you can use any of the builtin asyncio method to perform\nmore complicated operations:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">my_files</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">&#39;/local/path/to/file.1&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;path/in/gcs.1&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;/local/path/to/file.2&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;path/in/gcs.2&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;/local/path/to/file.3&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;different/gcs/path/filename.3&#39;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Storage</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Prepare all our upload data</span>\n    <span class=\"n\">uploads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">local_name</span><span class=\"p\">,</span> <span class=\"n\">gcs_name</span> <span class=\"ow\">in</span> <span class=\"n\">my_files</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"k\">with</span> <span class=\"n\">aiofiles</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">local_name</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n            <span class=\"n\">uploads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">gcs_name</span><span class=\"p\">,</span> <span class=\"n\">contents</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># Simultaneously upload all files</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">gather</span><span class=\"p\">(</span>\n        <span class=\"o\">*</span><span class=\"p\">[</span>\n            <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span><span class=\"s1\">&#39;my-bucket-name&#39;</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">file_</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">file_</span> <span class=\"ow\">in</span> <span class=\"n\">uploads</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>You can also refer to the <a href=\"https://github.com/talkiq/gcloud-rest/blob/master/storage/tests/integration/smoke_test.py\">smoke test</a> for more info and examples.</p>\n\n<p>Note that you can also let <code>gcloud-rest-storage</code> do its own session management,\nso long as you give us a hint when to close that session:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">with</span> <span class=\"n\">Storage</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"c1\"># closes the client.session on leaving the context manager</span>\n\n<span class=\"c1\"># OR</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Storage</span><span class=\"p\">()</span>\n<span class=\"c1\"># do stuff</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>  <span class=\"c1\"># close the session explicitly</span>\n</code></pre>\n</div>\n\n<h2 id=\"file-encodings\">File Encodings</h2>\n\n<p>In some cases, <code>aiohttp</code> needs to transform the objects returned from GCS into\nstrings, eg. for debug logging and other such issues. The built-in <code>await\nresponse.text()</code> operation relies on <a href=\"https://pypi.org/project/chardet/\">chardet</a> for guessing the\ncharacter encoding in any cases where it can not be determined based on the\nfile metadata.</p>\n\n<p>Unfortunately, this operation can be extremely slow, especially in cases where\nyou might be working with particularly large files. If you notice odd latency\nissues when reading your results, you may want to set your character encoding\nmore explicitly within GCS, eg. by ensuring you set the <code>contentType</code> of the\nrelevant objects to something suffixed with <code>; charset=utf-8</code>. For example, in\nthe case of <code>contentType='application/x-netcdf'</code> files exhibiting latency, you\ncould instead set <code>contentType='application/x-netcdf; charset=utf-8</code>. See\n<a href=\"https://github.com/talkiq/gcloud-rest/issues/172\">Issue #172</a> for more info!</p>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-rest-storage</code> along with a\nlocal GCS emulator. Setting the <code>$STORAGE_EMULATOR_HOST</code> environment variable\nto the address of your emulator should be enough to do the trick.</p>\n\n<p>For example, using <a href=\"https://github.com/fsouza/fake-gcs-server\">fsouza/fake-gcs-server</a>, you can do:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>docker<span class=\"w\"> </span>run<span class=\"w\"> </span>-d<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">4443</span>:4443<span class=\"w\"> </span>-v<span class=\"w\"> </span><span class=\"nv\">$PWD</span>/my-sample-data:/data<span class=\"w\"> </span>fsouza/fake-gcs-server\n<span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">STORAGE_EMULATOR_HOST</span><span class=\"o\">=</span><span class=\"s1\">&#39;0.0.0.0:4443&#39;</span>\n</code></pre>\n</div>\n\n<p>Any <code>gcloud-rest-storage</code> requests made with that environment variable set will\nquery <code>fake-gcs-server</code> instead of the official GCS API.</p>\n\n<p>Note that some emulation systems require disabling SSL -- if you're using a\ncustom http session, you may need to disable SSL verification.</p>\n\n<h2 id=\"customization\">Customization</h2>\n\n<p>This library mostly tries to stay agnostic of potential use-cases; as such, we\ndo not implement any sort of retrying or other policies under the assumption\nthat we wouldn't get things right for every user's situation.</p>\n\n<p>As such, we recommend configuring your own policies on an as-needed basis. The\n<a href=\"https://pypi.org/project/backoff/\">backoff</a> library can make this quite straightforward! For example,\nyou may find it useful to configure something like:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">StorageWithBackoff</span><span class=\"p\">(</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">Storage</span><span class=\"p\">):</span>\n    <span class=\"nd\">@backoff</span><span class=\"o\">.</span><span class=\"n\">on_exception</span><span class=\"p\">(</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">expo</span><span class=\"p\">,</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientResponseError</span><span class=\"p\">,</span>\n                          <span class=\"n\">max_tries</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">jitter</span><span class=\"o\">=</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">full_jitter</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@backoff</span><span class=\"o\">.</span><span class=\"n\">on_exception</span><span class=\"p\">(</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">expo</span><span class=\"p\">,</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientResponseError</span><span class=\"p\">,</span>\n                          <span class=\"n\">max_tries</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">jitter</span><span class=\"o\">=</span><span class=\"n\">backoff</span><span class=\"o\">.</span><span class=\"n\">full_jitter</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">download</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, {"fullname": "gcloud.rest.storage.Blob", "modulename": "gcloud.rest.storage", "qualname": "Blob", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.storage.Blob.__init__", "modulename": "gcloud.rest.storage", "qualname": "Blob.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">Bucket</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "gcloud.rest.storage.Blob.bucket", "modulename": "gcloud.rest.storage", "qualname": "Blob.bucket", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.storage.Blob.name", "modulename": "gcloud.rest.storage", "qualname": "Blob.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.storage.Blob.size", "modulename": "gcloud.rest.storage", "qualname": "Blob.size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "gcloud.rest.storage.Blob.chunk_size", "modulename": "gcloud.rest.storage", "qualname": "Blob.chunk_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "gcloud.rest.storage.Blob.download", "modulename": "gcloud.rest.storage", "qualname": "Blob.download", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Blob.upload", "modulename": "gcloud.rest.storage", "qualname": "Blob.upload", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Blob.get_signed_url", "modulename": "gcloud.rest.storage", "qualname": "Blob.get_signed_url", "kind": "function", "doc": "<p>Create a temporary access URL for Storage Blob accessible by anyone\nwith the link.</p>\n\n<p>Adapted from Google Documentation:\n<a href=\"https://cloud.google.com/storage/docs/access-control/signing-urls-manually#python-sample\">https://cloud.google.com/storage/docs/access-control/signing-urls-manually#python-sample</a></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">expiration</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">http_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;GET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Bucket", "modulename": "gcloud.rest.storage", "qualname": "Bucket", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.storage.Bucket.__init__", "modulename": "gcloud.rest.storage", "qualname": "Bucket.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">storage</span><span class=\"p\">:</span> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">Storage</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "gcloud.rest.storage.Bucket.storage", "modulename": "gcloud.rest.storage", "qualname": "Bucket.storage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.storage.Bucket.name", "modulename": "gcloud.rest.storage", "qualname": "Bucket.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.storage.Bucket.get_blob", "modulename": "gcloud.rest.storage", "qualname": "Bucket.get_blob", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">blob_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">blob</span><span class=\"o\">.</span><span class=\"n\">Blob</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Bucket.blob_exists", "modulename": "gcloud.rest.storage", "qualname": "Bucket.blob_exists", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">blob_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Bucket.list_blobs", "modulename": "gcloud.rest.storage", "qualname": "Bucket.list_blobs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Bucket.new_blob", "modulename": "gcloud.rest.storage", "qualname": "Bucket.new_blob", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">blob_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">blob</span><span class=\"o\">.</span><span class=\"n\">Blob</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Bucket.get_metadata", "modulename": "gcloud.rest.storage", "qualname": "Bucket.get_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.SCOPES", "modulename": "gcloud.rest.storage", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/devstorage.read_write&#x27;]"}, {"fullname": "gcloud.rest.storage.Storage", "modulename": "gcloud.rest.storage", "qualname": "Storage", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.storage.Storage.__init__", "modulename": "gcloud.rest.storage", "qualname": "Storage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.storage.Storage.session", "modulename": "gcloud.rest.storage", "qualname": "Storage.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.storage.Storage.token", "modulename": "gcloud.rest.storage", "qualname": "Storage.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.storage.Storage.list_buckets", "modulename": "gcloud.rest.storage", "qualname": "Storage.list_buckets", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">Bucket</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.get_bucket", "modulename": "gcloud.rest.storage", "qualname": "Storage.get_bucket", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">bucket_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">Bucket</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.copy", "modulename": "gcloud.rest.storage", "qualname": "Storage.copy", "kind": "function", "doc": "<p>When files are too large, multiple calls to <code>rewriteTo</code> are made. We\nrefer to the same copy job by using the <code>rewriteToken</code> from the\nprevious return payload in subsequent <code>rewriteTo</code> calls.</p>\n\n<p>Using the <code>rewriteTo</code> GCS API is preferred in part because it is able\nto make multiple calls to fully copy an object whereas the <code>copyTo</code> GCS\nAPI only calls <code>rewriteTo</code> once under the hood, and thus may fail if\nfiles are large.</p>\n\n<p>In the rare case you need to resume a copy operation, include the\n<code>rewriteToken</code> in the <code>params</code> dictionary. Once you begin a multi-part\ncopy operation, you then have 1 week to complete the copy job.</p>\n\n<p><a href=\"https://cloud.google.com/storage/docs/json_api/v1/objects/rewrite\">https://cloud.google.com/storage/docs/json_api/v1/objects/rewrite</a></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">destination_bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">new_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.delete", "modulename": "gcloud.rest.storage", "qualname": "Storage.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.download", "modulename": "gcloud.rest.storage", "qualname": "Storage.download", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.download_to_filename", "modulename": "gcloud.rest.storage", "qualname": "Storage.download_to_filename", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.download_metadata", "modulename": "gcloud.rest.storage", "qualname": "Storage.download_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.download_stream", "modulename": "gcloud.rest.storage", "qualname": "Storage.download_stream", "kind": "function", "doc": "<p>Download a GCS object in a buffered stream.</p>\n\n<p>Args:\n    bucket (str): The bucket from which to download.\n    object_name (str): The object within the bucket to download.\n    headers (Optional[Dict[str, Any]], optional): Custom header values\n        for the request, such as range. Defaults to None.\n    timeout (int, optional): Timeout, in seconds, for the request. Note\n        that with this function, this is the time to the beginning of\n        the response data (TTFB). Defaults to 10.\n    session (Optional[Session], optional): A specific session to\n        (re)use. Defaults to None.</p>\n\n<p>Returns:\n    StreamResponse: A object encapsulating the stream, similar to\n    io.BufferedIOBase, but it only supports the read() function.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">StreamResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.list_objects", "modulename": "gcloud.rest.storage", "qualname": "Storage.list_objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.upload", "modulename": "gcloud.rest.storage", "qualname": "Storage.upload", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">file_data</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force_resumable_upload</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.upload_from_filename", "modulename": "gcloud.rest.storage", "qualname": "Storage.upload_from_filename", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.patch_metadata", "modulename": "gcloud.rest.storage", "qualname": "Storage.patch_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">object_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.get_bucket_metadata", "modulename": "gcloud.rest.storage", "qualname": "Storage.get_bucket_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">bucket</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.Storage.close", "modulename": "gcloud.rest.storage", "qualname": "Storage.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.storage.StreamResponse", "modulename": "gcloud.rest.storage", "qualname": "StreamResponse", "kind": "class", "doc": "<p>This class provides an abstraction between the slightly different\nrecommended streaming implementations between requests and aiohttp.</p>\n"}, {"fullname": "gcloud.rest.storage.StreamResponse.__init__", "modulename": "gcloud.rest.storage", "qualname": "StreamResponse.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, {"fullname": "gcloud.rest.storage.StreamResponse.content_length", "modulename": "gcloud.rest.storage", "qualname": "StreamResponse.content_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "gcloud.rest.storage.StreamResponse.read", "modulename": "gcloud.rest.storage", "qualname": "StreamResponse.read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.taskqueue", "modulename": "gcloud.rest.taskqueue", "kind": "module", "doc": "<p>This library implements various methods for working with the Google Taskqueue\nAPIs.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">$ </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>gcloud-rest-taskqueue\n</code></pre>\n</div>\n\n<h2 id=\"usage\">Usage</h2>\n\n<p>We're still working on documentation -- for now, you can use the\n<a href=\"https://github.com/talkiq/gcloud-rest/tree/master/taskqueue/tests/integration\">smoke tests</a> as an example.</p>\n\n<h2 id=\"emulators\">Emulators</h2>\n\n<p>For testing purposes, you may want to use <code>gcloud-rest-taskqueue</code> along with a\nlocal emulator. Setting the <code>$CLOUDTASKS_EMULATOR_HOST</code> environment variable to\nthe address of your emulator should be enough to do the trick.</p>\n"}, {"fullname": "gcloud.rest.taskqueue.PushQueue", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.__init__", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">project</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">taskqueue</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">location</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;us-central1&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">service_file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">IO</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">AnyStr</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">gcloud</span><span class=\"o\">.</span><span class=\"n\">rest</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">Token</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.session", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.session", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.token", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.token", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.headers", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.headers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.task_name", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.task_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.create", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.create", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.delete", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">tname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.get", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">tname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.list", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.list", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">page_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">page_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.run", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.run", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">tname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.taskqueue.PushQueue.close", "modulename": "gcloud.rest.taskqueue", "qualname": "PushQueue.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "gcloud.rest.taskqueue.SCOPES", "modulename": "gcloud.rest.taskqueue", "qualname": "SCOPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;https://www.googleapis.com/auth/cloud-tasks&#x27;]"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();