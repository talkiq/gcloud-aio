Search.setIndex({"docnames": [".github/CONTRIBUTING", ".github/RELEASE", "autoapi/auth/build_constants/index", "autoapi/auth/iam/index", "autoapi/auth/index", "autoapi/auth/session/index", "autoapi/auth/token/index", "autoapi/auth/utils/index", "autoapi/bigquery/bigquery/index", "autoapi/bigquery/dataset/index", "autoapi/bigquery/index", "autoapi/bigquery/job/index", "autoapi/bigquery/table/index", "autoapi/bigquery/utils/index", "autoapi/datastore/array/index", "autoapi/datastore/constants/index", "autoapi/datastore/datastore/index", "autoapi/datastore/datastore_operation/index", "autoapi/datastore/entity/index", "autoapi/datastore/filter/index", "autoapi/datastore/index", "autoapi/datastore/key/index", "autoapi/datastore/lat_lng/index", "autoapi/datastore/mutation/index", "autoapi/datastore/projection/index", "autoapi/datastore/property_order/index", "autoapi/datastore/query/index", "autoapi/datastore/transaction_options/index", "autoapi/datastore/value/index", "autoapi/kms/index", "autoapi/kms/kms/index", "autoapi/kms/utils/index", "autoapi/pubsub/index", "autoapi/pubsub/metrics/index", "autoapi/pubsub/metrics_agent/index", "autoapi/pubsub/publisher_client/index", "autoapi/pubsub/subscriber/index", "autoapi/pubsub/subscriber_client/index", "autoapi/pubsub/subscriber_message/index", "autoapi/pubsub/utils/index", "autoapi/storage/blob/index", "autoapi/storage/bucket/index", "autoapi/storage/constants/index", "autoapi/storage/index", "autoapi/storage/storage/index", "autoapi/taskqueue/index", "autoapi/taskqueue/queue/index", "index"], "filenames": [".github/CONTRIBUTING.rst", ".github/RELEASE.rst", "autoapi/auth/build_constants/index.rst", "autoapi/auth/iam/index.rst", "autoapi/auth/index.rst", "autoapi/auth/session/index.rst", "autoapi/auth/token/index.rst", "autoapi/auth/utils/index.rst", "autoapi/bigquery/bigquery/index.rst", "autoapi/bigquery/dataset/index.rst", "autoapi/bigquery/index.rst", "autoapi/bigquery/job/index.rst", "autoapi/bigquery/table/index.rst", "autoapi/bigquery/utils/index.rst", "autoapi/datastore/array/index.rst", "autoapi/datastore/constants/index.rst", "autoapi/datastore/datastore/index.rst", "autoapi/datastore/datastore_operation/index.rst", "autoapi/datastore/entity/index.rst", "autoapi/datastore/filter/index.rst", "autoapi/datastore/index.rst", "autoapi/datastore/key/index.rst", "autoapi/datastore/lat_lng/index.rst", "autoapi/datastore/mutation/index.rst", "autoapi/datastore/projection/index.rst", "autoapi/datastore/property_order/index.rst", "autoapi/datastore/query/index.rst", "autoapi/datastore/transaction_options/index.rst", "autoapi/datastore/value/index.rst", "autoapi/kms/index.rst", "autoapi/kms/kms/index.rst", "autoapi/kms/utils/index.rst", "autoapi/pubsub/index.rst", "autoapi/pubsub/metrics/index.rst", "autoapi/pubsub/metrics_agent/index.rst", "autoapi/pubsub/publisher_client/index.rst", "autoapi/pubsub/subscriber/index.rst", "autoapi/pubsub/subscriber_client/index.rst", "autoapi/pubsub/subscriber_message/index.rst", "autoapi/pubsub/utils/index.rst", "autoapi/storage/blob/index.rst", "autoapi/storage/bucket/index.rst", "autoapi/storage/constants/index.rst", "autoapi/storage/index.rst", "autoapi/storage/storage/index.rst", "autoapi/taskqueue/index.rst", "autoapi/taskqueue/queue/index.rst", "index.rst"], "titles": ["Contributing to <code class=\"docutils literal notranslate\"><span class=\"pre\">gcloud-aio</span></code>", "Releasing New Versions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">auth.build_constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">auth.iam</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">auth</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">auth.session</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">auth.token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">auth.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bigquery.bigquery</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bigquery.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bigquery</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bigquery.job</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bigquery.table</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bigquery.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.array</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.datastore</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.datastore_operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.entity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.key</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.lat_lng</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.mutation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.projection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.property_order</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.query</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.transaction_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datastore.value</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">kms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">kms.kms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">kms.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pubsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pubsub.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pubsub.metrics_agent</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pubsub.publisher_client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pubsub.subscriber</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pubsub.subscriber_client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pubsub.subscriber_message</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pubsub.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">storage.blob</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">storage.bucket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">storage.constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">storage</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">storage.storage</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">taskqueue</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">taskqueue.queue</span></code>", "(Asyncio OR Threadsafe) Google Cloud Client Libraries for Python"], "terms": {"thank": 0, "we": [0, 4, 6, 10, 13, 20, 29, 32, 43, 44, 45], "appreci": 0, "ani": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46], "size": [0, 32, 43, 44], "hope": 0, "make": [0, 1, 4, 29, 31, 32, 43, 44], "easi": 0, "you": [0, 1, 4, 10, 20, 29, 31, 32, 43, 44, 45], "dive": 0, "here": [0, 1, 32], "": [0, 1, 4, 10, 13, 20, 32, 43, 44], "thousand": 0, "foot": 0, "overview": 0, "how": [0, 6, 8, 10, 15, 20, 32, 44], "ve": [0, 1, 13, 32], "set": [0, 10, 29, 32, 37, 43, 45], "thi": [0, 1, 4, 6, 10, 12, 13, 20, 29, 32, 34, 43, 44, 45], "project": [0, 1, 3, 4, 6, 8, 9, 10, 11, 12, 15, 16, 20, 21, 26, 29, 32, 35, 37, 43, 44, 45, 46], "up": [0, 4, 20], "all": [0, 4, 14, 20, 32, 43], "i": [0, 1, 4, 6, 10, 12, 13, 20, 29, 31, 32, 40, 43, 44, 47], "done": [0, 1, 17, 20, 32], "via": [0, 1, 6, 32], "poetri": [0, 1], "For": [0, 4, 6, 10, 20, 29, 32, 40, 43, 45], "subproject": 0, "can": [0, 1, 4, 6, 8, 10, 12, 13, 15, 20, 29, 32, 43, 44, 45], "instal": 0, "environ": [0, 10, 29, 32, 43, 45], "cd": [0, 1], "And": 0, "run": [0, 10, 11, 32, 43, 45, 46], "pytest": 0, "unit": 0, "onli": [0, 4, 14, 32, 43, 44], "integr": 0, "ar": [0, 1, 4, 7, 10, 13, 29, 31, 32, 43, 44, 47], "share": [0, 47], "codebas": [0, 47], "later": 0, "autogener": 0, "from": [0, 1, 4, 6, 10, 12, 13, 20, 29, 32, 37, 40, 43, 44], "former": [0, 47], "ci": [0, 1], "bin": 0, "build": [0, 20], "script": 0, "mai": [0, 4, 10, 20, 29, 32, 43, 44, 45], "need": [0, 1, 13, 20, 29, 31, 32, 43, 44], "keep": 0, "mind": 0, "while": [0, 32], "generat": 0, "both": [0, 1, 47], "modul": [0, 47], "tree": 0, "runnabl": 0, "without": 0, "asyncio": [0, 32, 43], "though": [0, 13], "some": [0, 43], "convers": 0, "thing": [0, 6, 32, 43], "bit": [0, 1, 32], "more": [0, 1, 4, 6, 20, 29, 43], "ergonom": [0, 32], "re": [0, 10, 20, 29, 31, 32, 43, 44, 45], "gener": [0, 1, 4, 32], "safe": 0, "write": 0, "standard": [0, 4, 7, 29, 31], "reli": [0, 32, 43], "feel": 0, "free": 0, "ping": 0, "maintain": [0, 6, 32], "have": [0, 6, 8, 10, 13, 15, 20, 32, 43, 44], "issu": [0, 32, 43], "To": [0, 20, 32, 43], "against": 0, "abov": [0, 43], "command": 0, "per": 0, "normal": 0, "note": [0, 1, 4, 6, 20, 29, 32, 40, 43, 44], "want": [0, 10, 13, 20, 29, 32, 43, 44, 45], "modifi": [0, 4, 7, 29, 31, 32, 37, 44], "anyth": 0, "pyproject": 0, "toml": 0, "file": [0, 4, 6, 44], "commit": [0, 1, 6, 16, 20], "result": [0, 10, 11, 12, 20, 32, 43], "ie": [0, 20, 32, 43], "essenti": 0, "must": [0, 4, 6, 14], "after": [0, 32], "lock": 0, "updat": [0, 1, 6, 15, 16, 20], "etc": [0, 4, 32], "pleas": [0, 32], "send": [0, 32], "u": [0, 1, 43, 45, 46], "pull": [0, 32, 37], "request": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 40, 41, 43, 44, 45, 46, 47], "clear": 0, "list": [0, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 21, 26, 32, 35, 37, 41, 43, 44, 45, 46], "what": [0, 1], "when": [0, 4, 43, 44], "d": [0, 20, 43], "coverag": 0, "your": [0, 1, 4, 10, 20, 29, 31, 32, 43, 45], "other": [0, 4, 6, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 43], "could": [0, 43], "alwai": 0, "us": [0, 1, 4, 6, 10, 13, 20, 29, 32, 43, 44, 45, 47], "better": [0, 43], "sure": [0, 1, 4], "pass": [0, 4, 20, 32], "atom": 0, "one": [0, 4, 10, 12, 32], "featur": [0, 32], "messag": [0, 1, 32, 35, 37], "think": [0, 32], "changelog": 0, "format": [0, 10, 13, 43, 44], "pretti": 0, "cool": 0, "try": [0, 20, 32], "stick": 0, "best": [0, 29], "even": 0, "automat": 0, "roughli": [0, 29], "speak": 0, "look": [0, 32], "feat": 0, "taskqueu": [0, 1, 47], "implement": [0, 4, 10, 20, 29, 32, 34, 43, 44, 45, 47], "task": [0, 32, 45, 46], "queue": [0, 32, 45], "manag": [0, 1, 4, 20, 29, 32, 43], "creat": [0, 1, 4, 6, 8, 9, 10, 11, 12, 15, 20, 32, 35, 37, 40, 43, 44, 45, 46], "taskmanag": 0, "an": [0, 4, 6, 10, 12, 20, 30, 32, 43, 44, 45, 46], "abstract": [0, 5, 6, 19, 26, 43, 44], "layer": 0, "around": 0, "renew": 0, "leas": [0, 32], "handl": [0, 10, 13, 32], "auto": [0, 1], "async": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 40, 41, 43, 44, 45, 46], "process": [0, 1, 32], "The": [0, 4, 6, 13, 20, 32, 43, 44], "first": [0, 13], "line": 0, "most": [0, 32], "specif": [0, 9, 10, 20, 32, 43, 44], "should": [0, 1, 10, 13, 20, 29, 32, 34, 43, 45], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46], "where": [0, 4, 7, 10, 12, 20, 29, 31, 40, 43], "fix": [0, 43, 44], "doc": [0, 4, 6, 40, 43, 44, 47], "refactor": 0, "style": 0, "perf": 0, "chore": 0, "auth": [0, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 40, 43, 44, 45, 46, 47], "bigqueri": [0, 47], "datastor": [0, 47], "concis": 0, "descript": 0, "patch": [0, 1, 5, 10, 12], "bring": 0, "than": [0, 13, 32], "72": 0, "charact": [0, 4, 7, 29, 31, 43], "requir": [0, 4, 43], "authent": [0, 4, 6], "googl": [0, 4, 6, 10, 12, 20, 29, 30, 32, 40, 43, 44, 45, 46], "sinc": [0, 43, 44], "don": [0, 32], "t": [0, 32, 43], "expos": 0, "our": [0, 4, 6, 32, 43, 44], "privat": [0, 40], "kei": [0, 3, 4, 10, 12, 15, 16, 18, 20, 23, 29, 40, 43, 44], "world": 0, "mean": [0, 32], "might": [0, 43], "fail": [0, 10, 12, 32, 43, 44], "subset": [0, 6], "case": [0, 4, 6, 10, 12, 20, 32, 43, 44], "long": [0, 43], "term": 0, "like": [0, 4, 32, 43], "switch": 0, "emul": 0, "would": 0, "help": [0, 4, 20], "get": [0, 4, 5, 6, 9, 10, 11, 12, 20, 32, 37, 40, 43, 45, 46], "closer": 0, "goal": [0, 32], "unfortun": [0, 43], "ha": [0, 10, 12, 32, 47], "yet": 0, "under": [0, 32, 43, 44], "so": [0, 13, 32, 43], "ll": [0, 1, 20, 29, 31, 32], "abl": [0, 20, 43, 44], "entir": [0, 1], "elimin": [0, 32], "problem": 0, "In": [0, 10, 12, 43, 44], "meantim": 0, "manual": [0, 4, 29, 31, 40, 43], "trigger": 0, "add": 0, "comment": 0, "do": [0, 1, 10, 20, 29, 32, 43, 45], "pre": 0, "lint": 0, "pip": [0, 4, 10, 20, 29, 32, 43, 45], "hook": 0, "same": [0, 20, 32, 43, 44], "linter": 0, "changeset": 0, "also": [0, 4, 10, 13, 32, 43], "ad": [0, 6, 8, 10, 15, 20, 44], "hoc": 0, "fashion": [0, 13], "call": [0, 4, 32, 43, 44], "enforc": 0, "read": [0, 14, 43, 44], "new": [0, 10, 11, 32, 47], "return": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46], "contributor": 0, "relev": [0, 6, 43], "appropri": [0, 4], "If": [0, 4, 6, 32, 43], "version": [0, 18, 20, 23, 47], "see": [0, 4, 6, 7, 8, 10, 15, 20, 43, 44], "document": [0, 4, 6, 8, 10, 15, 20, 29, 40, 43, 44, 45], "With": 0, "love": 0, "vi": 0, "engin": 0, "circleci": 1, "correct": 1, "semant": 1, "eg": [1, 4, 10, 13, 40, 43], "major": [1, 43], "minor": 1, "prereleas": 1, "those": [1, 13], "chang": 1, "master": 1, "success": [1, 10, 12], "onc": [1, 32, 43, 44], "tag": 1, "git": 1, "1": [1, 6, 8, 10, 15, 20, 32, 34, 40, 43, 44], "2": [1, 4, 6, 8, 10, 15, 20, 32, 43, 44], "3": [1, 6, 8, 10, 15, 20, 32, 43, 44], "push": [1, 46], "origin": 1, "github": [1, 6], "doubl": [1, 15], "check": [1, 4], "its": [1, 32, 43], "been": [1, 10, 12, 32, 47], "properli": 1, "necessari": 1, "human": 1, "readabl": 1, "click": 1, "approv": 1, "button": 1, "which": [1, 4, 10, 12, 20, 32, 43, 44], "link": [1, 40, 43], "workflow": 1, "statu": [1, 43], "kick": 1, "off": 1, "job": [1, 10, 12, 13, 43, 44], "said": 1, "pypi": 1, "gcloud": [1, 4, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 40, 43, 44, 45, 46, 47], "aio": [1, 4, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 40, 43, 44, 45, 46, 47], "foo": [1, 29, 31], "rest": [1, 4, 20, 32, 44, 47], "build_gcloud_rest": [2, 4], "api_root_iam": 3, "http": [3, 4, 6, 7, 8, 10, 16, 20, 29, 30, 31, 32, 35, 37, 40, 43, 44, 45, 46, 47], "googleapi": [3, 4, 6, 8, 10, 16, 20, 29, 30, 35, 37, 40, 43, 44, 45, 46], "com": [3, 4, 6, 8, 10, 16, 20, 29, 30, 35, 37, 40, 43, 44, 45, 46], "v1": [3, 6, 43, 44], "api_root_iam_credenti": 3, "iamcredenti": [3, 6], "scope": [3, 4, 6, 8, 10, 16, 20, 29, 30, 35, 37, 43, 44, 45, 46], "www": [3, 4, 8, 10, 16, 20, 29, 30, 35, 37, 43, 44, 45, 46], "iamclient": [3, 4], "service_fil": [3, 4, 6, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 43, 44, 45, 46], "none": [3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 26, 27, 29, 30, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46], "session": [3, 4, 6, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 40, 41, 43, 44, 45, 46], "token": [3, 4, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 40, 43, 44, 45, 46], "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46], "option": [3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 23, 26, 27, 29, 30, 32, 35, 37, 38, 40, 41, 43, 44, 45, 46], "union": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 27, 29, 30, 31, 32, 35, 37, 39, 43, 44, 45, 46], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46], "io": [3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 43, 44, 45, 46], "anystr": [3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 43, 44, 45, 46], "properti": [3, 4, 5, 16, 18, 20, 40, 43, 44], "service_account_email": [3, 4], "header": [3, 4, 5, 6, 8, 16, 20, 29, 30, 40, 43, 44, 45, 46], "dict": [3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46], "get_public_kei": [3, 4], "key_id": [3, 4], "timeout": [3, 4, 5, 6, 8, 9, 10, 11, 12, 16, 20, 32, 35, 37, 40, 41, 43, 44, 45, 46], "10": [3, 4, 5, 6, 16, 20, 32, 35, 37, 42, 43, 45, 46], "int": [3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 20, 21, 26, 32, 35, 37, 38, 40, 41, 43, 44, 45, 46], "list_public_kei": [3, 4], "sign_blob": [3, 4], "payload": [3, 4, 7, 29, 31, 32, 43, 44], "deleg": [3, 4], "byte": [3, 4, 5, 7, 29, 31, 32, 38, 39, 43, 44], "close": [3, 4, 5, 6, 8, 16, 20, 29, 30, 32, 35, 37, 43, 44, 45, 46], "__aenter__": [3, 4, 6, 8, 16, 20, 29, 30, 32, 35, 37, 43, 44, 45, 46], "__aexit__": [3, 4, 6, 8, 16, 20, 29, 30, 32, 35, 37, 43, 44, 45, 46], "arg": [3, 4, 6, 8, 10, 15, 16, 20, 29, 30, 32, 35, 37, 40, 43, 44, 45, 46], "librari": [4, 6, 10, 20, 29, 32, 43, 45], "variou": [4, 6, 10, 20, 29, 32, 43, 45], "method": [4, 5, 6, 8, 10, 13, 15, 20, 29, 32, 40, 43, 44, 45], "work": [4, 10, 13, 20, 29, 32, 43, 45], "iam": 4, "api": [4, 10, 12, 13, 20, 29, 32, 43, 44, 45], "includ": [4, 20, 29, 43, 44], "purpos": [4, 10, 29, 32, 43, 45], "servic": [4, 6], "account": [4, 6], "public": 4, "url": [4, 5, 7, 8, 29, 31, 40, 43, 44], "sign": [4, 40, 43], "blob": [4, 6, 15, 41, 43], "upgrad": [4, 10, 20, 29, 32, 43, 45], "import": [4, 20, 29, 32, 43], "iaptoken": [4, 6], "client": [4, 6, 30, 32, 34, 43], "pubkei": 4, "await": [4, 20, 29, 32, 43], "iap_token": 4, "print": [4, 43], "constructor": 4, "accept": [4, 32], "follow": [4, 6, 32, 43], "argument": [4, 32], "path": [4, 20, 21, 43], "author": 4, "user": [4, 32, 43], "applic": [4, 32, 43], "credenti": 4, "altern": [4, 20, 32], "object": [4, 13, 43, 44], "stringio": 4, "instanc": [4, 32], "store": 4, "memori": 4, "omit": 4, "attempt": 4, "find": [4, 32, 43], "fallback": 4, "gce": [4, 6], "metadata": [4, 6, 17, 20, 40, 43, 44], "aiohttp": [4, 32, 43, 44, 47], "clientsess": [4, 32, 43], "default": [4, 6, 10, 12, 32], "interest": [4, 32], "context": [4, 20, 29, 43], "explicitli": [4, 32, 43], "ensur": [4, 43], "clean": 4, "impersonating_service_account": [4, 6], "string": [4, 13, 15, 29, 31, 43], "denot": 4, "gcp": [4, 6, 32], "take": [4, 10, 12], "form": [4, 6, 13, 32], "email": 4, "address": [4, 10, 29, 32, 43, 45], "valid": 4, "imperson": [4, 6], "id": [4, 6, 10, 11, 12, 20], "test": [4, 10, 29, 32, 43, 45], "rout": 4, "uptim": 4, "tool": 4, "curl": 4, "h": 4, "bearer": 4, "python3": 4, "c": 4, "monitor": 4, "v3": 4, "project_id": 4, "uptimecheckconfig": 4, "provid": [4, 20, 29, 32, 40, 43, 44], "export": [4, 16, 20, 32, 43], "google_application_credenti": 4, "json": [4, 10, 12, 20], "cloud": [4, 6, 16, 20, 30, 32, 40, 43, 44, 45, 46], "platform": [4, 16, 20], "legaci": 4, "config": 4, "legacy_credenti": 4, "domain": 4, "tld": 4, "adc": 4, "similarli": 4, "quickli": 4, "iap": [4, 6], "secur": [4, 6], "endpoint": [4, 32], "app_url": 4, "sa": 4, "build_const": 4, "util": [4, 10, 29, 32, 35], "app_uri": [4, 6], "base": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 19, 20, 26, 32, 40, 43, 44, 47], "basetoken": [4, 6], "openid": [4, 6], "connect": [4, 6], "singl": [4, 6, 32], "default_token_ttl": [4, 6], "3600": [4, 6], "_get_iap_client_id": [4, 6], "fetch": [4, 6, 32], "uri": [4, 6], "log": [4, 5, 6, 8, 13, 16, 35, 36, 41, 43, 44, 46], "alreadi": [4, 6], "pars": [4, 6, 13], "oauth": [4, 6], "redirect": [4, 6], "locat": [4, 6, 29, 30, 45, 46], "o": [4, 6], "oauth2": [4, 6], "v2": [4, 6], "client_id": [4, 6], "detail": [4, 6, 8, 10, 12, 15, 20, 44], "programmat": [4, 6], "access": [4, 6, 8, 10, 15, 20, 40, 43, 44], "howto": [4, 6], "_refresh_authorized_us": [4, 6], "iap_client_id": [4, 6], "obtaining_an_oidc_token_in_all_other_cas": [4, 6], "tokenrespons": [4, 6], "_refresh_gce_metadata": [4, 6], "server": [4, 6, 43], "offici": [4, 6, 20, 32, 43], "state": [4, 6, 32], "audienc": [4, 6], "typic": [4, 6], "valu": [4, 6, 8, 10, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 34, 43, 44], "flavour": [4, 6], "_refresh_service_account": [4, 6], "refresh": [4, 6], "0": [4, 6, 20, 26, 32, 37, 40, 43], "decod": [4, 7, 29, 31], "base64": [4, 7, 29, 31], "variant": [4, 7, 29, 31], "exist": [4, 7, 10, 12, 29, 31], "respect": [4, 7, 29, 31], "replac": [4, 7, 29, 31], "_": [4, 7, 29, 31, 40], "en": [4, 7, 29, 31], "wikipedia": [4, 7, 29, 31], "org": [4, 7, 29, 31], "wiki": [4, 7, 29, 31], "url_appl": [4, 7, 29, 31], "encod": [4, 7, 29, 31], "__version__": [4, 10, 20, 29, 32, 43, 45], "basesess": 5, "verify_ssl": 5, "true": [5, 10, 11, 12, 20, 26, 32], "float": [5, 20, 22, 34], "bool": [5, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 35, 37, 41, 43, 44, 45, 46], "__metaclass__": [5, 6], "post": 5, "data": [5, 6, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 38, 39, 40, 43, 44], "param": [5, 8, 9, 10, 11, 12, 20, 26, 41, 43, 44], "map": 5, "respons": [5, 10, 12, 13, 17, 20, 32, 40, 43, 44], "stream": [5, 10, 12, 43, 44], "put": 5, "delet": [5, 9, 10, 11, 12, 15, 16, 20, 32, 35, 37, 43, 44, 45, 46], "head": 5, "allow_redirect": 5, "auto_raise_for_statu": 5, "kwarg": [5, 32, 39, 43, 44], "syncsess": 5, "google_api_lock": 5, "thread": [5, 32], "rlock": 5, "_google_api_lock": 5, "fals": [5, 10, 11, 12, 20, 28, 45, 46], "customfileerror": 6, "gce_metadata_bas": 6, "intern": 6, "computemetadata": 6, "gce_metadata_head": 6, "gce_endpoint_project": 6, "gce_endpoint_token": 6, "gce_endpoint_id_token": 6, "gcloud_endpoint_generate_id_token": 6, "serviceaccount": 6, "service_account": 6, "generateidtoken": 6, "refresh_head": 6, "kwd": [6, 8, 10, 15, 20, 40, 44], "enum": [6, 8, 10, 15, 20, 40, 44], "collect": [6, 8, 10, 14, 15, 20, 44], "name": [6, 8, 10, 13, 15, 16, 17, 20, 21, 29, 32, 40, 41, 43, 44], "pair": [6, 8, 10, 15, 20, 44], "exampl": [6, 8, 10, 15, 20, 32, 40, 43, 44, 45], "enumer": [6, 8, 10, 15, 20, 44], "color": [6, 8, 10, 15, 20, 44], "red": [6, 8, 10, 15, 20, 44], "blue": [6, 8, 10, 15, 20, 44], "green": [6, 8, 10, 15, 20, 44], "them": [6, 8, 10, 13, 15, 20, 32, 44, 47], "lookup": [6, 8, 10, 15, 16, 20, 44], "iter": [6, 8, 10, 15, 20, 44], "over": [6, 8, 10, 15, 20, 44], "know": [6, 8, 10, 15, 20, 32, 44], "mani": [6, 8, 10, 15, 20, 32, 44], "member": [6, 8, 10, 15, 20, 44], "thei": [6, 8, 10, 15, 20, 32, 44], "len": [6, 8, 10, 15, 20, 44], "own": [6, 8, 10, 15, 20, 29, 32, 43, 44], "authorized_us": 6, "gce_metadata": 6, "get_service_data": 6, "dictionari": [6, 10, 13, 43, 44], "current": [6, 9, 10], "meant": 6, "match": [6, 40], "rather": [6, 32], "preced": 6, "order": [6, 20, 26], "approach": 6, "It": [6, 32], "wa": [6, 32, 40], "last": 6, "python": [6, 10, 13, 40, 43], "6c1297c4d69ba40a8b9392775c17411253fcd73b": 6, "_default": 6, "py": 6, "l504": 6, "expires_in": 6, "get_project": 6, "ensure_token": 6, "acquire_access_token": 6, "insertdata": [8, 10], "init_api_root": [8, 16, 30, 35, 37, 44, 46], "api_root": [8, 9, 10, 11, 12, 16, 20, 29, 30, 32, 35, 37, 43, 44, 45, 46], "tupl": [8, 16, 30, 35, 37, 43, 44, 46], "sourceformat": [8, 10, 12], "avro": [8, 10], "csv": [8, 10, 12], "datastore_backup": [8, 10], "newline_delimited_json": [8, 10], "orc": [8, 10], "parquet": [8, 10], "disposit": [8, 10, 11, 12, 43, 44], "write_append": [8, 10], "write_empti": [8, 10, 11, 12], "write_trunc": [8, 10, 12], "schemaupdateopt": [8, 10, 12], "allow_field_addit": [8, 10], "allow_field_relax": [8, 10], "bigquerybas": [8, 9, 10, 11, 12], "_project": [8, 16, 20], "_api_root": [8, 16, 20, 29, 30, 32, 35, 37, 43, 44, 45, 46], "_api_is_dev": [8, 16, 20, 29, 30, 32, 35, 37, 43, 44, 45, 46], "_post_json": 8, "bodi": [8, 32, 35, 37], "_get_url": 8, "_delet": 8, "dataset_nam": [9, 10, 12], "list_tabl": [9, 10], "60": [9, 10, 11, 12], "tabl": [9, 10, 11], "list_dataset": [9, 10], "insert": [9, 10, 11, 12, 15, 16, 20], "still": [10, 20, 29, 45], "now": [10, 20, 45], "smoke": [10, 43, 45], "along": [10, 12, 29, 32, 43, 45], "local": [10, 29, 32, 43, 45], "bigquery_emulator_host": 10, "variabl": [10, 29, 32, 43, 45], "enough": [10, 13, 29, 32, 43, 45], "trick": [10, 29, 32, 43, 45], "dataset": [10, 12], "job_id": [10, 11], "static": [10, 11, 12, 16, 20, 32, 35, 37, 38, 43, 44], "_make_query_bodi": [10, 11, 12], "queri": [10, 11, 12, 13, 16, 20, 32, 43], "write_disposit": [10, 11, 12], "use_query_cach": [10, 11, 12], "dry_run": [10, 11, 12], "use_legacy_sql": [10, 11], "destination_t": [10, 11, 12], "get_job": [10, 11], "specifi": [10, 11, 12, 13, 32, 40], "resourc": [10, 11, 12], "get_query_result": [10, 11], "jobqueryresult": [10, 11], "cancel": [10, 11, 32], "query_request": [10, 11], "synchron": [10, 11], "complet": [10, 11, 29, 32, 43, 44], "within": [10, 11, 32, 43, 44], "asynchron": [10, 11, 30, 46], "insert_via_queri": [10, 11, 12], "table_nam": [10, 12], "_mk_unique_insert_id": [10, 12], "row": [10, 12, 13], "_make_copy_bodi": [10, 12], "source_project": [10, 12], "destination_project": [10, 12], "destination_dataset": [10, 12], "_make_insert_bodi": [10, 12], "skip_invalid": [10, 12], "ignore_unknown": [10, 12], "template_suffix": [10, 12], "insert_id_fn": [10, 12], "callabl": [10, 12], "_make_load_bodi": [10, 12], "source_uri": [10, 12], "autodetect": [10, 12], "source_format": [10, 12], "ignore_unknown_valu": [10, 12], "schema_update_opt": [10, 12], "tableid": [10, 12], "By": [10, 12], "each": [10, 12, 13, 32], "assign": [10, 12], "uniqu": [10, 12], "insertid": [10, 12], "custom": [10, 12, 44], "suppli": [10, 12], "least": [10, 12], "successfulli": [10, 12], "2xx": [10, 12], "inserterror": [10, 12], "contain": [10, 12], "insert_via_copi": [10, 12], "copi": [10, 12, 43, 44], "bq": [10, 12], "anoth": [10, 12], "insert_via_load": [10, 12], "load": [10, 12], "entiti": [10, 12, 15, 20, 26], "storag": [10, 12, 47], "list_tabledata": [10, 12], "query_response_to_dict": [10, 13], "convert": [10, 13, 44], "pack": [10, 13], "difficult": [10, 13], "deseri": [10, 13, 20], "being": [10, 13, 32, 43], "field": [10, 13, 44], "accord": [10, 13, 29, 31, 32], "schema": [10, 13], "defin": [10, 13], "builtin": [10, 13, 43], "utc": 13, "flatten": 13, "x": [13, 32, 43], "someth": [13, 32, 43], "actual": [13, 32], "f": [13, 43], "v": [13, 43], "indic": 13, "group": 13, "potenti": [13, 32, 43], "multipl": [13, 43, 44], "just": [13, 32], "plain": 13, "old": 13, "given": [13, 20, 32], "back": 13, "often": [13, 32], "trivial": 13, "There": [13, 32], "coupl": 13, "caveat": 13, "identifi": 13, "far": 13, "nullabl": 13, "special": 13, "accident": 13, "repeat": 13, "nest": 13, "biot": 13, "differ": [13, 32, 43, 44], "expect": [13, 29, 31], "wow": 13, "repres": 13, "backward": 13, "compat": [13, 34, 43, 44], "item": [14, 43], "abc": 14, "sequenc": [14, 20], "oper": [14, 15, 16, 19, 20, 32, 43, 44], "concret": 14, "subclass": 14, "overrid": [14, 20], "__new__": 14, "__init__": [14, 20], "__getitem__": 14, "__len__": 14, "__eq__": [14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28], "self": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 39, 43], "__repr__": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 39], "repr": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 39], "index": [14, 40, 47], "classmethod": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 35, 37], "from_repr": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 38], "to_repr": [14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 38, 39], "compositefilteroper": [15, 19, 20], "AND": [15, 20], "unspecifi": [15, 20, 26], "operator_unspecifi": [15, 20], "consist": [15, 16, 20], "eventu": [15, 16, 20], "strong": [15, 16, 20], "read_consistency_unspecifi": [15, 20], "direct": [15, 20, 25], "ascend": [15, 20, 25], "descend": [15, 20], "direction_unspecifi": [15, 20], "mode": [15, 16, 20, 43], "non_transact": [15, 20], "transact": [15, 16, 20], "mode_unspecifi": [15, 20], "moreresultstyp": [15, 20, 26], "more_results_after_cursor": [15, 20], "more_results_after_limit": [15, 20], "no_more_result": [15, 20], "not_finish": [15, 20], "more_results_type_unspecifi": [15, 20], "upsert": [15, 16, 20], "propertyfilteroper": [15, 19, 20], "equal": [15, 20], "greater_than": [15, 20], "greater_than_or_equ": [15, 20], "has_ancestor": [15, 20], "less_than": [15, 20], "less_than_or_equ": [15, 20], "resulttyp": [15, 20, 26], "full": [15, 20, 32, 45, 46], "key_onli": [15, 20], "result_type_unspecifi": [15, 20], "typenam": [15, 20, 28], "arrai": [15, 20], "arrayvalu": 15, "blobvalu": 15, "boolean": 15, "booleanvalu": 15, "doublevalu": 15, "entityvalu": 15, "integ": [15, 40], "integervalu": 15, "geopoint": 15, "geopointvalu": 15, "keyvalu": 15, "null": 15, "nullvalu": 15, "stringvalu": 15, "timestamp": 15, "timestampvalu": 15, "lookupresult": [16, 20], "namespac": [16, 20, 21], "datastore_operation_kind": [16, 20], "entity_result_kind": [16, 20, 26], "key_kind": [16, 18, 20, 23, 28], "mutation_result_kind": [16, 20], "query_result_batch_kind": [16, 20], "value_kind": [16, 18, 20, 26], "_make_commit_bodi": [16, 20], "mutat": [16, 20], "constant": [16, 19, 20, 25, 26, 28, 43], "make_mut": [16, 20], "allocateid": [16, 20], "begintransact": [16, 20], "output_bucket_prefix": [16, 20], "kind": [16, 20, 21, 26], "label": [16, 20, 32], "datastore_oper": [16, 20], "datastoreoper": [16, 17, 20], "get_datastore_oper": [16, 20], "newtransact": [16, 20], "transaction_opt": [16, 20], "transactionopt": [16, 20, 27], "_build_lookup_result": [16, 20], "_build_read_opt": [16, 20], "reserveid": [16, 20], "database_id": [16, 20], "rollback": [16, 20], "runqueri": [16, 20], "basequeri": [16, 20, 26], "queryresultbatch": [16, 20, 26], "error": [17, 20], "entityresult": [18, 20, 26], "cursor": [18, 20], "entity_kind": [18, 20], "basefilt": [19, 20], "json_kei": [19, 20, 26], "inner_filt": [19, 20], "compositefilt": [19, 20], "propertyfilt": [19, 20], "prop": [19, 20, 24, 25], "start": [20, 32], "filter": [20, 26], "gqlqueri": [20, 26], "pathel": [20, 21], "propertyord": [20, 25, 26], "my": [20, 29, 32, 43], "cred": 20, "key1": 20, "entitynam": 20, "key2": 20, "entityname2": 20, "batch": [20, 32], "conveni": [20, 43], "function": [20, 32, 43], "a_boolean": 20, "meaning_of_lif": 20, "41": 20, "42": 20, "anim": [20, 29], "aardvark": [20, 29], "support": [20, 43, 44], "sloth": 20, "except": [20, 32], "partial": 20, "partial_kei": 20, "alloc": 20, "reserv": 20, "allocated_kei": 20, "property_filt": 20, "answer": 20, "property_ord": [20, 26], "length": 20, "the_meaning_of_lif": 20, "query_filt": [20, 26], "gql": 20, "gql_queri": 20, "select": 20, "named_bind": [20, 26], "interfac": [20, 32, 34], "mirror": 20, "These": [20, 47], "arbitrari": 20, "advanc": 20, "datatyp": 20, "overload": 20, "A": [20, 32, 43, 44], "common": 20, "myentitykind": 20, "def": [20, 32, 43], "is_an_aardvark": 20, "m": 20, "els": [20, 32], "sorri": 20, "nope": 20, "configur": [20, 32, 43], "serial": 20, "mycustomdatastor": 20, "overridden": 20, "wai": [20, 43], "myverycustomdatastor": 20, "path_element_kind": [20, 21], "mutationresult": [20, 23], "myverycustomqueri": 20, "myverycustomgqlqueri": 20, "drop": [20, 32], "anywher": 20, "previous": 20, "sub": [20, 32], "parent": 20, "wire": 20, "mykei": 20, "myvalu": 20, "myentiti": 20, "myentityresult": 20, "myqueryresultbatch": 20, "mydatastor": 20, "query_result_batch": 20, "myqueri": 20, "mygqlqueri": 20, "lat_lng": 20, "id_": [20, 21], "latlng": [20, 22], "lat": [20, 22], "lon": [20, 22], "conflict_detect": [20, 23], "gqlcursor": [20, 26], "query_str": [20, 26], "allow_liter": [20, 26], "positional_bind": [20, 26], "_param_from_repr": [20, 26], "param_repr": [20, 26], "_param_to_repr": [20, 26], "start_cursor": [20, 26], "end_cursor": [20, 26], "offset": [20, 26], "limit": [20, 26, 32], "distinct_on": [20, 26], "entity_result_typ": [20, 26], "entity_result": [20, 26], "more_result": [20, 26], "skipped_cursor": [20, 26], "skipped_result": [20, 26], "snapshot_vers": [20, 26], "readonli": [20, 27], "readwrit": [20, 27], "previous_transact": [20, 27], "exclude_from_index": [20, 28], "_infer_typ": [20, 28], "_get_supported_typ": [20, 28], "keyr": [29, 30], "encrypt": [29, 30], "plaintext": [29, 30], "b": [29, 32], "ciphertext": [29, 30], "decrypt": [29, 30], "assert": 29, "kms_emulator_host": 29, "keyproject": [29, 30], "keynam": [29, 30], "global": [29, 30], "cloudkm": [29, 30], "doe": [29, 31], "assumpt": [29, 31, 32, 43], "about": [29, 31], "scheme": [29, 31], "subscribercli": [32, 37], "subscribermessag": [32, 37, 38], "subscript": [32, 35, 37], "create_subscript": [32, 37], "project_nam": 32, "subscription_nam": 32, "topic": [32, 35, 37], "topic_nam": 32, "max_messag": [32, 37], "helper": 32, "setup": 32, "pipelin": 32, "built": [32, 43, 47], "thu": [32, 43, 44], "avail": 32, "fairli": 32, "simpl": [32, 44], "subscriber_cli": 32, "handler": 32, "my_project": 32, "my_subscript": 32, "num_produc": 32, "max_messages_per_produc": 32, "100": 32, "ack_window": 32, "num_tasks_per_consum": 32, "enable_nack": 32, "nack_window": 32, "somewhat": 32, "sensibl": 32, "highli": 32, "recommend": [32, 43, 44], "perform": [32, 43], "tweak": 32, "few": 32, "hint": [32, 43], "ack": [32, 37], "rais": 32, "left": 32, "expir": [32, 40, 43], "redeliv": 32, "deadlin": [32, 37], "number": 32, "worker": 32, "previou": [32, 43, 44], "bound": 32, "notic": [32, 43], "hesit": 32, "bump": 32, "maxmessag": 32, "rule": 32, "thumb": 32, "faster": 32, "bigger": 32, "separ": 32, "made": [32, 43, 44], "effect": 32, "disabl": [32, 43], "until": 32, "block": 32, "wait": 32, "independ": 32, "good": 32, "fanci": 32, "e": 32, "g": 32, "aggreg": 32, "befor": 32, "higher": 32, "pool": 32, "upper": 32, "possibli": 32, "moment": 32, "enabl": 32, "callback": 32, "nack": [32, 37], "modifyackdeadlin": 32, "retri": [32, 43, 44], "immedi": 32, "main": 32, "fine": 32, "otherwis": 32, "awar": 32, "usecas": 32, "background": 32, "extens": 32, "As": [32, 43], "assum": 32, "foreground": 32, "shut": 32, "itself": 32, "down": 32, "caus": 32, "termin": 32, "cancellederror": 32, "event": 32, "subscribe_task": 32, "create_task": 32, "snip": 32, "record": 32, "gcloud_aio_pubsub_": 32, "scrape": 32, "app": 32, "subscriber_batch_s": 32, "histogram": [32, 34], "were": 32, "subscriber_consum": 32, "outcom": 32, "succeed": 32, "failfast": 32, "counter": 32, "consum": 32, "subscriber_consume_latency_second": 32, "phase": 32, "receiv": 32, "runtim": 32, "second": [32, 43, 44], "taken": 32, "subscriber_batch_statu": 32, "compon": 32, "acker": 32, "nacker": 32, "subscriber_messages_process": 32, "either": [32, 40], "subscriber_messages_receiv": 32, "metrics_cli": 32, "remov": 32, "futur": 32, "releas": [32, 47], "metricsag": [32, 34], "datadog": 32, "produc": 32, "retriev": 32, "increment": [32, 34], "due": 32, "latenc": [32, 43], "took": 32, "reach": 32, "successful": 32, "execut": 32, "time": [32, 43, 44], "publishercli": [32, 35], "dead": 32, "pub": 32, "design": 32, "addit": 32, "grpc": 32, "overhead": 32, "upstream": 32, "migrat": 32, "between": [32, 43, 44], "flow": 32, "control": [32, 40, 43], "bell": 32, "whistl": 32, "easier": 32, "pubsubmessag": [32, 35, 39], "topic_path": [32, 35, 37], "other_attribut": 32, "whatev": 32, "more_attribut": 32, "messageid": 32, "pubsub_emulator_host": 32, "beta": 32, "host": [32, 40], "port": 32, "8681": 32, "instead": [32, 43], "gc": [32, 43, 44], "thekevjam": 32, "mostli": [32, 43], "tri": [32, 43], "stai": [32, 43], "agnost": [32, 43], "sort": [32, 43], "polici": [32, 43], "wouldn": [32, 43], "right": [32, 43], "everi": [32, 43], "situat": [32, 43], "basi": [32, 43], "backoff": [32, 43], "quit": [32, 43], "straightforward": [32, 43], "subscriberclientwithbackoff": 32, "on_except": [32, 43], "expo": [32, 43], "clientresponseerror": [32, 43], "max_tri": [32, 43], "5": [32, 43, 44], "jitter": [32, 43], "full_jitt": [32, 43], "super": [32, 43], "metrics_ag": 32, "publisher_cli": 32, "subscriber_messag": [32, 37], "project_path": [32, 35, 37], "subscription_path": [32, 35, 37], "_header": [32, 35, 37, 43, 44], "list_top": [32, 35], "query_param": [32, 35, 37, 40, 43], "create_top": [32, 35], "delete_top": [32, 35], "patch_subscript": [32, 37], "delete_subscript": [32, 37], "30": [32, 37, 43, 44], "acknowledg": [32, 37], "ack_id": [32, 37, 38], "ackid": [32, 37], "modify_ack_deadlin": [32, 37], "ack_deadline_second": [32, 37], "get_subscript": [32, 37], "list_subscript": [32, 37], "message_id": [32, 38], "publish_tim": [32, 38], "delivery_attempt": [32, 38], "datetim": [32, 38], "received_messag": [32, 38], "ordering_kei": [32, 39], "_namespac": 33, "gcloud_aio": 33, "metric": 34, "subscrib": 34, "publish": 35, "parse_publish_tim": 38, "attribut": 38, "pkcs1_marker": 40, "begin": [40, 43, 44], "rsa": 40, "end": 40, "pkcs8_marker": 40, "pkcs8_spec": 40, "pemkind": 40, "track": 40, "pem": 40, "readpemblocksfromfil": 40, "marker_id": 40, "key_byt": 40, "found": 40, "pcks8_marker": 40, "did": 40, "invalid": 40, "zeroth": 40, "marker": 40, "pkcs1": 40, "pkcs8": 40, "bucket": [40, 43, 44], "chunk_siz": [40, 43], "download": [40, 43, 44], "default_timeout": [40, 41, 42, 43, 44], "upload": [40, 43, 44], "get_signed_url": [40, 43], "http_method": [40, 43], "temporari": [40, 43], "anyon": [40, 43], "adapt": [40, 43], "sampl": [40, 43], "get_blob": [41, 43], "blob_nam": [41, 43], "blob_exist": [41, 43], "list_blob": [41, 43], "prefix": [41, 43], "match_glob": [41, 43], "new_blob": [41, 43], "get_metadata": [41, 43], "aiofil": 43, "open": 43, "r": 43, "output": 43, "folder": 43, "accomplish": 43, "fit": 43, "Of": 43, "cours": 43, "benefit": 43, "parallel": 43, "fulli": [43, 44], "complic": 43, "my_fil": 43, "filenam": [43, 44], "prepar": 43, "local_nam": 43, "gcs_name": 43, "append": 43, "simultan": 43, "gather": 43, "file_": 43, "refer": [43, 44], "info": 43, "let": 43, "give": 43, "leav": 43, "OR": 43, "stuff": 43, "transform": 43, "debug": 43, "text": 43, "chardet": 43, "guess": 43, "determin": 43, "extrem": 43, "slow": 43, "especi": 43, "particularli": 43, "larg": [43, 44], "odd": 43, "contenttyp": 43, "suffix": 43, "charset": 43, "utf": 43, "8": 43, "netcdf": 43, "exhibit": 43, "172": 43, "storage_emulator_host": 43, "fsouza": 43, "fake": 43, "docker": 43, "p": 43, "4443": 43, "pwd": 43, "system": 43, "ssl": 43, "verif": 43, "storagewithbackoff": 43, "devstorag": [43, 44], "read_writ": [43, 44], "_api_root_read": [43, 44], "_api_root_writ": [43, 44], "list_bucket": [43, 44], "get_bucket": [43, 44], "bucket_nam": [43, 44], "object_nam": [43, 44], "destination_bucket": [43, 44], "new_nam": [43, 44], "too": [43, 44], "rewriteto": [43, 44], "rewritetoken": [43, 44], "subsequ": [43, 44], "prefer": [43, 44], "part": [43, 44], "becaus": [43, 44], "wherea": [43, 44], "copyto": [43, 44], "hood": [43, 44], "rare": [43, 44], "resum": [43, 44], "multi": [43, 44], "week": [43, 44], "json_api": [43, 44], "rewrit": [43, 44], "download_to_filenam": [43, 44], "download_metadata": [43, 44], "download_stream": [43, 44], "buffer": [43, 44], "rang": [43, 44], "ttfb": [43, 44], "encapsul": [43, 44], "similar": [43, 44], "bufferediobas": [43, 44], "streamrespons": [43, 44], "list_object": [43, 44], "file_data": [43, 44], "content_typ": [43, 44], "force_resumable_upload": [43, 44], "upload_from_filenam": [43, 44], "_get_stream_len": [43, 44], "_preprocess_data": [43, 44], "_decide_upload_typ": [43, 44], "content_length": [43, 44], "uploadtyp": [43, 44], "_split_content_typ": [43, 44], "_format_metadata_kei": [43, 44], "multipart": [43, 44], "ex": [43, 44], "contentdisposit": [43, 44], "_download": [43, 44], "_download_stream": [43, 44], "_upload_simpl": [43, 44], "_upload_multipart": [43, 44], "_upload_resum": [43, 44], "_initiate_upload": [43, 44], "_do_upload": [43, 44], "session_uri": [43, 44], "patch_metadata": [43, 44], "get_bucket_metadata": [43, 44], "slightli": [43, 44], "exc_info": [43, 44], "max_content_length_simple_upload": 44, "choose_boundari": 44, "stolen": 44, "urllib3": 44, "filepost": 44, "26": 44, "encode_multipart_formdata": 44, "boundari": 44, "veri": 44, "heavili": 44, "avoid": 44, "unnecessari": 44, "depend": 44, "cloudtasks_emulator_host": 45, "pushqueu": [45, 46], "central1": [45, 46], "_queue_path": [45, 46], "task_nam": [45, 46], "task_id": [45, 46], "tname": [45, 46], "page_s": [45, 46], "1000": [45, 46], "page_token": [45, 46], "appengin": 46, "describ": 47, "latter": 47, "km": 47, "pubsub": 47, "contribut": 47}, "objects": {"": [[4, 0, 0, "-", "auth"], [10, 0, 0, "-", "bigquery"], [20, 0, 0, "-", "datastore"], [29, 0, 0, "-", "kms"], [32, 0, 0, "-", "pubsub"], [43, 0, 0, "-", "storage"], [45, 0, 0, "-", "taskqueue"]], "auth": [[4, 1, 1, "", "BUILD_GCLOUD_REST"], [4, 2, 1, "", "IamClient"], [4, 2, 1, "", "IapToken"], [4, 2, 1, "", "Token"], [4, 1, 1, "", "__version__"], [2, 0, 0, "-", "build_constants"], [4, 6, 1, "", "decode"], [4, 6, 1, "", "encode"], [3, 0, 0, "-", "iam"], [5, 0, 0, "-", "session"], [6, 0, 0, "-", "token"], [7, 0, 0, "-", "utils"]], "auth.IamClient": [[4, 3, 1, "", "__aenter__"], [4, 3, 1, "", "__aexit__"], [4, 3, 1, "", "close"], [4, 3, 1, "", "get_public_key"], [4, 3, 1, "", "headers"], [4, 3, 1, "", "list_public_keys"], [4, 4, 1, "", "service_account_email"], [4, 3, 1, "", "sign_blob"]], "auth.IapToken": [[4, 3, 1, "", "_get_iap_client_id"], [4, 3, 1, "", "_refresh_authorized_user"], [4, 3, 1, "", "_refresh_gce_metadata"], [4, 3, 1, "", "_refresh_service_account"], [4, 5, 1, "", "default_token_ttl"], [4, 3, 1, "", "refresh"]], "auth.Token": [[4, 3, 1, "", "_refresh_authorized_user"], [4, 3, 1, "", "_refresh_gce_metadata"], [4, 3, 1, "", "_refresh_service_account"], [4, 5, 1, "", "default_token_ttl"], [4, 3, 1, "", "refresh"]], "auth.build_constants": [[2, 1, 1, "", "BUILD_GCLOUD_REST"]], "auth.iam": [[3, 1, 1, "", "API_ROOT_IAM"], [3, 1, 1, "", "API_ROOT_IAM_CREDENTIALS"], [3, 2, 1, "", "IamClient"], [3, 1, 1, "", "SCOPES"]], "auth.iam.IamClient": [[3, 3, 1, "", "__aenter__"], [3, 3, 1, "", "__aexit__"], [3, 3, 1, "", "close"], [3, 3, 1, "", "get_public_key"], [3, 3, 1, "", "headers"], [3, 3, 1, "", "list_public_keys"], [3, 4, 1, "", "service_account_email"], [3, 3, 1, "", "sign_blob"]], "auth.session": [[5, 2, 1, "", "BaseSession"], [5, 2, 1, "", "SyncSession"], [5, 1, 1, "", "Timeout"], [5, 1, 1, "", "log"]], "auth.session.BaseSession": [[5, 5, 1, "", "__metaclass__"], [5, 3, 1, "", "close"], [5, 3, 1, "", "delete"], [5, 3, 1, "", "get"], [5, 3, 1, "", "head"], [5, 3, 1, "", "patch"], [5, 3, 1, "", "post"], [5, 3, 1, "", "put"], [5, 3, 1, "", "request"], [5, 4, 1, "", "session"]], "auth.session.SyncSession": [[5, 5, 1, "", "_google_api_lock"], [5, 3, 1, "", "close"], [5, 3, 1, "", "delete"], [5, 3, 1, "", "get"], [5, 4, 1, "", "google_api_lock"], [5, 3, 1, "", "head"], [5, 3, 1, "", "patch"], [5, 3, 1, "", "post"], [5, 3, 1, "", "put"], [5, 3, 1, "", "request"], [5, 4, 1, "", "session"]], "auth.token": [[6, 2, 1, "", "BaseToken"], [6, 1, 1, "", "CustomFileError"], [6, 1, 1, "", "GCE_ENDPOINT_ID_TOKEN"], [6, 1, 1, "", "GCE_ENDPOINT_PROJECT"], [6, 1, 1, "", "GCE_ENDPOINT_TOKEN"], [6, 1, 1, "", "GCE_METADATA_BASE"], [6, 1, 1, "", "GCE_METADATA_HEADERS"], [6, 1, 1, "", "GCLOUD_ENDPOINT_GENERATE_ID_TOKEN"], [6, 2, 1, "", "IapToken"], [6, 1, 1, "", "REFRESH_HEADERS"], [6, 2, 1, "", "Token"], [6, 2, 1, "", "TokenResponse"], [6, 2, 1, "", "Type"], [6, 6, 1, "", "get_service_data"]], "auth.token.BaseToken": [[6, 3, 1, "", "__aenter__"], [6, 3, 1, "", "__aexit__"], [6, 5, 1, "", "__metaclass__"], [6, 3, 1, "", "acquire_access_token"], [6, 3, 1, "", "close"], [6, 3, 1, "", "ensure_token"], [6, 3, 1, "", "get"], [6, 3, 1, "", "get_project"], [6, 3, 1, "", "refresh"]], "auth.token.IapToken": [[6, 3, 1, "", "_get_iap_client_id"], [6, 3, 1, "", "_refresh_authorized_user"], [6, 3, 1, "", "_refresh_gce_metadata"], [6, 3, 1, "", "_refresh_service_account"], [6, 5, 1, "", "default_token_ttl"], [6, 3, 1, "", "refresh"]], "auth.token.Token": [[6, 3, 1, "", "_refresh_authorized_user"], [6, 3, 1, "", "_refresh_gce_metadata"], [6, 3, 1, "", "_refresh_service_account"], [6, 5, 1, "", "default_token_ttl"], [6, 3, 1, "", "refresh"]], "auth.token.TokenResponse": [[6, 5, 1, "", "expires_in"], [6, 5, 1, "", "value"]], "auth.token.Type": [[6, 5, 1, "", "AUTHORIZED_USER"], [6, 5, 1, "", "GCE_METADATA"], [6, 5, 1, "", "SERVICE_ACCOUNT"]], "auth.utils": [[7, 6, 1, "", "decode"], [7, 6, 1, "", "encode"]], "bigquery": [[10, 2, 1, "", "Dataset"], [10, 2, 1, "", "Disposition"], [10, 2, 1, "", "Job"], [10, 1, 1, "", "SCOPES"], [10, 2, 1, "", "SchemaUpdateOption"], [10, 2, 1, "", "SourceFormat"], [10, 2, 1, "", "Table"], [10, 1, 1, "", "__version__"], [8, 0, 0, "-", "bigquery"], [9, 0, 0, "-", "dataset"], [11, 0, 0, "-", "job"], [10, 6, 1, "", "query_response_to_dict"], [12, 0, 0, "-", "table"], [13, 0, 0, "-", "utils"]], "bigquery.Dataset": [[10, 3, 1, "", "delete"], [10, 3, 1, "", "get"], [10, 3, 1, "", "insert"], [10, 3, 1, "", "list_datasets"], [10, 3, 1, "", "list_tables"]], "bigquery.Disposition": [[10, 5, 1, "", "WRITE_APPEND"], [10, 5, 1, "", "WRITE_EMPTY"], [10, 5, 1, "", "WRITE_TRUNCATE"]], "bigquery.Job": [[10, 3, 1, "", "_make_query_body"], [10, 3, 1, "", "cancel"], [10, 3, 1, "", "delete"], [10, 3, 1, "", "get_job"], [10, 3, 1, "", "get_query_results"], [10, 3, 1, "", "insert"], [10, 3, 1, "", "insert_via_query"], [10, 3, 1, "", "query"], [10, 3, 1, "", "result"]], "bigquery.SchemaUpdateOption": [[10, 5, 1, "", "ALLOW_FIELD_ADDITION"], [10, 5, 1, "", "ALLOW_FIELD_RELAXATION"]], "bigquery.SourceFormat": [[10, 5, 1, "", "AVRO"], [10, 5, 1, "", "CSV"], [10, 5, 1, "", "DATASTORE_BACKUP"], [10, 5, 1, "", "NEWLINE_DELIMITED_JSON"], [10, 5, 1, "", "ORC"], [10, 5, 1, "", "PARQUET"]], "bigquery.Table": [[10, 3, 1, "", "_make_copy_body"], [10, 3, 1, "", "_make_insert_body"], [10, 3, 1, "", "_make_load_body"], [10, 3, 1, "", "_make_query_body"], [10, 3, 1, "", "_mk_unique_insert_id"], [10, 3, 1, "", "create"], [10, 3, 1, "", "delete"], [10, 3, 1, "", "get"], [10, 3, 1, "", "insert"], [10, 3, 1, "", "insert_via_copy"], [10, 3, 1, "", "insert_via_load"], [10, 3, 1, "", "insert_via_query"], [10, 3, 1, "", "list_tabledata"], [10, 3, 1, "", "patch"]], "bigquery.bigquery": [[8, 2, 1, "", "BigqueryBase"], [8, 2, 1, "", "Disposition"], [8, 1, 1, "", "SCOPES"], [8, 2, 1, "", "SchemaUpdateOption"], [8, 2, 1, "", "SourceFormat"], [8, 6, 1, "", "init_api_root"], [8, 1, 1, "", "log"]], "bigquery.bigquery.BigqueryBase": [[8, 3, 1, "", "__aenter__"], [8, 3, 1, "", "__aexit__"], [8, 5, 1, "", "_api_is_dev"], [8, 5, 1, "", "_api_root"], [8, 3, 1, "", "_delete"], [8, 3, 1, "", "_get_url"], [8, 3, 1, "", "_post_json"], [8, 5, 1, "", "_project"], [8, 3, 1, "", "close"], [8, 3, 1, "", "headers"], [8, 3, 1, "", "project"]], "bigquery.bigquery.Disposition": [[8, 5, 1, "", "WRITE_APPEND"], [8, 5, 1, "", "WRITE_EMPTY"], [8, 5, 1, "", "WRITE_TRUNCATE"]], "bigquery.bigquery.SchemaUpdateOption": [[8, 5, 1, "", "ALLOW_FIELD_ADDITION"], [8, 5, 1, "", "ALLOW_FIELD_RELAXATION"]], "bigquery.bigquery.SourceFormat": [[8, 5, 1, "", "AVRO"], [8, 5, 1, "", "CSV"], [8, 5, 1, "", "DATASTORE_BACKUP"], [8, 5, 1, "", "NEWLINE_DELIMITED_JSON"], [8, 5, 1, "", "ORC"], [8, 5, 1, "", "PARQUET"]], "bigquery.dataset": [[9, 2, 1, "", "Dataset"]], "bigquery.dataset.Dataset": [[9, 3, 1, "", "delete"], [9, 3, 1, "", "get"], [9, 3, 1, "", "insert"], [9, 3, 1, "", "list_datasets"], [9, 3, 1, "", "list_tables"]], "bigquery.job": [[11, 2, 1, "", "Job"]], "bigquery.job.Job": [[11, 3, 1, "", "_make_query_body"], [11, 3, 1, "", "cancel"], [11, 3, 1, "", "delete"], [11, 3, 1, "", "get_job"], [11, 3, 1, "", "get_query_results"], [11, 3, 1, "", "insert"], [11, 3, 1, "", "insert_via_query"], [11, 3, 1, "", "query"], [11, 3, 1, "", "result"]], "bigquery.table": [[12, 2, 1, "", "Table"]], "bigquery.table.Table": [[12, 3, 1, "", "_make_copy_body"], [12, 3, 1, "", "_make_insert_body"], [12, 3, 1, "", "_make_load_body"], [12, 3, 1, "", "_make_query_body"], [12, 3, 1, "", "_mk_unique_insert_id"], [12, 3, 1, "", "create"], [12, 3, 1, "", "delete"], [12, 3, 1, "", "get"], [12, 3, 1, "", "insert"], [12, 3, 1, "", "insert_via_copy"], [12, 3, 1, "", "insert_via_load"], [12, 3, 1, "", "insert_via_query"], [12, 3, 1, "", "list_tabledata"], [12, 3, 1, "", "patch"]], "bigquery.utils": [[13, 6, 1, "", "flatten"], [13, 1, 1, "", "log"], [13, 6, 1, "", "parse"], [13, 6, 1, "", "query_response_to_dict"], [13, 1, 1, "", "utc"]], "datastore": [[20, 2, 1, "", "CompositeFilter"], [20, 2, 1, "", "CompositeFilterOperator"], [20, 2, 1, "", "Consistency"], [20, 2, 1, "", "Datastore"], [20, 2, 1, "", "DatastoreOperation"], [20, 2, 1, "", "Direction"], [20, 2, 1, "", "Entity"], [20, 2, 1, "", "EntityResult"], [20, 2, 1, "", "Filter"], [20, 2, 1, "", "GQLCursor"], [20, 2, 1, "", "GQLQuery"], [20, 2, 1, "", "Key"], [20, 2, 1, "", "LatLng"], [20, 2, 1, "", "Mode"], [20, 2, 1, "", "MoreResultsType"], [20, 2, 1, "", "MutationResult"], [20, 2, 1, "", "Operation"], [20, 2, 1, "", "PathElement"], [20, 2, 1, "", "Projection"], [20, 2, 1, "", "PropertyFilter"], [20, 2, 1, "", "PropertyFilterOperator"], [20, 2, 1, "", "PropertyOrder"], [20, 2, 1, "", "Query"], [20, 2, 1, "", "QueryResultBatch"], [20, 2, 1, "", "ReadOnly"], [20, 2, 1, "", "ReadWrite"], [20, 2, 1, "", "ResultType"], [20, 1, 1, "", "SCOPES"], [20, 2, 1, "", "TransactionOptions"], [20, 2, 1, "", "Value"], [20, 1, 1, "", "__version__"], [14, 0, 0, "-", "array"], [15, 0, 0, "-", "constants"], [16, 0, 0, "-", "datastore"], [17, 0, 0, "-", "datastore_operation"], [18, 0, 0, "-", "entity"], [19, 0, 0, "-", "filter"], [21, 0, 0, "-", "key"], [22, 0, 0, "-", "lat_lng"], [23, 0, 0, "-", "mutation"], [24, 0, 0, "-", "projection"], [25, 0, 0, "-", "property_order"], [26, 0, 0, "-", "query"], [27, 0, 0, "-", "transaction_options"], [28, 0, 0, "-", "value"]], "datastore.CompositeFilter": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "from_repr"], [20, 5, 1, "", "json_key"], [20, 3, 1, "", "to_repr"]], "datastore.CompositeFilterOperator": [[20, 5, 1, "", "AND"], [20, 5, 1, "", "UNSPECIFIED"]], "datastore.Consistency": [[20, 5, 1, "", "EVENTUAL"], [20, 5, 1, "", "STRONG"], [20, 5, 1, "", "UNSPECIFIED"]], "datastore.Datastore": [[20, 3, 1, "", "__aenter__"], [20, 3, 1, "", "__aexit__"], [20, 5, 1, "", "_api_is_dev"], [20, 5, 1, "", "_api_root"], [20, 3, 1, "", "_build_lookup_result"], [20, 3, 1, "", "_build_read_options"], [20, 3, 1, "", "_make_commit_body"], [20, 5, 1, "", "_project"], [20, 3, 1, "", "allocateIds"], [20, 3, 1, "", "beginTransaction"], [20, 3, 1, "", "close"], [20, 3, 1, "", "commit"], [20, 5, 1, "", "datastore_operation_kind"], [20, 3, 1, "", "delete"], [20, 5, 1, "", "entity_result_kind"], [20, 3, 1, "", "export"], [20, 3, 1, "", "get_datastore_operation"], [20, 3, 1, "", "headers"], [20, 3, 1, "", "insert"], [20, 5, 1, "", "key_kind"], [20, 3, 1, "", "lookup"], [20, 3, 1, "", "make_mutation"], [20, 5, 1, "", "mutation_result_kind"], [20, 3, 1, "", "operate"], [20, 3, 1, "", "project"], [20, 5, 1, "", "query_result_batch_kind"], [20, 3, 1, "", "reserveIds"], [20, 3, 1, "", "rollback"], [20, 3, 1, "", "runQuery"], [20, 3, 1, "", "update"], [20, 3, 1, "", "upsert"], [20, 5, 1, "", "value_kind"]], "datastore.DatastoreOperation": [[20, 3, 1, "", "__repr__"], [20, 3, 1, "", "from_repr"], [20, 3, 1, "", "to_repr"]], "datastore.Direction": [[20, 5, 1, "", "ASCENDING"], [20, 5, 1, "", "DESCENDING"], [20, 5, 1, "", "UNSPECIFIED"]], "datastore.Entity": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "from_repr"], [20, 5, 1, "", "key_kind"], [20, 3, 1, "", "to_repr"], [20, 5, 1, "", "value_kind"]], "datastore.EntityResult": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 5, 1, "", "entity_kind"], [20, 3, 1, "", "from_repr"], [20, 3, 1, "", "to_repr"]], "datastore.Filter": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "from_repr"], [20, 3, 1, "", "to_repr"]], "datastore.GQLCursor": [[20, 3, 1, "", "__eq__"]], "datastore.GQLQuery": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "_param_from_repr"], [20, 3, 1, "", "_param_to_repr"], [20, 3, 1, "", "from_repr"], [20, 5, 1, "", "json_key"], [20, 3, 1, "", "to_repr"]], "datastore.Key": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "from_repr"], [20, 5, 1, "", "path_element_kind"], [20, 3, 1, "", "to_repr"]], "datastore.LatLng": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "from_repr"], [20, 3, 1, "", "to_repr"]], "datastore.Mode": [[20, 5, 1, "", "NON_TRANSACTIONAL"], [20, 5, 1, "", "TRANSACTIONAL"], [20, 5, 1, "", "UNSPECIFIED"]], "datastore.MoreResultsType": [[20, 5, 1, "", "MORE_RESULTS_AFTER_CURSOR"], [20, 5, 1, "", "MORE_RESULTS_AFTER_LIMIT"], [20, 5, 1, "", "NOT_FINISHED"], [20, 5, 1, "", "NO_MORE_RESULTS"], [20, 5, 1, "", "UNSPECIFIED"]], "datastore.MutationResult": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "from_repr"], [20, 5, 1, "", "key_kind"], [20, 3, 1, "", "to_repr"]], "datastore.Operation": [[20, 5, 1, "", "DELETE"], [20, 5, 1, "", "INSERT"], [20, 5, 1, "", "UPDATE"], [20, 5, 1, "", "UPSERT"]], "datastore.PathElement": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "from_repr"], [20, 3, 1, "", "to_repr"]], "datastore.Projection": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "from_repr"], [20, 3, 1, "", "to_repr"]], "datastore.PropertyFilter": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "from_repr"], [20, 5, 1, "", "json_key"], [20, 3, 1, "", "to_repr"]], "datastore.PropertyFilterOperator": [[20, 5, 1, "", "EQUAL"], [20, 5, 1, "", "GREATER_THAN"], [20, 5, 1, "", "GREATER_THAN_OR_EQUAL"], [20, 5, 1, "", "HAS_ANCESTOR"], [20, 5, 1, "", "LESS_THAN"], [20, 5, 1, "", "LESS_THAN_OR_EQUAL"], [20, 5, 1, "", "UNSPECIFIED"]], "datastore.PropertyOrder": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "from_repr"], [20, 3, 1, "", "to_repr"]], "datastore.Query": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "from_repr"], [20, 5, 1, "", "json_key"], [20, 3, 1, "", "to_repr"]], "datastore.QueryResultBatch": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 5, 1, "", "entity_result_kind"], [20, 3, 1, "", "from_repr"], [20, 3, 1, "", "to_repr"]], "datastore.ReadOnly": [[20, 3, 1, "", "to_repr"]], "datastore.ReadWrite": [[20, 3, 1, "", "to_repr"]], "datastore.ResultType": [[20, 5, 1, "", "FULL"], [20, 5, 1, "", "KEY_ONLY"], [20, 5, 1, "", "PROJECTION"], [20, 5, 1, "", "UNSPECIFIED"]], "datastore.TransactionOptions": [[20, 3, 1, "", "to_repr"]], "datastore.Value": [[20, 3, 1, "", "__eq__"], [20, 3, 1, "", "__repr__"], [20, 3, 1, "", "_get_supported_types"], [20, 3, 1, "", "_infer_type"], [20, 3, 1, "", "from_repr"], [20, 5, 1, "", "key_kind"], [20, 3, 1, "", "to_repr"]], "datastore.array": [[14, 2, 1, "", "Array"]], "datastore.array.Array": [[14, 3, 1, "", "__eq__"], [14, 3, 1, "", "__getitem__"], [14, 3, 1, "", "__len__"], [14, 3, 1, "", "__repr__"], [14, 3, 1, "", "from_repr"], [14, 3, 1, "", "to_repr"]], "datastore.constants": [[15, 2, 1, "", "CompositeFilterOperator"], [15, 2, 1, "", "Consistency"], [15, 2, 1, "", "Direction"], [15, 2, 1, "", "Mode"], [15, 2, 1, "", "MoreResultsType"], [15, 2, 1, "", "Operation"], [15, 2, 1, "", "PropertyFilterOperator"], [15, 2, 1, "", "ResultType"], [15, 1, 1, "", "TYPES"], [15, 2, 1, "", "TypeName"]], "datastore.constants.CompositeFilterOperator": [[15, 5, 1, "", "AND"], [15, 5, 1, "", "UNSPECIFIED"]], "datastore.constants.Consistency": [[15, 5, 1, "", "EVENTUAL"], [15, 5, 1, "", "STRONG"], [15, 5, 1, "", "UNSPECIFIED"]], "datastore.constants.Direction": [[15, 5, 1, "", "ASCENDING"], [15, 5, 1, "", "DESCENDING"], [15, 5, 1, "", "UNSPECIFIED"]], "datastore.constants.Mode": [[15, 5, 1, "", "NON_TRANSACTIONAL"], [15, 5, 1, "", "TRANSACTIONAL"], [15, 5, 1, "", "UNSPECIFIED"]], "datastore.constants.MoreResultsType": [[15, 5, 1, "", "MORE_RESULTS_AFTER_CURSOR"], [15, 5, 1, "", "MORE_RESULTS_AFTER_LIMIT"], [15, 5, 1, "", "NOT_FINISHED"], [15, 5, 1, "", "NO_MORE_RESULTS"], [15, 5, 1, "", "UNSPECIFIED"]], "datastore.constants.Operation": [[15, 5, 1, "", "DELETE"], [15, 5, 1, "", "INSERT"], [15, 5, 1, "", "UPDATE"], [15, 5, 1, "", "UPSERT"]], "datastore.constants.PropertyFilterOperator": [[15, 5, 1, "", "EQUAL"], [15, 5, 1, "", "GREATER_THAN"], [15, 5, 1, "", "GREATER_THAN_OR_EQUAL"], [15, 5, 1, "", "HAS_ANCESTOR"], [15, 5, 1, "", "LESS_THAN"], [15, 5, 1, "", "LESS_THAN_OR_EQUAL"], [15, 5, 1, "", "UNSPECIFIED"]], "datastore.constants.ResultType": [[15, 5, 1, "", "FULL"], [15, 5, 1, "", "KEY_ONLY"], [15, 5, 1, "", "PROJECTION"], [15, 5, 1, "", "UNSPECIFIED"]], "datastore.constants.TypeName": [[15, 5, 1, "", "ARRAY"], [15, 5, 1, "", "BLOB"], [15, 5, 1, "", "BOOLEAN"], [15, 5, 1, "", "DOUBLE"], [15, 5, 1, "", "ENTITY"], [15, 5, 1, "", "GEOPOINT"], [15, 5, 1, "", "INTEGER"], [15, 5, 1, "", "KEY"], [15, 5, 1, "", "NULL"], [15, 5, 1, "", "STRING"], [15, 5, 1, "", "TIMESTAMP"]], "datastore.datastore": [[16, 2, 1, "", "Datastore"], [16, 1, 1, "", "LookUpResult"], [16, 1, 1, "", "SCOPES"], [16, 6, 1, "", "init_api_root"], [16, 1, 1, "", "log"]], "datastore.datastore.Datastore": [[16, 3, 1, "", "__aenter__"], [16, 3, 1, "", "__aexit__"], [16, 5, 1, "", "_api_is_dev"], [16, 5, 1, "", "_api_root"], [16, 3, 1, "", "_build_lookup_result"], [16, 3, 1, "", "_build_read_options"], [16, 3, 1, "", "_make_commit_body"], [16, 5, 1, "", "_project"], [16, 3, 1, "", "allocateIds"], [16, 3, 1, "", "beginTransaction"], [16, 3, 1, "", "close"], [16, 3, 1, "", "commit"], [16, 5, 1, "", "datastore_operation_kind"], [16, 3, 1, "", "delete"], [16, 5, 1, "", "entity_result_kind"], [16, 3, 1, "", "export"], [16, 3, 1, "", "get_datastore_operation"], [16, 3, 1, "", "headers"], [16, 3, 1, "", "insert"], [16, 5, 1, "", "key_kind"], [16, 3, 1, "", "lookup"], [16, 3, 1, "", "make_mutation"], [16, 5, 1, "", "mutation_result_kind"], [16, 3, 1, "", "operate"], [16, 3, 1, "", "project"], [16, 5, 1, "", "query_result_batch_kind"], [16, 3, 1, "", "reserveIds"], [16, 3, 1, "", "rollback"], [16, 3, 1, "", "runQuery"], [16, 3, 1, "", "update"], [16, 3, 1, "", "upsert"], [16, 5, 1, "", "value_kind"]], "datastore.datastore_operation": [[17, 2, 1, "", "DatastoreOperation"]], "datastore.datastore_operation.DatastoreOperation": [[17, 3, 1, "", "__repr__"], [17, 3, 1, "", "from_repr"], [17, 3, 1, "", "to_repr"]], "datastore.entity": [[18, 2, 1, "", "Entity"], [18, 2, 1, "", "EntityResult"]], "datastore.entity.Entity": [[18, 3, 1, "", "__eq__"], [18, 3, 1, "", "__repr__"], [18, 3, 1, "", "from_repr"], [18, 5, 1, "", "key_kind"], [18, 3, 1, "", "to_repr"], [18, 5, 1, "", "value_kind"]], "datastore.entity.EntityResult": [[18, 3, 1, "", "__eq__"], [18, 3, 1, "", "__repr__"], [18, 5, 1, "", "entity_kind"], [18, 3, 1, "", "from_repr"], [18, 3, 1, "", "to_repr"]], "datastore.filter": [[19, 2, 1, "", "BaseFilter"], [19, 2, 1, "", "CompositeFilter"], [19, 2, 1, "", "Filter"], [19, 2, 1, "", "PropertyFilter"]], "datastore.filter.BaseFilter": [[19, 3, 1, "", "__repr__"], [19, 3, 1, "", "from_repr"], [19, 5, 1, "", "json_key"], [19, 3, 1, "", "to_repr"]], "datastore.filter.CompositeFilter": [[19, 3, 1, "", "__eq__"], [19, 3, 1, "", "from_repr"], [19, 5, 1, "", "json_key"], [19, 3, 1, "", "to_repr"]], "datastore.filter.Filter": [[19, 3, 1, "", "__eq__"], [19, 3, 1, "", "__repr__"], [19, 3, 1, "", "from_repr"], [19, 3, 1, "", "to_repr"]], "datastore.filter.PropertyFilter": [[19, 3, 1, "", "__eq__"], [19, 3, 1, "", "from_repr"], [19, 5, 1, "", "json_key"], [19, 3, 1, "", "to_repr"]], "datastore.key": [[21, 2, 1, "", "Key"], [21, 2, 1, "", "PathElement"]], "datastore.key.Key": [[21, 3, 1, "", "__eq__"], [21, 3, 1, "", "__repr__"], [21, 3, 1, "", "from_repr"], [21, 5, 1, "", "path_element_kind"], [21, 3, 1, "", "to_repr"]], "datastore.key.PathElement": [[21, 3, 1, "", "__eq__"], [21, 3, 1, "", "__repr__"], [21, 3, 1, "", "from_repr"], [21, 3, 1, "", "to_repr"]], "datastore.lat_lng": [[22, 2, 1, "", "LatLng"]], "datastore.lat_lng.LatLng": [[22, 3, 1, "", "__eq__"], [22, 3, 1, "", "__repr__"], [22, 3, 1, "", "from_repr"], [22, 3, 1, "", "to_repr"]], "datastore.mutation": [[23, 2, 1, "", "Mutation"], [23, 2, 1, "", "MutationResult"]], "datastore.mutation.MutationResult": [[23, 3, 1, "", "__eq__"], [23, 3, 1, "", "__repr__"], [23, 3, 1, "", "from_repr"], [23, 5, 1, "", "key_kind"], [23, 3, 1, "", "to_repr"]], "datastore.projection": [[24, 2, 1, "", "Projection"]], "datastore.projection.Projection": [[24, 3, 1, "", "__eq__"], [24, 3, 1, "", "__repr__"], [24, 3, 1, "", "from_repr"], [24, 3, 1, "", "to_repr"]], "datastore.property_order": [[25, 2, 1, "", "PropertyOrder"]], "datastore.property_order.PropertyOrder": [[25, 3, 1, "", "__eq__"], [25, 3, 1, "", "__repr__"], [25, 3, 1, "", "from_repr"], [25, 3, 1, "", "to_repr"]], "datastore.query": [[26, 2, 1, "", "BaseQuery"], [26, 2, 1, "", "GQLCursor"], [26, 2, 1, "", "GQLQuery"], [26, 2, 1, "", "Query"], [26, 2, 1, "", "QueryResultBatch"]], "datastore.query.BaseQuery": [[26, 3, 1, "", "__repr__"], [26, 3, 1, "", "from_repr"], [26, 5, 1, "", "json_key"], [26, 3, 1, "", "to_repr"], [26, 5, 1, "", "value_kind"]], "datastore.query.GQLCursor": [[26, 3, 1, "", "__eq__"]], "datastore.query.GQLQuery": [[26, 3, 1, "", "__eq__"], [26, 3, 1, "", "_param_from_repr"], [26, 3, 1, "", "_param_to_repr"], [26, 3, 1, "", "from_repr"], [26, 5, 1, "", "json_key"], [26, 3, 1, "", "to_repr"]], "datastore.query.Query": [[26, 3, 1, "", "__eq__"], [26, 3, 1, "", "from_repr"], [26, 5, 1, "", "json_key"], [26, 3, 1, "", "to_repr"]], "datastore.query.QueryResultBatch": [[26, 3, 1, "", "__eq__"], [26, 3, 1, "", "__repr__"], [26, 5, 1, "", "entity_result_kind"], [26, 3, 1, "", "from_repr"], [26, 3, 1, "", "to_repr"]], "datastore.transaction_options": [[27, 2, 1, "", "ReadOnly"], [27, 2, 1, "", "ReadWrite"], [27, 2, 1, "", "TransactionOptions"]], "datastore.transaction_options.ReadOnly": [[27, 3, 1, "", "to_repr"]], "datastore.transaction_options.ReadWrite": [[27, 3, 1, "", "to_repr"]], "datastore.transaction_options.TransactionOptions": [[27, 3, 1, "", "to_repr"]], "datastore.value": [[28, 2, 1, "", "Value"]], "datastore.value.Value": [[28, 3, 1, "", "__eq__"], [28, 3, 1, "", "__repr__"], [28, 3, 1, "", "_get_supported_types"], [28, 3, 1, "", "_infer_type"], [28, 3, 1, "", "from_repr"], [28, 5, 1, "", "key_kind"], [28, 3, 1, "", "to_repr"]], "kms": [[29, 2, 1, "", "KMS"], [29, 1, 1, "", "SCOPES"], [29, 1, 1, "", "__version__"], [29, 6, 1, "", "decode"], [29, 6, 1, "", "encode"], [30, 0, 0, "-", "kms"], [31, 0, 0, "-", "utils"]], "kms.KMS": [[29, 3, 1, "", "__aenter__"], [29, 3, 1, "", "__aexit__"], [29, 5, 1, "", "_api_is_dev"], [29, 5, 1, "", "_api_root"], [29, 3, 1, "", "close"], [29, 3, 1, "", "decrypt"], [29, 3, 1, "", "encrypt"], [29, 3, 1, "", "headers"]], "kms.kms": [[30, 2, 1, "", "KMS"], [30, 1, 1, "", "SCOPES"], [30, 6, 1, "", "init_api_root"]], "kms.kms.KMS": [[30, 3, 1, "", "__aenter__"], [30, 3, 1, "", "__aexit__"], [30, 5, 1, "", "_api_is_dev"], [30, 5, 1, "", "_api_root"], [30, 3, 1, "", "close"], [30, 3, 1, "", "decrypt"], [30, 3, 1, "", "encrypt"], [30, 3, 1, "", "headers"]], "kms.utils": [[31, 6, 1, "", "decode"], [31, 6, 1, "", "encode"]], "pubsub": [[32, 2, 1, "", "PublisherClient"], [32, 2, 1, "", "PubsubMessage"], [32, 2, 1, "", "SubscriberClient"], [32, 2, 1, "", "SubscriberMessage"], [32, 1, 1, "", "__version__"], [33, 0, 0, "-", "metrics"], [34, 0, 0, "-", "metrics_agent"], [35, 0, 0, "-", "publisher_client"], [36, 0, 0, "-", "subscriber"], [37, 0, 0, "-", "subscriber_client"], [38, 0, 0, "-", "subscriber_message"], [39, 0, 0, "-", "utils"]], "pubsub.PublisherClient": [[32, 3, 1, "", "__aenter__"], [32, 3, 1, "", "__aexit__"], [32, 5, 1, "", "_api_is_dev"], [32, 5, 1, "", "_api_root"], [32, 3, 1, "", "_headers"], [32, 3, 1, "", "close"], [32, 3, 1, "", "create_topic"], [32, 3, 1, "", "delete_topic"], [32, 3, 1, "", "list_topics"], [32, 3, 1, "", "project_path"], [32, 3, 1, "", "publish"], [32, 3, 1, "", "subscription_path"], [32, 3, 1, "", "topic_path"]], "pubsub.PubsubMessage": [[32, 3, 1, "", "__repr__"], [32, 3, 1, "", "to_repr"]], "pubsub.SubscriberClient": [[32, 3, 1, "", "__aenter__"], [32, 3, 1, "", "__aexit__"], [32, 5, 1, "", "_api_is_dev"], [32, 5, 1, "", "_api_root"], [32, 3, 1, "", "_headers"], [32, 3, 1, "", "acknowledge"], [32, 3, 1, "", "close"], [32, 3, 1, "", "create_subscription"], [32, 3, 1, "", "delete_subscription"], [32, 3, 1, "", "get_subscription"], [32, 3, 1, "", "list_subscriptions"], [32, 3, 1, "", "modify_ack_deadline"], [32, 3, 1, "", "patch_subscription"], [32, 3, 1, "", "project_path"], [32, 3, 1, "", "pull"], [32, 3, 1, "", "subscription_path"], [32, 3, 1, "", "topic_path"]], "pubsub.SubscriberMessage": [[32, 3, 1, "", "from_repr"], [32, 3, 1, "", "to_repr"]], "pubsub.metrics": [[33, 1, 1, "", "_NAMESPACE"]], "pubsub.metrics_agent": [[34, 2, 1, "", "MetricsAgent"]], "pubsub.metrics_agent.MetricsAgent": [[34, 3, 1, "", "histogram"], [34, 3, 1, "", "increment"]], "pubsub.publisher_client": [[35, 2, 1, "", "PublisherClient"], [35, 1, 1, "", "SCOPES"], [35, 6, 1, "", "init_api_root"], [35, 1, 1, "", "log"]], "pubsub.publisher_client.PublisherClient": [[35, 3, 1, "", "__aenter__"], [35, 3, 1, "", "__aexit__"], [35, 5, 1, "", "_api_is_dev"], [35, 5, 1, "", "_api_root"], [35, 3, 1, "", "_headers"], [35, 3, 1, "", "close"], [35, 3, 1, "", "create_topic"], [35, 3, 1, "", "delete_topic"], [35, 3, 1, "", "list_topics"], [35, 3, 1, "", "project_path"], [35, 3, 1, "", "publish"], [35, 3, 1, "", "subscription_path"], [35, 3, 1, "", "topic_path"]], "pubsub.subscriber": [[36, 1, 1, "", "log"]], "pubsub.subscriber_client": [[37, 1, 1, "", "SCOPES"], [37, 2, 1, "", "SubscriberClient"], [37, 6, 1, "", "init_api_root"]], "pubsub.subscriber_client.SubscriberClient": [[37, 3, 1, "", "__aenter__"], [37, 3, 1, "", "__aexit__"], [37, 5, 1, "", "_api_is_dev"], [37, 5, 1, "", "_api_root"], [37, 3, 1, "", "_headers"], [37, 3, 1, "", "acknowledge"], [37, 3, 1, "", "close"], [37, 3, 1, "", "create_subscription"], [37, 3, 1, "", "delete_subscription"], [37, 3, 1, "", "get_subscription"], [37, 3, 1, "", "list_subscriptions"], [37, 3, 1, "", "modify_ack_deadline"], [37, 3, 1, "", "patch_subscription"], [37, 3, 1, "", "project_path"], [37, 3, 1, "", "pull"], [37, 3, 1, "", "subscription_path"], [37, 3, 1, "", "topic_path"]], "pubsub.subscriber_message": [[38, 2, 1, "", "SubscriberMessage"], [38, 6, 1, "", "parse_publish_time"]], "pubsub.subscriber_message.SubscriberMessage": [[38, 3, 1, "", "from_repr"], [38, 3, 1, "", "to_repr"]], "pubsub.utils": [[39, 2, 1, "", "PubsubMessage"]], "pubsub.utils.PubsubMessage": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "to_repr"]], "storage": [[43, 2, 1, "", "Blob"], [43, 2, 1, "", "Bucket"], [43, 1, 1, "", "SCOPES"], [43, 2, 1, "", "Storage"], [43, 2, 1, "", "StreamResponse"], [43, 1, 1, "", "__version__"], [40, 0, 0, "-", "blob"], [41, 0, 0, "-", "bucket"], [42, 0, 0, "-", "constants"], [44, 0, 0, "-", "storage"]], "storage.Blob": [[43, 4, 1, "", "chunk_size"], [43, 3, 1, "", "download"], [43, 3, 1, "", "get_signed_url"], [43, 3, 1, "", "upload"]], "storage.Bucket": [[43, 3, 1, "", "blob_exists"], [43, 3, 1, "", "get_blob"], [43, 3, 1, "", "get_metadata"], [43, 3, 1, "", "list_blobs"], [43, 3, 1, "", "new_blob"]], "storage.Storage": [[43, 3, 1, "", "__aenter__"], [43, 3, 1, "", "__aexit__"], [43, 5, 1, "", "_api_is_dev"], [43, 5, 1, "", "_api_root"], [43, 5, 1, "", "_api_root_read"], [43, 5, 1, "", "_api_root_write"], [43, 3, 1, "", "_decide_upload_type"], [43, 3, 1, "", "_do_upload"], [43, 3, 1, "", "_download"], [43, 3, 1, "", "_download_stream"], [43, 3, 1, "", "_format_metadata_key"], [43, 3, 1, "", "_get_stream_len"], [43, 3, 1, "", "_headers"], [43, 3, 1, "", "_initiate_upload"], [43, 3, 1, "", "_preprocess_data"], [43, 3, 1, "", "_split_content_type"], [43, 3, 1, "", "_upload_multipart"], [43, 3, 1, "", "_upload_resumable"], [43, 3, 1, "", "_upload_simple"], [43, 3, 1, "", "close"], [43, 3, 1, "", "copy"], [43, 3, 1, "", "delete"], [43, 3, 1, "", "download"], [43, 3, 1, "", "download_metadata"], [43, 3, 1, "", "download_stream"], [43, 3, 1, "", "download_to_filename"], [43, 3, 1, "", "get_bucket"], [43, 3, 1, "", "get_bucket_metadata"], [43, 3, 1, "", "list_buckets"], [43, 3, 1, "", "list_objects"], [43, 3, 1, "", "patch_metadata"], [43, 3, 1, "", "upload"], [43, 3, 1, "", "upload_from_filename"]], "storage.StreamResponse": [[43, 3, 1, "", "__aenter__"], [43, 3, 1, "", "__aexit__"], [43, 4, 1, "", "content_length"], [43, 3, 1, "", "read"]], "storage.blob": [[40, 2, 1, "", "Blob"], [40, 1, 1, "", "HOST"], [40, 1, 1, "", "PKCS1_MARKER"], [40, 1, 1, "", "PKCS8_MARKER"], [40, 1, 1, "", "PKCS8_SPEC"], [40, 2, 1, "", "PemKind"]], "storage.blob.Blob": [[40, 4, 1, "", "chunk_size"], [40, 3, 1, "", "download"], [40, 3, 1, "", "get_signed_url"], [40, 3, 1, "", "upload"]], "storage.blob.PemKind": [[40, 5, 1, "", "INVALID"], [40, 5, 1, "", "PKCS1"], [40, 5, 1, "", "PKCS8"]], "storage.bucket": [[41, 2, 1, "", "Bucket"], [41, 1, 1, "", "log"]], "storage.bucket.Bucket": [[41, 3, 1, "", "blob_exists"], [41, 3, 1, "", "get_blob"], [41, 3, 1, "", "get_metadata"], [41, 3, 1, "", "list_blobs"], [41, 3, 1, "", "new_blob"]], "storage.constants": [[42, 1, 1, "", "DEFAULT_TIMEOUT"]], "storage.storage": [[44, 1, 1, "", "MAX_CONTENT_LENGTH_SIMPLE_UPLOAD"], [44, 1, 1, "", "SCOPES"], [44, 2, 1, "", "Storage"], [44, 2, 1, "", "StreamResponse"], [44, 2, 1, "", "UploadType"], [44, 6, 1, "", "choose_boundary"], [44, 6, 1, "", "encode_multipart_formdata"], [44, 6, 1, "", "init_api_root"], [44, 1, 1, "", "log"]], "storage.storage.Storage": [[44, 3, 1, "", "__aenter__"], [44, 3, 1, "", "__aexit__"], [44, 5, 1, "", "_api_is_dev"], [44, 5, 1, "", "_api_root"], [44, 5, 1, "", "_api_root_read"], [44, 5, 1, "", "_api_root_write"], [44, 3, 1, "", "_decide_upload_type"], [44, 3, 1, "", "_do_upload"], [44, 3, 1, "", "_download"], [44, 3, 1, "", "_download_stream"], [44, 3, 1, "", "_format_metadata_key"], [44, 3, 1, "", "_get_stream_len"], [44, 3, 1, "", "_headers"], [44, 3, 1, "", "_initiate_upload"], [44, 3, 1, "", "_preprocess_data"], [44, 3, 1, "", "_split_content_type"], [44, 3, 1, "", "_upload_multipart"], [44, 3, 1, "", "_upload_resumable"], [44, 3, 1, "", "_upload_simple"], [44, 3, 1, "", "close"], [44, 3, 1, "", "copy"], [44, 3, 1, "", "delete"], [44, 3, 1, "", "download"], [44, 3, 1, "", "download_metadata"], [44, 3, 1, "", "download_stream"], [44, 3, 1, "", "download_to_filename"], [44, 3, 1, "", "get_bucket"], [44, 3, 1, "", "get_bucket_metadata"], [44, 3, 1, "", "list_buckets"], [44, 3, 1, "", "list_objects"], [44, 3, 1, "", "patch_metadata"], [44, 3, 1, "", "upload"], [44, 3, 1, "", "upload_from_filename"]], "storage.storage.StreamResponse": [[44, 3, 1, "", "__aenter__"], [44, 3, 1, "", "__aexit__"], [44, 4, 1, "", "content_length"], [44, 3, 1, "", "read"]], "storage.storage.UploadType": [[44, 5, 1, "", "MULTIPART"], [44, 5, 1, "", "RESUMABLE"], [44, 5, 1, "", "SIMPLE"]], "taskqueue": [[45, 2, 1, "", "PushQueue"], [45, 1, 1, "", "SCOPES"], [45, 1, 1, "", "__version__"], [46, 0, 0, "-", "queue"]], "taskqueue.PushQueue": [[45, 3, 1, "", "__aenter__"], [45, 3, 1, "", "__aexit__"], [45, 5, 1, "", "_api_is_dev"], [45, 5, 1, "", "_api_root"], [45, 5, 1, "", "_queue_path"], [45, 3, 1, "", "close"], [45, 3, 1, "", "create"], [45, 3, 1, "", "delete"], [45, 3, 1, "", "get"], [45, 3, 1, "", "headers"], [45, 3, 1, "", "list"], [45, 3, 1, "", "run"], [45, 3, 1, "", "task_name"]], "taskqueue.queue": [[46, 2, 1, "", "PushQueue"], [46, 1, 1, "", "SCOPES"], [46, 6, 1, "", "init_api_root"], [46, 1, 1, "", "log"]], "taskqueue.queue.PushQueue": [[46, 3, 1, "", "__aenter__"], [46, 3, 1, "", "__aexit__"], [46, 5, 1, "", "_api_is_dev"], [46, 5, 1, "", "_api_root"], [46, 5, 1, "", "_queue_path"], [46, 3, 1, "", "close"], [46, 3, 1, "", "create"], [46, 3, 1, "", "delete"], [46, 3, 1, "", "get"], [46, 3, 1, "", "headers"], [46, 3, 1, "", "list"], [46, 3, 1, "", "run"], [46, 3, 1, "", "task_name"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"]}, "titleterms": {"contribut": 0, "gcloud": 0, "aio": 0, "local": 0, "develop": 0, "rest": 0, "submit": 0, "chang": 0, "pr": 0, "test": 0, "code": 0, "convent": 0, "releas": [0, 1], "new": 1, "version": 1, "auth": [2, 3, 4, 5, 6, 7], "build_const": 2, "modul": [2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46], "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "iam": 3, "class": [3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46], "attribut": [3, 4, 5, 6, 8, 10, 13, 15, 16, 20, 29, 30, 32, 35, 37, 40, 41, 43, 44, 45, 46], "instal": [4, 10, 20, 29, 32, 43, 45], "usag": [4, 10, 20, 29, 32, 43, 45], "cli": 4, "submodul": [4, 10, 20, 29, 32, 43, 45], "packag": [4, 10, 20, 29, 32, 43, 45], "function": [4, 6, 7, 8, 10, 13, 16, 29, 30, 31, 35, 37, 38, 44, 46], "session": 5, "token": 6, "util": [7, 13, 31, 39], "bigqueri": [8, 9, 10, 11, 12, 13], "dataset": 9, "emul": [10, 29, 32, 43, 45], "job": 11, "tabl": [12, 47], "datastor": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "arrai": 14, "constant": [15, 42], "datastore_oper": 17, "entiti": 18, "filter": 19, "custom": [20, 32, 43], "subclass": 20, "kei": 21, "lat_lng": 22, "mutat": 23, "project": 24, "property_ord": 25, "queri": 26, "transaction_opt": 27, "valu": 28, "km": [29, 30, 31], "pubsub": [32, 33, 34, 35, 36, 37, 38, 39], "subscrib": [32, 36], "prometheu": 32, "metric": [32, 33], "agent": 32, "deprec": 32, "publish": 32, "metrics_ag": 34, "publisher_cli": 35, "subscriber_cli": 37, "subscriber_messag": 38, "storag": [40, 41, 42, 43, 44], "blob": 40, "bucket": 41, "file": 43, "encod": 43, "taskqueu": [45, 46], "queue": 46, "asyncio": 47, "OR": 47, "threadsaf": 47, "googl": 47, "cloud": 47, "client": 47, "librari": 47, "python": 47}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributing to gcloud-aio": [[0, "contributing-to-gcloud-aio"]], "Local Development": [[0, "local-development"]], "aio and rest": [[0, "aio-and-rest"]], "Submitting Changes": [[0, "submitting-changes"]], "PR Tests": [[0, "pr-tests"]], "Coding Conventions": [[0, "coding-conventions"]], "Releases": [[0, "releases"]], "Releasing New Versions": [[1, "releasing-new-versions"]], "auth.build_constants": [[2, "module-auth.build_constants"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [30, "module-contents"], [31, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [44, "module-contents"], [46, "module-contents"]], "auth.iam": [[3, "module-auth.iam"]], "Classes": [[3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [32, "classes"], [34, "classes"], [35, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"]], "Attributes": [[3, "attributes"], [4, "attributes"], [5, "attributes"], [6, "attributes"], [8, "attributes"], [10, "attributes"], [13, "attributes"], [15, "attributes"], [16, "attributes"], [20, "attributes"], [29, "attributes"], [30, "attributes"], [32, "attributes"], [35, "attributes"], [37, "attributes"], [40, "attributes"], [41, "attributes"], [43, "attributes"], [44, "attributes"], [45, "attributes"], [46, "attributes"]], "auth": [[4, "module-auth"]], "Installation": [[4, "installation"], [10, "installation"], [20, "installation"], [29, "installation"], [32, "installation"], [43, "installation"], [45, "installation"]], "Usage": [[4, "usage"], [10, "usage"], [20, "usage"], [29, "usage"], [32, "usage"], [43, "usage"], [45, "usage"]], "CLI": [[4, "cli"]], "Submodules": [[4, "submodules"], [10, "submodules"], [20, "submodules"], [29, "submodules"], [32, "submodules"], [43, "submodules"], [45, "submodules"]], "Package Contents": [[4, "package-contents"], [10, "package-contents"], [20, "package-contents"], [29, "package-contents"], [32, "package-contents"], [43, "package-contents"], [45, "package-contents"]], "Functions": [[4, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [10, "functions"], [13, "functions"], [16, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [35, "functions"], [37, "functions"], [38, "functions"], [44, "functions"], [46, "functions"]], "auth.session": [[5, "module-auth.session"]], "auth.token": [[6, "module-auth.token"]], "auth.utils": [[7, "module-auth.utils"]], "bigquery.bigquery": [[8, "module-bigquery.bigquery"]], "bigquery.dataset": [[9, "module-bigquery.dataset"]], "bigquery": [[10, "module-bigquery"]], "Emulators": [[10, "emulators"], [29, "emulators"], [32, "emulators"], [43, "emulators"], [45, "emulators"]], "bigquery.job": [[11, "module-bigquery.job"]], "bigquery.table": [[12, "module-bigquery.table"]], "bigquery.utils": [[13, "module-bigquery.utils"]], "datastore.array": [[14, "module-datastore.array"]], "datastore.constants": [[15, "module-datastore.constants"]], "datastore.datastore": [[16, "module-datastore.datastore"]], "datastore.datastore_operation": [[17, "module-datastore.datastore_operation"]], "datastore.entity": [[18, "module-datastore.entity"]], "datastore.filter": [[19, "module-datastore.filter"]], "datastore": [[20, "module-datastore"]], "Custom Subclasses": [[20, "custom-subclasses"]], "datastore.key": [[21, "module-datastore.key"]], "datastore.lat_lng": [[22, "module-datastore.lat_lng"]], "datastore.mutation": [[23, "module-datastore.mutation"]], "datastore.projection": [[24, "module-datastore.projection"]], "datastore.property_order": [[25, "module-datastore.property_order"]], "datastore.query": [[26, "module-datastore.query"]], "datastore.transaction_options": [[27, "module-datastore.transaction_options"]], "datastore.value": [[28, "module-datastore.value"]], "kms": [[29, "module-kms"]], "kms.kms": [[30, "module-kms.kms"]], "kms.utils": [[31, "module-kms.utils"]], "pubsub": [[32, "module-pubsub"]], "Subscriber": [[32, "subscriber"]], "Prometheus Metrics": [[32, "prometheus-metrics"]], "Metrics Agent (Deprecated)": [[32, "metrics-agent-deprecated"]], "Publisher": [[32, "publisher"]], "Customization": [[32, "customization"], [43, "customization"]], "pubsub.metrics": [[33, "module-pubsub.metrics"]], "pubsub.metrics_agent": [[34, "module-pubsub.metrics_agent"]], "pubsub.publisher_client": [[35, "module-pubsub.publisher_client"]], "pubsub.subscriber": [[36, "module-pubsub.subscriber"]], "pubsub.subscriber_client": [[37, "module-pubsub.subscriber_client"]], "pubsub.subscriber_message": [[38, "module-pubsub.subscriber_message"]], "pubsub.utils": [[39, "module-pubsub.utils"]], "storage.blob": [[40, "module-storage.blob"]], "storage.bucket": [[41, "module-storage.bucket"]], "storage.constants": [[42, "module-storage.constants"]], "storage": [[43, "module-storage"]], "File Encodings": [[43, "file-encodings"]], "storage.storage": [[44, "module-storage.storage"]], "taskqueue": [[45, "module-taskqueue"]], "taskqueue.queue": [[46, "module-taskqueue.queue"]], "(Asyncio OR Threadsafe) Google Cloud Client Libraries for Python": [[47, "asyncio-or-threadsafe-google-cloud-client-libraries-for-python"]], "Table of Contents": [[47, "table-of-contents"]]}, "indexentries": {"build_gcloud_rest (in module auth.build_constants)": [[2, "auth.build_constants.BUILD_GCLOUD_REST"]], "auth.build_constants": [[2, "module-auth.build_constants"]], "module": [[2, "module-auth.build_constants"], [3, "module-auth.iam"], [4, "module-auth"], [5, "module-auth.session"], [6, "module-auth.token"], [7, "module-auth.utils"], [8, "module-bigquery.bigquery"], [9, "module-bigquery.dataset"], [10, "module-bigquery"], [11, "module-bigquery.job"], [12, "module-bigquery.table"], [13, "module-bigquery.utils"], [14, "module-datastore.array"], [15, "module-datastore.constants"], [16, "module-datastore.datastore"], [17, "module-datastore.datastore_operation"], [18, "module-datastore.entity"], [19, "module-datastore.filter"], [20, "module-datastore"], [21, "module-datastore.key"], [22, "module-datastore.lat_lng"], [23, "module-datastore.mutation"], [24, "module-datastore.projection"], [25, "module-datastore.property_order"], [26, "module-datastore.query"], [27, "module-datastore.transaction_options"], [28, "module-datastore.value"], [29, "module-kms"], [30, "module-kms.kms"], [31, "module-kms.utils"], [32, "module-pubsub"], [33, "module-pubsub.metrics"], [34, "module-pubsub.metrics_agent"], [35, "module-pubsub.publisher_client"], [36, "module-pubsub.subscriber"], [37, "module-pubsub.subscriber_client"], [38, "module-pubsub.subscriber_message"], [39, "module-pubsub.utils"], [40, "module-storage.blob"], [41, "module-storage.bucket"], [42, "module-storage.constants"], [43, "module-storage"], [44, "module-storage.storage"], [45, "module-taskqueue"], [46, "module-taskqueue.queue"]], "api_root_iam (in module auth.iam)": [[3, "auth.iam.API_ROOT_IAM"]], "api_root_iam_credentials (in module auth.iam)": [[3, "auth.iam.API_ROOT_IAM_CREDENTIALS"]], "iamclient (class in auth.iam)": [[3, "auth.iam.IamClient"]], "scopes (in module auth.iam)": [[3, "auth.iam.SCOPES"]], "__aenter__() (auth.iam.iamclient method)": [[3, "auth.iam.IamClient.__aenter__"]], "__aexit__() (auth.iam.iamclient method)": [[3, "auth.iam.IamClient.__aexit__"]], "auth.iam": [[3, "module-auth.iam"]], "close() (auth.iam.iamclient method)": [[3, "auth.iam.IamClient.close"]], "get_public_key() (auth.iam.iamclient method)": [[3, "auth.iam.IamClient.get_public_key"]], "headers() (auth.iam.iamclient method)": [[3, "auth.iam.IamClient.headers"]], "list_public_keys() (auth.iam.iamclient method)": [[3, "auth.iam.IamClient.list_public_keys"]], "service_account_email (auth.iam.iamclient property)": [[3, "auth.iam.IamClient.service_account_email"]], "sign_blob() (auth.iam.iamclient method)": [[3, "auth.iam.IamClient.sign_blob"]], "build_gcloud_rest (in module auth)": [[4, "auth.BUILD_GCLOUD_REST"]], "iamclient (class in auth)": [[4, "auth.IamClient"]], "iaptoken (class in auth)": [[4, "auth.IapToken"]], "token (class in auth)": [[4, "auth.Token"]], "__aenter__() (auth.iamclient method)": [[4, "auth.IamClient.__aenter__"]], "__aexit__() (auth.iamclient method)": [[4, "auth.IamClient.__aexit__"]], "__version__ (in module auth)": [[4, "auth.__version__"]], "_get_iap_client_id() (auth.iaptoken method)": [[4, "auth.IapToken._get_iap_client_id"]], "_refresh_authorized_user() (auth.iaptoken method)": [[4, "auth.IapToken._refresh_authorized_user"]], "_refresh_authorized_user() (auth.token method)": [[4, "auth.Token._refresh_authorized_user"]], "_refresh_gce_metadata() (auth.iaptoken method)": [[4, "auth.IapToken._refresh_gce_metadata"]], "_refresh_gce_metadata() (auth.token method)": [[4, "auth.Token._refresh_gce_metadata"]], "_refresh_service_account() (auth.iaptoken method)": [[4, "auth.IapToken._refresh_service_account"]], "_refresh_service_account() (auth.token method)": [[4, "auth.Token._refresh_service_account"]], "auth": [[4, "module-auth"]], "close() (auth.iamclient method)": [[4, "auth.IamClient.close"]], "decode() (in module auth)": [[4, "auth.decode"]], "default_token_ttl (auth.iaptoken attribute)": [[4, "auth.IapToken.default_token_ttl"]], "default_token_ttl (auth.token attribute)": [[4, "auth.Token.default_token_ttl"]], "encode() (in module auth)": [[4, "auth.encode"]], "get_public_key() (auth.iamclient method)": [[4, "auth.IamClient.get_public_key"]], "headers() (auth.iamclient method)": [[4, "auth.IamClient.headers"]], "list_public_keys() (auth.iamclient method)": [[4, "auth.IamClient.list_public_keys"]], "refresh() (auth.iaptoken method)": [[4, "auth.IapToken.refresh"]], "refresh() (auth.token method)": [[4, "auth.Token.refresh"]], "service_account_email (auth.iamclient property)": [[4, "auth.IamClient.service_account_email"]], "sign_blob() (auth.iamclient method)": [[4, "auth.IamClient.sign_blob"]], "basesession (class in auth.session)": [[5, "auth.session.BaseSession"]], "syncsession (class in auth.session)": [[5, "auth.session.SyncSession"]], "timeout (in module auth.session)": [[5, "auth.session.Timeout"]], "__metaclass__ (auth.session.basesession attribute)": [[5, "auth.session.BaseSession.__metaclass__"]], "_google_api_lock (auth.session.syncsession attribute)": [[5, "auth.session.SyncSession._google_api_lock"]], "auth.session": [[5, "module-auth.session"]], "close() (auth.session.basesession method)": [[5, "auth.session.BaseSession.close"]], "close() (auth.session.syncsession method)": [[5, "auth.session.SyncSession.close"]], "delete() (auth.session.basesession method)": [[5, "auth.session.BaseSession.delete"]], "delete() (auth.session.syncsession method)": [[5, "auth.session.SyncSession.delete"]], "get() (auth.session.basesession method)": [[5, "auth.session.BaseSession.get"]], "get() (auth.session.syncsession method)": [[5, "auth.session.SyncSession.get"]], "google_api_lock (auth.session.syncsession property)": [[5, "auth.session.SyncSession.google_api_lock"]], "head() (auth.session.basesession method)": [[5, "auth.session.BaseSession.head"]], "head() (auth.session.syncsession method)": [[5, "auth.session.SyncSession.head"]], "log (in module auth.session)": [[5, "auth.session.log"]], "patch() (auth.session.basesession method)": [[5, "auth.session.BaseSession.patch"]], "patch() (auth.session.syncsession method)": [[5, "auth.session.SyncSession.patch"]], "post() (auth.session.basesession method)": [[5, "auth.session.BaseSession.post"]], "post() (auth.session.syncsession method)": [[5, "auth.session.SyncSession.post"]], "put() (auth.session.basesession method)": [[5, "auth.session.BaseSession.put"]], "put() (auth.session.syncsession method)": [[5, "auth.session.SyncSession.put"]], "request() (auth.session.basesession method)": [[5, "auth.session.BaseSession.request"]], "request() (auth.session.syncsession method)": [[5, "auth.session.SyncSession.request"]], "session (auth.session.basesession property)": [[5, "auth.session.BaseSession.session"]], "session (auth.session.syncsession property)": [[5, "auth.session.SyncSession.session"]], "authorized_user (auth.token.type attribute)": [[6, "auth.token.Type.AUTHORIZED_USER"]], "basetoken (class in auth.token)": [[6, "auth.token.BaseToken"]], "customfileerror (in module auth.token)": [[6, "auth.token.CustomFileError"]], "gce_endpoint_id_token (in module auth.token)": [[6, "auth.token.GCE_ENDPOINT_ID_TOKEN"]], "gce_endpoint_project (in module auth.token)": [[6, "auth.token.GCE_ENDPOINT_PROJECT"]], "gce_endpoint_token (in module auth.token)": [[6, "auth.token.GCE_ENDPOINT_TOKEN"]], "gce_metadata (auth.token.type attribute)": [[6, "auth.token.Type.GCE_METADATA"]], "gce_metadata_base (in module auth.token)": [[6, "auth.token.GCE_METADATA_BASE"]], "gce_metadata_headers (in module auth.token)": [[6, "auth.token.GCE_METADATA_HEADERS"]], "gcloud_endpoint_generate_id_token (in module auth.token)": [[6, "auth.token.GCLOUD_ENDPOINT_GENERATE_ID_TOKEN"]], "iaptoken (class in auth.token)": [[6, "auth.token.IapToken"]], "refresh_headers (in module auth.token)": [[6, "auth.token.REFRESH_HEADERS"]], "service_account (auth.token.type attribute)": [[6, "auth.token.Type.SERVICE_ACCOUNT"]], "token (class in auth.token)": [[6, "auth.token.Token"]], "tokenresponse (class in auth.token)": [[6, "auth.token.TokenResponse"]], "type (class in auth.token)": [[6, "auth.token.Type"]], "__aenter__() (auth.token.basetoken method)": [[6, "auth.token.BaseToken.__aenter__"]], "__aexit__() (auth.token.basetoken method)": [[6, "auth.token.BaseToken.__aexit__"]], "__metaclass__ (auth.token.basetoken attribute)": [[6, "auth.token.BaseToken.__metaclass__"]], "_get_iap_client_id() (auth.token.iaptoken method)": [[6, "auth.token.IapToken._get_iap_client_id"]], "_refresh_authorized_user() (auth.token.iaptoken method)": [[6, "auth.token.IapToken._refresh_authorized_user"]], "_refresh_authorized_user() (auth.token.token method)": [[6, "auth.token.Token._refresh_authorized_user"]], "_refresh_gce_metadata() (auth.token.iaptoken method)": [[6, "auth.token.IapToken._refresh_gce_metadata"]], "_refresh_gce_metadata() (auth.token.token method)": [[6, "auth.token.Token._refresh_gce_metadata"]], "_refresh_service_account() (auth.token.iaptoken method)": [[6, "auth.token.IapToken._refresh_service_account"]], "_refresh_service_account() (auth.token.token method)": [[6, "auth.token.Token._refresh_service_account"]], "acquire_access_token() (auth.token.basetoken method)": [[6, "auth.token.BaseToken.acquire_access_token"]], "auth.token": [[6, "module-auth.token"]], "close() (auth.token.basetoken method)": [[6, "auth.token.BaseToken.close"]], "default_token_ttl (auth.token.iaptoken attribute)": [[6, "auth.token.IapToken.default_token_ttl"]], "default_token_ttl (auth.token.token attribute)": [[6, "auth.token.Token.default_token_ttl"]], "ensure_token() (auth.token.basetoken method)": [[6, "auth.token.BaseToken.ensure_token"]], "expires_in (auth.token.tokenresponse attribute)": [[6, "auth.token.TokenResponse.expires_in"]], "get() (auth.token.basetoken method)": [[6, "auth.token.BaseToken.get"]], "get_project() (auth.token.basetoken method)": [[6, "auth.token.BaseToken.get_project"]], "get_service_data() (in module auth.token)": [[6, "auth.token.get_service_data"]], "refresh() (auth.token.basetoken method)": [[6, "auth.token.BaseToken.refresh"]], "refresh() (auth.token.iaptoken method)": [[6, "auth.token.IapToken.refresh"]], "refresh() (auth.token.token method)": [[6, "auth.token.Token.refresh"]], "value (auth.token.tokenresponse attribute)": [[6, "auth.token.TokenResponse.value"]], "auth.utils": [[7, "module-auth.utils"]], "decode() (in module auth.utils)": [[7, "auth.utils.decode"]], "encode() (in module auth.utils)": [[7, "auth.utils.encode"]], "allow_field_addition (bigquery.bigquery.schemaupdateoption attribute)": [[8, "bigquery.bigquery.SchemaUpdateOption.ALLOW_FIELD_ADDITION"]], "allow_field_relaxation (bigquery.bigquery.schemaupdateoption attribute)": [[8, "bigquery.bigquery.SchemaUpdateOption.ALLOW_FIELD_RELAXATION"]], "avro (bigquery.bigquery.sourceformat attribute)": [[8, "bigquery.bigquery.SourceFormat.AVRO"]], "bigquerybase (class in bigquery.bigquery)": [[8, "bigquery.bigquery.BigqueryBase"]], "csv (bigquery.bigquery.sourceformat attribute)": [[8, "bigquery.bigquery.SourceFormat.CSV"]], "datastore_backup (bigquery.bigquery.sourceformat attribute)": [[8, "bigquery.bigquery.SourceFormat.DATASTORE_BACKUP"]], "disposition (class in bigquery.bigquery)": [[8, "bigquery.bigquery.Disposition"]], "newline_delimited_json (bigquery.bigquery.sourceformat attribute)": [[8, "bigquery.bigquery.SourceFormat.NEWLINE_DELIMITED_JSON"]], "orc (bigquery.bigquery.sourceformat attribute)": [[8, "bigquery.bigquery.SourceFormat.ORC"]], "parquet (bigquery.bigquery.sourceformat attribute)": [[8, "bigquery.bigquery.SourceFormat.PARQUET"]], "scopes (in module bigquery.bigquery)": [[8, "bigquery.bigquery.SCOPES"]], "schemaupdateoption (class in bigquery.bigquery)": [[8, "bigquery.bigquery.SchemaUpdateOption"]], "sourceformat (class in bigquery.bigquery)": [[8, "bigquery.bigquery.SourceFormat"]], "write_append (bigquery.bigquery.disposition attribute)": [[8, "bigquery.bigquery.Disposition.WRITE_APPEND"]], "write_empty (bigquery.bigquery.disposition attribute)": [[8, "bigquery.bigquery.Disposition.WRITE_EMPTY"]], "write_truncate (bigquery.bigquery.disposition attribute)": [[8, "bigquery.bigquery.Disposition.WRITE_TRUNCATE"]], "__aenter__() (bigquery.bigquery.bigquerybase method)": [[8, "bigquery.bigquery.BigqueryBase.__aenter__"]], "__aexit__() (bigquery.bigquery.bigquerybase method)": [[8, "bigquery.bigquery.BigqueryBase.__aexit__"]], "_api_is_dev (bigquery.bigquery.bigquerybase attribute)": [[8, "bigquery.bigquery.BigqueryBase._api_is_dev"]], "_api_root (bigquery.bigquery.bigquerybase attribute)": [[8, "bigquery.bigquery.BigqueryBase._api_root"]], "_delete() (bigquery.bigquery.bigquerybase method)": [[8, "bigquery.bigquery.BigqueryBase._delete"]], "_get_url() (bigquery.bigquery.bigquerybase method)": [[8, "bigquery.bigquery.BigqueryBase._get_url"]], "_post_json() (bigquery.bigquery.bigquerybase method)": [[8, "bigquery.bigquery.BigqueryBase._post_json"]], "_project (bigquery.bigquery.bigquerybase attribute)": [[8, "bigquery.bigquery.BigqueryBase._project"]], "bigquery.bigquery": [[8, "module-bigquery.bigquery"]], "close() (bigquery.bigquery.bigquerybase method)": [[8, "bigquery.bigquery.BigqueryBase.close"]], "headers() (bigquery.bigquery.bigquerybase method)": [[8, "bigquery.bigquery.BigqueryBase.headers"]], "init_api_root() (in module bigquery.bigquery)": [[8, "bigquery.bigquery.init_api_root"]], "log (in module bigquery.bigquery)": [[8, "bigquery.bigquery.log"]], "project() (bigquery.bigquery.bigquerybase method)": [[8, "bigquery.bigquery.BigqueryBase.project"]], "dataset (class in bigquery.dataset)": [[9, "bigquery.dataset.Dataset"]], "bigquery.dataset": [[9, "module-bigquery.dataset"]], "delete() (bigquery.dataset.dataset method)": [[9, "bigquery.dataset.Dataset.delete"]], "get() (bigquery.dataset.dataset method)": [[9, "bigquery.dataset.Dataset.get"]], "insert() (bigquery.dataset.dataset method)": [[9, "bigquery.dataset.Dataset.insert"]], "list_datasets() (bigquery.dataset.dataset method)": [[9, "bigquery.dataset.Dataset.list_datasets"]], "list_tables() (bigquery.dataset.dataset method)": [[9, "bigquery.dataset.Dataset.list_tables"]], "allow_field_addition (bigquery.schemaupdateoption attribute)": [[10, "bigquery.SchemaUpdateOption.ALLOW_FIELD_ADDITION"]], "allow_field_relaxation (bigquery.schemaupdateoption attribute)": [[10, "bigquery.SchemaUpdateOption.ALLOW_FIELD_RELAXATION"]], "avro (bigquery.sourceformat attribute)": [[10, "bigquery.SourceFormat.AVRO"]], "csv (bigquery.sourceformat attribute)": [[10, "bigquery.SourceFormat.CSV"]], "datastore_backup (bigquery.sourceformat attribute)": [[10, "bigquery.SourceFormat.DATASTORE_BACKUP"]], "dataset (class in bigquery)": [[10, "bigquery.Dataset"]], "disposition (class in bigquery)": [[10, "bigquery.Disposition"]], "job (class in bigquery)": [[10, "bigquery.Job"]], "newline_delimited_json (bigquery.sourceformat attribute)": [[10, "bigquery.SourceFormat.NEWLINE_DELIMITED_JSON"]], "orc (bigquery.sourceformat attribute)": [[10, "bigquery.SourceFormat.ORC"]], "parquet (bigquery.sourceformat attribute)": [[10, "bigquery.SourceFormat.PARQUET"]], "scopes (in module bigquery)": [[10, "bigquery.SCOPES"]], "schemaupdateoption (class in bigquery)": [[10, "bigquery.SchemaUpdateOption"]], "sourceformat (class in bigquery)": [[10, "bigquery.SourceFormat"]], "table (class in bigquery)": [[10, "bigquery.Table"]], "write_append (bigquery.disposition attribute)": [[10, "bigquery.Disposition.WRITE_APPEND"]], "write_empty (bigquery.disposition attribute)": [[10, "bigquery.Disposition.WRITE_EMPTY"]], "write_truncate (bigquery.disposition attribute)": [[10, "bigquery.Disposition.WRITE_TRUNCATE"]], "__version__ (in module bigquery)": [[10, "bigquery.__version__"]], "_make_copy_body() (bigquery.table method)": [[10, "bigquery.Table._make_copy_body"]], "_make_insert_body() (bigquery.table static method)": [[10, "bigquery.Table._make_insert_body"]], "_make_load_body() (bigquery.table method)": [[10, "bigquery.Table._make_load_body"]], "_make_query_body() (bigquery.job static method)": [[10, "bigquery.Job._make_query_body"]], "_make_query_body() (bigquery.table method)": [[10, "bigquery.Table._make_query_body"]], "_mk_unique_insert_id() (bigquery.table static method)": [[10, "bigquery.Table._mk_unique_insert_id"]], "bigquery": [[10, "module-bigquery"]], "cancel() (bigquery.job method)": [[10, "bigquery.Job.cancel"]], "create() (bigquery.table method)": [[10, "bigquery.Table.create"]], "delete() (bigquery.dataset method)": [[10, "bigquery.Dataset.delete"]], "delete() (bigquery.job method)": [[10, "bigquery.Job.delete"]], "delete() (bigquery.table method)": [[10, "bigquery.Table.delete"]], "get() (bigquery.dataset method)": [[10, "bigquery.Dataset.get"]], "get() (bigquery.table method)": [[10, "bigquery.Table.get"]], "get_job() (bigquery.job method)": [[10, "bigquery.Job.get_job"]], "get_query_results() (bigquery.job method)": [[10, "bigquery.Job.get_query_results"]], "insert() (bigquery.dataset method)": [[10, "bigquery.Dataset.insert"]], "insert() (bigquery.job method)": [[10, "bigquery.Job.insert"]], "insert() (bigquery.table method)": [[10, "bigquery.Table.insert"]], "insert_via_copy() (bigquery.table method)": [[10, "bigquery.Table.insert_via_copy"]], "insert_via_load() (bigquery.table method)": [[10, "bigquery.Table.insert_via_load"]], "insert_via_query() (bigquery.job method)": [[10, "bigquery.Job.insert_via_query"]], "insert_via_query() (bigquery.table method)": [[10, "bigquery.Table.insert_via_query"]], "list_datasets() (bigquery.dataset method)": [[10, "bigquery.Dataset.list_datasets"]], "list_tabledata() (bigquery.table method)": [[10, "bigquery.Table.list_tabledata"]], "list_tables() (bigquery.dataset method)": [[10, "bigquery.Dataset.list_tables"]], "patch() (bigquery.table method)": [[10, "bigquery.Table.patch"]], "query() (bigquery.job method)": [[10, "bigquery.Job.query"]], "query_response_to_dict() (in module bigquery)": [[10, "bigquery.query_response_to_dict"]], "result() (bigquery.job method)": [[10, "bigquery.Job.result"]], "job (class in bigquery.job)": [[11, "bigquery.job.Job"]], "_make_query_body() (bigquery.job.job static method)": [[11, "bigquery.job.Job._make_query_body"]], "bigquery.job": [[11, "module-bigquery.job"]], "cancel() (bigquery.job.job method)": [[11, "bigquery.job.Job.cancel"]], "delete() (bigquery.job.job method)": [[11, "bigquery.job.Job.delete"]], "get_job() (bigquery.job.job method)": [[11, "bigquery.job.Job.get_job"]], "get_query_results() (bigquery.job.job method)": [[11, "bigquery.job.Job.get_query_results"]], "insert() (bigquery.job.job method)": [[11, "bigquery.job.Job.insert"]], "insert_via_query() (bigquery.job.job method)": [[11, "bigquery.job.Job.insert_via_query"]], "query() (bigquery.job.job method)": [[11, "bigquery.job.Job.query"]], "result() (bigquery.job.job method)": [[11, "bigquery.job.Job.result"]], "table (class in bigquery.table)": [[12, "bigquery.table.Table"]], "_make_copy_body() (bigquery.table.table method)": [[12, "bigquery.table.Table._make_copy_body"]], "_make_insert_body() (bigquery.table.table static method)": [[12, "bigquery.table.Table._make_insert_body"]], "_make_load_body() (bigquery.table.table method)": [[12, "bigquery.table.Table._make_load_body"]], "_make_query_body() (bigquery.table.table method)": [[12, "bigquery.table.Table._make_query_body"]], "_mk_unique_insert_id() (bigquery.table.table static method)": [[12, "bigquery.table.Table._mk_unique_insert_id"]], "bigquery.table": [[12, "module-bigquery.table"]], "create() (bigquery.table.table method)": [[12, "bigquery.table.Table.create"]], "delete() (bigquery.table.table method)": [[12, "bigquery.table.Table.delete"]], "get() (bigquery.table.table method)": [[12, "bigquery.table.Table.get"]], "insert() (bigquery.table.table method)": [[12, "bigquery.table.Table.insert"]], "insert_via_copy() (bigquery.table.table method)": [[12, "bigquery.table.Table.insert_via_copy"]], "insert_via_load() (bigquery.table.table method)": [[12, "bigquery.table.Table.insert_via_load"]], "insert_via_query() (bigquery.table.table method)": [[12, "bigquery.table.Table.insert_via_query"]], "list_tabledata() (bigquery.table.table method)": [[12, "bigquery.table.Table.list_tabledata"]], "patch() (bigquery.table.table method)": [[12, "bigquery.table.Table.patch"]], "bigquery.utils": [[13, "module-bigquery.utils"]], "flatten() (in module bigquery.utils)": [[13, "bigquery.utils.flatten"]], "log (in module bigquery.utils)": [[13, "bigquery.utils.log"]], "parse() (in module bigquery.utils)": [[13, "bigquery.utils.parse"]], "query_response_to_dict() (in module bigquery.utils)": [[13, "bigquery.utils.query_response_to_dict"]], "utc (in module bigquery.utils)": [[13, "bigquery.utils.utc"]], "array (class in datastore.array)": [[14, "datastore.array.Array"]], "__eq__() (datastore.array.array method)": [[14, "datastore.array.Array.__eq__"]], "__getitem__() (datastore.array.array method)": [[14, "datastore.array.Array.__getitem__"]], "__len__() (datastore.array.array method)": [[14, "datastore.array.Array.__len__"]], "__repr__() (datastore.array.array method)": [[14, "datastore.array.Array.__repr__"]], "datastore.array": [[14, "module-datastore.array"]], "from_repr() (datastore.array.array class method)": [[14, "datastore.array.Array.from_repr"]], "to_repr() (datastore.array.array method)": [[14, "datastore.array.Array.to_repr"]], "and (datastore.constants.compositefilteroperator attribute)": [[15, "datastore.constants.CompositeFilterOperator.AND"]], "array (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.ARRAY"]], "ascending (datastore.constants.direction attribute)": [[15, "datastore.constants.Direction.ASCENDING"]], "blob (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.BLOB"]], "boolean (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.BOOLEAN"]], "compositefilteroperator (class in datastore.constants)": [[15, "datastore.constants.CompositeFilterOperator"]], "consistency (class in datastore.constants)": [[15, "datastore.constants.Consistency"]], "delete (datastore.constants.operation attribute)": [[15, "datastore.constants.Operation.DELETE"]], "descending (datastore.constants.direction attribute)": [[15, "datastore.constants.Direction.DESCENDING"]], "double (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.DOUBLE"]], "direction (class in datastore.constants)": [[15, "datastore.constants.Direction"]], "entity (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.ENTITY"]], "equal (datastore.constants.propertyfilteroperator attribute)": [[15, "datastore.constants.PropertyFilterOperator.EQUAL"]], "eventual (datastore.constants.consistency attribute)": [[15, "datastore.constants.Consistency.EVENTUAL"]], "full (datastore.constants.resulttype attribute)": [[15, "datastore.constants.ResultType.FULL"]], "geopoint (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.GEOPOINT"]], "greater_than (datastore.constants.propertyfilteroperator attribute)": [[15, "datastore.constants.PropertyFilterOperator.GREATER_THAN"]], "greater_than_or_equal (datastore.constants.propertyfilteroperator attribute)": [[15, "datastore.constants.PropertyFilterOperator.GREATER_THAN_OR_EQUAL"]], "has_ancestor (datastore.constants.propertyfilteroperator attribute)": [[15, "datastore.constants.PropertyFilterOperator.HAS_ANCESTOR"]], "insert (datastore.constants.operation attribute)": [[15, "datastore.constants.Operation.INSERT"]], "integer (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.INTEGER"]], "key (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.KEY"]], "key_only (datastore.constants.resulttype attribute)": [[15, "datastore.constants.ResultType.KEY_ONLY"]], "less_than (datastore.constants.propertyfilteroperator attribute)": [[15, "datastore.constants.PropertyFilterOperator.LESS_THAN"]], "less_than_or_equal (datastore.constants.propertyfilteroperator attribute)": [[15, "datastore.constants.PropertyFilterOperator.LESS_THAN_OR_EQUAL"]], "more_results_after_cursor (datastore.constants.moreresultstype attribute)": [[15, "datastore.constants.MoreResultsType.MORE_RESULTS_AFTER_CURSOR"]], "more_results_after_limit (datastore.constants.moreresultstype attribute)": [[15, "datastore.constants.MoreResultsType.MORE_RESULTS_AFTER_LIMIT"]], "mode (class in datastore.constants)": [[15, "datastore.constants.Mode"]], "moreresultstype (class in datastore.constants)": [[15, "datastore.constants.MoreResultsType"]], "non_transactional (datastore.constants.mode attribute)": [[15, "datastore.constants.Mode.NON_TRANSACTIONAL"]], "not_finished (datastore.constants.moreresultstype attribute)": [[15, "datastore.constants.MoreResultsType.NOT_FINISHED"]], "no_more_results (datastore.constants.moreresultstype attribute)": [[15, "datastore.constants.MoreResultsType.NO_MORE_RESULTS"]], "null (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.NULL"]], "operation (class in datastore.constants)": [[15, "datastore.constants.Operation"]], "projection (datastore.constants.resulttype attribute)": [[15, "datastore.constants.ResultType.PROJECTION"]], "propertyfilteroperator (class in datastore.constants)": [[15, "datastore.constants.PropertyFilterOperator"]], "resulttype (class in datastore.constants)": [[15, "datastore.constants.ResultType"]], "string (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.STRING"]], "strong (datastore.constants.consistency attribute)": [[15, "datastore.constants.Consistency.STRONG"]], "timestamp (datastore.constants.typename attribute)": [[15, "datastore.constants.TypeName.TIMESTAMP"]], "transactional (datastore.constants.mode attribute)": [[15, "datastore.constants.Mode.TRANSACTIONAL"]], "types (in module datastore.constants)": [[15, "datastore.constants.TYPES"]], "typename (class in datastore.constants)": [[15, "datastore.constants.TypeName"]], "unspecified (datastore.constants.compositefilteroperator attribute)": [[15, "datastore.constants.CompositeFilterOperator.UNSPECIFIED"]], "unspecified (datastore.constants.consistency attribute)": [[15, "datastore.constants.Consistency.UNSPECIFIED"]], "unspecified (datastore.constants.direction attribute)": [[15, "datastore.constants.Direction.UNSPECIFIED"]], "unspecified (datastore.constants.mode attribute)": [[15, "datastore.constants.Mode.UNSPECIFIED"]], "unspecified (datastore.constants.moreresultstype attribute)": [[15, "datastore.constants.MoreResultsType.UNSPECIFIED"]], "unspecified (datastore.constants.propertyfilteroperator attribute)": [[15, "datastore.constants.PropertyFilterOperator.UNSPECIFIED"]], "unspecified (datastore.constants.resulttype attribute)": [[15, "datastore.constants.ResultType.UNSPECIFIED"]], "update (datastore.constants.operation attribute)": [[15, "datastore.constants.Operation.UPDATE"]], "upsert (datastore.constants.operation attribute)": [[15, "datastore.constants.Operation.UPSERT"]], "datastore.constants": [[15, "module-datastore.constants"]], "datastore (class in datastore.datastore)": [[16, "datastore.datastore.Datastore"]], "lookupresult (in module datastore.datastore)": [[16, "datastore.datastore.LookUpResult"]], "scopes (in module datastore.datastore)": [[16, "datastore.datastore.SCOPES"]], "__aenter__() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.__aenter__"]], "__aexit__() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.__aexit__"]], "_api_is_dev (datastore.datastore.datastore attribute)": [[16, "datastore.datastore.Datastore._api_is_dev"]], "_api_root (datastore.datastore.datastore attribute)": [[16, "datastore.datastore.Datastore._api_root"]], "_build_lookup_result() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore._build_lookup_result"]], "_build_read_options() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore._build_read_options"]], "_make_commit_body() (datastore.datastore.datastore static method)": [[16, "datastore.datastore.Datastore._make_commit_body"]], "_project (datastore.datastore.datastore attribute)": [[16, "datastore.datastore.Datastore._project"]], "allocateids() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.allocateIds"]], "begintransaction() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.beginTransaction"]], "close() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.close"]], "commit() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.commit"]], "datastore.datastore": [[16, "module-datastore.datastore"]], "datastore_operation_kind (datastore.datastore.datastore attribute)": [[16, "datastore.datastore.Datastore.datastore_operation_kind"]], "delete() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.delete"]], "entity_result_kind (datastore.datastore.datastore attribute)": [[16, "datastore.datastore.Datastore.entity_result_kind"]], "export() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.export"]], "get_datastore_operation() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.get_datastore_operation"]], "headers() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.headers"]], "init_api_root() (in module datastore.datastore)": [[16, "datastore.datastore.init_api_root"]], "insert() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.insert"]], "key_kind (datastore.datastore.datastore attribute)": [[16, "datastore.datastore.Datastore.key_kind"]], "log (in module datastore.datastore)": [[16, "datastore.datastore.log"]], "lookup() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.lookup"]], "make_mutation() (datastore.datastore.datastore class method)": [[16, "datastore.datastore.Datastore.make_mutation"]], "mutation_result_kind (datastore.datastore.datastore attribute)": [[16, "datastore.datastore.Datastore.mutation_result_kind"]], "operate() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.operate"]], "project() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.project"]], "query_result_batch_kind (datastore.datastore.datastore attribute)": [[16, "datastore.datastore.Datastore.query_result_batch_kind"]], "reserveids() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.reserveIds"]], "rollback() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.rollback"]], "runquery() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.runQuery"]], "update() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.update"]], "upsert() (datastore.datastore.datastore method)": [[16, "datastore.datastore.Datastore.upsert"]], "value_kind (datastore.datastore.datastore attribute)": [[16, "datastore.datastore.Datastore.value_kind"]], "datastoreoperation (class in datastore.datastore_operation)": [[17, "datastore.datastore_operation.DatastoreOperation"]], "__repr__() (datastore.datastore_operation.datastoreoperation method)": [[17, "datastore.datastore_operation.DatastoreOperation.__repr__"]], "datastore.datastore_operation": [[17, "module-datastore.datastore_operation"]], "from_repr() (datastore.datastore_operation.datastoreoperation class method)": [[17, "datastore.datastore_operation.DatastoreOperation.from_repr"]], "to_repr() (datastore.datastore_operation.datastoreoperation method)": [[17, "datastore.datastore_operation.DatastoreOperation.to_repr"]], "entity (class in datastore.entity)": [[18, "datastore.entity.Entity"]], "entityresult (class in datastore.entity)": [[18, "datastore.entity.EntityResult"]], "__eq__() (datastore.entity.entity method)": [[18, "datastore.entity.Entity.__eq__"]], "__eq__() (datastore.entity.entityresult method)": [[18, "datastore.entity.EntityResult.__eq__"]], "__repr__() (datastore.entity.entity method)": [[18, "datastore.entity.Entity.__repr__"]], "__repr__() (datastore.entity.entityresult method)": [[18, "datastore.entity.EntityResult.__repr__"]], "datastore.entity": [[18, "module-datastore.entity"]], "entity_kind (datastore.entity.entityresult attribute)": [[18, "datastore.entity.EntityResult.entity_kind"]], "from_repr() (datastore.entity.entity class method)": [[18, "datastore.entity.Entity.from_repr"]], "from_repr() (datastore.entity.entityresult class method)": [[18, "datastore.entity.EntityResult.from_repr"]], "key_kind (datastore.entity.entity attribute)": [[18, "datastore.entity.Entity.key_kind"]], "to_repr() (datastore.entity.entity method)": [[18, "datastore.entity.Entity.to_repr"]], "to_repr() (datastore.entity.entityresult method)": [[18, "datastore.entity.EntityResult.to_repr"]], "value_kind (datastore.entity.entity attribute)": [[18, "datastore.entity.Entity.value_kind"]], "basefilter (class in datastore.filter)": [[19, "datastore.filter.BaseFilter"]], "compositefilter (class in datastore.filter)": [[19, "datastore.filter.CompositeFilter"]], "filter (class in datastore.filter)": [[19, "datastore.filter.Filter"]], "propertyfilter (class in datastore.filter)": [[19, "datastore.filter.PropertyFilter"]], "__eq__() (datastore.filter.compositefilter method)": [[19, "datastore.filter.CompositeFilter.__eq__"]], "__eq__() (datastore.filter.filter method)": [[19, "datastore.filter.Filter.__eq__"]], "__eq__() (datastore.filter.propertyfilter method)": [[19, "datastore.filter.PropertyFilter.__eq__"]], "__repr__() (datastore.filter.basefilter method)": [[19, "datastore.filter.BaseFilter.__repr__"]], "__repr__() (datastore.filter.filter method)": [[19, "datastore.filter.Filter.__repr__"]], "datastore.filter": [[19, "module-datastore.filter"]], "from_repr() (datastore.filter.basefilter class method)": [[19, "datastore.filter.BaseFilter.from_repr"]], "from_repr() (datastore.filter.compositefilter class method)": [[19, "datastore.filter.CompositeFilter.from_repr"]], "from_repr() (datastore.filter.filter class method)": [[19, "datastore.filter.Filter.from_repr"]], "from_repr() (datastore.filter.propertyfilter class method)": [[19, "datastore.filter.PropertyFilter.from_repr"]], "json_key (datastore.filter.basefilter attribute)": [[19, "datastore.filter.BaseFilter.json_key"]], "json_key (datastore.filter.compositefilter attribute)": [[19, "datastore.filter.CompositeFilter.json_key"]], "json_key (datastore.filter.propertyfilter attribute)": [[19, "datastore.filter.PropertyFilter.json_key"]], "to_repr() (datastore.filter.basefilter method)": [[19, "datastore.filter.BaseFilter.to_repr"]], "to_repr() (datastore.filter.compositefilter method)": [[19, "datastore.filter.CompositeFilter.to_repr"]], "to_repr() (datastore.filter.filter method)": [[19, "datastore.filter.Filter.to_repr"]], "to_repr() (datastore.filter.propertyfilter method)": [[19, "datastore.filter.PropertyFilter.to_repr"]], "and (datastore.compositefilteroperator attribute)": [[20, "datastore.CompositeFilterOperator.AND"]], "ascending (datastore.direction attribute)": [[20, "datastore.Direction.ASCENDING"]], "compositefilter (class in datastore)": [[20, "datastore.CompositeFilter"]], "compositefilteroperator (class in datastore)": [[20, "datastore.CompositeFilterOperator"]], "consistency (class in datastore)": [[20, "datastore.Consistency"]], "delete (datastore.operation attribute)": [[20, "datastore.Operation.DELETE"]], "descending (datastore.direction attribute)": [[20, "datastore.Direction.DESCENDING"]], "datastore (class in datastore)": [[20, "datastore.Datastore"]], "datastoreoperation (class in datastore)": [[20, "datastore.DatastoreOperation"]], "direction (class in datastore)": [[20, "datastore.Direction"]], "equal (datastore.propertyfilteroperator attribute)": [[20, "datastore.PropertyFilterOperator.EQUAL"]], "eventual (datastore.consistency attribute)": [[20, "datastore.Consistency.EVENTUAL"]], "entity (class in datastore)": [[20, "datastore.Entity"]], "entityresult (class in datastore)": [[20, "datastore.EntityResult"]], "full (datastore.resulttype attribute)": [[20, "datastore.ResultType.FULL"]], "filter (class in datastore)": [[20, "datastore.Filter"]], "gqlcursor (class in datastore)": [[20, "datastore.GQLCursor"]], "gqlquery (class in datastore)": [[20, "datastore.GQLQuery"]], "greater_than (datastore.propertyfilteroperator attribute)": [[20, "datastore.PropertyFilterOperator.GREATER_THAN"]], "greater_than_or_equal (datastore.propertyfilteroperator attribute)": [[20, "datastore.PropertyFilterOperator.GREATER_THAN_OR_EQUAL"]], "has_ancestor (datastore.propertyfilteroperator attribute)": [[20, "datastore.PropertyFilterOperator.HAS_ANCESTOR"]], "insert (datastore.operation attribute)": [[20, "datastore.Operation.INSERT"]], "key_only (datastore.resulttype attribute)": [[20, "datastore.ResultType.KEY_ONLY"]], "key (class in datastore)": [[20, "datastore.Key"]], "less_than (datastore.propertyfilteroperator attribute)": [[20, "datastore.PropertyFilterOperator.LESS_THAN"]], "less_than_or_equal (datastore.propertyfilteroperator attribute)": [[20, "datastore.PropertyFilterOperator.LESS_THAN_OR_EQUAL"]], "latlng (class in datastore)": [[20, "datastore.LatLng"]], "more_results_after_cursor (datastore.moreresultstype attribute)": [[20, "datastore.MoreResultsType.MORE_RESULTS_AFTER_CURSOR"]], "more_results_after_limit (datastore.moreresultstype attribute)": [[20, "datastore.MoreResultsType.MORE_RESULTS_AFTER_LIMIT"]], "mode (class in datastore)": [[20, "datastore.Mode"]], "moreresultstype (class in datastore)": [[20, "datastore.MoreResultsType"]], "mutationresult (class in datastore)": [[20, "datastore.MutationResult"]], "non_transactional (datastore.mode attribute)": [[20, "datastore.Mode.NON_TRANSACTIONAL"]], "not_finished (datastore.moreresultstype attribute)": [[20, "datastore.MoreResultsType.NOT_FINISHED"]], "no_more_results (datastore.moreresultstype attribute)": [[20, "datastore.MoreResultsType.NO_MORE_RESULTS"]], "operation (class in datastore)": [[20, "datastore.Operation"]], "projection (datastore.resulttype attribute)": [[20, "datastore.ResultType.PROJECTION"]], "pathelement (class in datastore)": [[20, "datastore.PathElement"]], "projection (class in datastore)": [[20, "datastore.Projection"]], "propertyfilter (class in datastore)": [[20, "datastore.PropertyFilter"]], "propertyfilteroperator (class in datastore)": [[20, "datastore.PropertyFilterOperator"]], "propertyorder (class in datastore)": [[20, "datastore.PropertyOrder"]], "query (class in datastore)": [[20, "datastore.Query"]], "queryresultbatch (class in datastore)": [[20, "datastore.QueryResultBatch"]], "readonly (class in datastore)": [[20, "datastore.ReadOnly"]], "readwrite (class in datastore)": [[20, "datastore.ReadWrite"]], "resulttype (class in datastore)": [[20, "datastore.ResultType"]], "scopes (in module datastore)": [[20, "datastore.SCOPES"]], "strong (datastore.consistency attribute)": [[20, "datastore.Consistency.STRONG"]], "transactional (datastore.mode attribute)": [[20, "datastore.Mode.TRANSACTIONAL"]], "transactionoptions (class in datastore)": [[20, "datastore.TransactionOptions"]], "unspecified (datastore.compositefilteroperator attribute)": [[20, "datastore.CompositeFilterOperator.UNSPECIFIED"]], "unspecified (datastore.consistency attribute)": [[20, "datastore.Consistency.UNSPECIFIED"]], "unspecified (datastore.direction attribute)": [[20, "datastore.Direction.UNSPECIFIED"]], "unspecified (datastore.mode attribute)": [[20, "datastore.Mode.UNSPECIFIED"]], "unspecified (datastore.moreresultstype attribute)": [[20, "datastore.MoreResultsType.UNSPECIFIED"]], "unspecified (datastore.propertyfilteroperator attribute)": [[20, "datastore.PropertyFilterOperator.UNSPECIFIED"]], "unspecified (datastore.resulttype attribute)": [[20, "datastore.ResultType.UNSPECIFIED"]], "update (datastore.operation attribute)": [[20, "datastore.Operation.UPDATE"]], "upsert (datastore.operation attribute)": [[20, "datastore.Operation.UPSERT"]], "value (class in datastore)": [[20, "datastore.Value"]], "__aenter__() (datastore.datastore method)": [[20, "datastore.Datastore.__aenter__"]], "__aexit__() (datastore.datastore method)": [[20, "datastore.Datastore.__aexit__"]], "__eq__() (datastore.compositefilter method)": [[20, "datastore.CompositeFilter.__eq__"]], "__eq__() (datastore.entity method)": [[20, "datastore.Entity.__eq__"]], "__eq__() (datastore.entityresult method)": [[20, "datastore.EntityResult.__eq__"]], "__eq__() (datastore.filter method)": [[20, "datastore.Filter.__eq__"]], "__eq__() (datastore.gqlcursor method)": [[20, "datastore.GQLCursor.__eq__"]], "__eq__() (datastore.gqlquery method)": [[20, "datastore.GQLQuery.__eq__"]], "__eq__() (datastore.key method)": [[20, "datastore.Key.__eq__"]], "__eq__() (datastore.latlng method)": [[20, "datastore.LatLng.__eq__"]], "__eq__() (datastore.mutationresult method)": [[20, "datastore.MutationResult.__eq__"]], "__eq__() (datastore.pathelement method)": [[20, "datastore.PathElement.__eq__"]], "__eq__() (datastore.projection method)": [[20, "datastore.Projection.__eq__"]], "__eq__() (datastore.propertyfilter method)": [[20, "datastore.PropertyFilter.__eq__"]], "__eq__() (datastore.propertyorder method)": [[20, "datastore.PropertyOrder.__eq__"]], "__eq__() (datastore.query method)": [[20, "datastore.Query.__eq__"]], "__eq__() (datastore.queryresultbatch method)": [[20, "datastore.QueryResultBatch.__eq__"]], "__eq__() (datastore.value method)": [[20, "datastore.Value.__eq__"]], "__repr__() (datastore.datastoreoperation method)": [[20, "datastore.DatastoreOperation.__repr__"]], "__repr__() (datastore.entity method)": [[20, "datastore.Entity.__repr__"]], "__repr__() (datastore.entityresult method)": [[20, "datastore.EntityResult.__repr__"]], "__repr__() (datastore.filter method)": [[20, "datastore.Filter.__repr__"]], "__repr__() (datastore.key method)": [[20, "datastore.Key.__repr__"]], "__repr__() (datastore.latlng method)": [[20, "datastore.LatLng.__repr__"]], "__repr__() (datastore.mutationresult method)": [[20, "datastore.MutationResult.__repr__"]], "__repr__() (datastore.pathelement method)": [[20, "datastore.PathElement.__repr__"]], "__repr__() (datastore.projection method)": [[20, "datastore.Projection.__repr__"]], "__repr__() (datastore.propertyorder method)": [[20, "datastore.PropertyOrder.__repr__"]], "__repr__() (datastore.queryresultbatch method)": [[20, "datastore.QueryResultBatch.__repr__"]], "__repr__() (datastore.value method)": [[20, "datastore.Value.__repr__"]], "__version__ (in module datastore)": [[20, "datastore.__version__"]], "_api_is_dev (datastore.datastore attribute)": [[20, "datastore.Datastore._api_is_dev"]], "_api_root (datastore.datastore attribute)": [[20, "datastore.Datastore._api_root"]], "_build_lookup_result() (datastore.datastore method)": [[20, "datastore.Datastore._build_lookup_result"]], "_build_read_options() (datastore.datastore method)": [[20, "datastore.Datastore._build_read_options"]], "_get_supported_types() (datastore.value class method)": [[20, "datastore.Value._get_supported_types"]], "_infer_type() (datastore.value method)": [[20, "datastore.Value._infer_type"]], "_make_commit_body() (datastore.datastore static method)": [[20, "datastore.Datastore._make_commit_body"]], "_param_from_repr() (datastore.gqlquery class method)": [[20, "datastore.GQLQuery._param_from_repr"]], "_param_to_repr() (datastore.gqlquery method)": [[20, "datastore.GQLQuery._param_to_repr"]], "_project (datastore.datastore attribute)": [[20, "datastore.Datastore._project"]], "allocateids() (datastore.datastore method)": [[20, "datastore.Datastore.allocateIds"]], "begintransaction() (datastore.datastore method)": [[20, "datastore.Datastore.beginTransaction"]], "close() (datastore.datastore method)": [[20, "datastore.Datastore.close"]], "commit() (datastore.datastore method)": [[20, "datastore.Datastore.commit"]], "datastore": [[20, "module-datastore"]], "datastore_operation_kind (datastore.datastore attribute)": [[20, "datastore.Datastore.datastore_operation_kind"]], "delete() (datastore.datastore method)": [[20, "datastore.Datastore.delete"]], "entity_kind (datastore.entityresult attribute)": [[20, "datastore.EntityResult.entity_kind"]], "entity_result_kind (datastore.datastore attribute)": [[20, "datastore.Datastore.entity_result_kind"]], "entity_result_kind (datastore.queryresultbatch attribute)": [[20, "datastore.QueryResultBatch.entity_result_kind"]], "export() (datastore.datastore method)": [[20, "datastore.Datastore.export"]], "from_repr() (datastore.compositefilter class method)": [[20, "datastore.CompositeFilter.from_repr"]], "from_repr() (datastore.datastoreoperation class method)": [[20, "datastore.DatastoreOperation.from_repr"]], "from_repr() (datastore.entity class method)": [[20, "datastore.Entity.from_repr"]], "from_repr() (datastore.entityresult class method)": [[20, "datastore.EntityResult.from_repr"]], "from_repr() (datastore.filter class method)": [[20, "datastore.Filter.from_repr"]], "from_repr() (datastore.gqlquery class method)": [[20, "datastore.GQLQuery.from_repr"]], "from_repr() (datastore.key class method)": [[20, "datastore.Key.from_repr"]], "from_repr() (datastore.latlng class method)": [[20, "datastore.LatLng.from_repr"]], "from_repr() (datastore.mutationresult class method)": [[20, "datastore.MutationResult.from_repr"]], "from_repr() (datastore.pathelement class method)": [[20, "datastore.PathElement.from_repr"]], "from_repr() (datastore.projection class method)": [[20, "datastore.Projection.from_repr"]], "from_repr() (datastore.propertyfilter class method)": [[20, "datastore.PropertyFilter.from_repr"]], "from_repr() (datastore.propertyorder class method)": [[20, "datastore.PropertyOrder.from_repr"]], "from_repr() (datastore.query class method)": [[20, "datastore.Query.from_repr"]], "from_repr() (datastore.queryresultbatch class method)": [[20, "datastore.QueryResultBatch.from_repr"]], "from_repr() (datastore.value class method)": [[20, "datastore.Value.from_repr"]], "get_datastore_operation() (datastore.datastore method)": [[20, "datastore.Datastore.get_datastore_operation"]], "headers() (datastore.datastore method)": [[20, "datastore.Datastore.headers"]], "insert() (datastore.datastore method)": [[20, "datastore.Datastore.insert"]], "json_key (datastore.compositefilter attribute)": [[20, "datastore.CompositeFilter.json_key"]], "json_key (datastore.gqlquery attribute)": [[20, "datastore.GQLQuery.json_key"]], "json_key (datastore.propertyfilter attribute)": [[20, "datastore.PropertyFilter.json_key"]], "json_key (datastore.query attribute)": [[20, "datastore.Query.json_key"]], "key_kind (datastore.datastore attribute)": [[20, "datastore.Datastore.key_kind"]], "key_kind (datastore.entity attribute)": [[20, "datastore.Entity.key_kind"]], "key_kind (datastore.mutationresult attribute)": [[20, "datastore.MutationResult.key_kind"]], "key_kind (datastore.value attribute)": [[20, "datastore.Value.key_kind"]], "lookup() (datastore.datastore method)": [[20, "datastore.Datastore.lookup"]], "make_mutation() (datastore.datastore class method)": [[20, "datastore.Datastore.make_mutation"]], "mutation_result_kind (datastore.datastore attribute)": [[20, "datastore.Datastore.mutation_result_kind"]], "operate() (datastore.datastore method)": [[20, "datastore.Datastore.operate"]], "path_element_kind (datastore.key attribute)": [[20, "datastore.Key.path_element_kind"]], "project() (datastore.datastore method)": [[20, "datastore.Datastore.project"]], "query_result_batch_kind (datastore.datastore attribute)": [[20, "datastore.Datastore.query_result_batch_kind"]], "reserveids() (datastore.datastore method)": [[20, "datastore.Datastore.reserveIds"]], "rollback() (datastore.datastore method)": [[20, "datastore.Datastore.rollback"]], "runquery() (datastore.datastore method)": [[20, "datastore.Datastore.runQuery"]], "to_repr() (datastore.compositefilter method)": [[20, "datastore.CompositeFilter.to_repr"]], "to_repr() (datastore.datastoreoperation method)": [[20, "datastore.DatastoreOperation.to_repr"]], "to_repr() (datastore.entity method)": [[20, "datastore.Entity.to_repr"]], "to_repr() (datastore.entityresult method)": [[20, "datastore.EntityResult.to_repr"]], "to_repr() (datastore.filter method)": [[20, "datastore.Filter.to_repr"]], "to_repr() (datastore.gqlquery method)": [[20, "datastore.GQLQuery.to_repr"]], "to_repr() (datastore.key method)": [[20, "datastore.Key.to_repr"]], "to_repr() (datastore.latlng method)": [[20, "datastore.LatLng.to_repr"]], "to_repr() (datastore.mutationresult method)": [[20, "datastore.MutationResult.to_repr"]], "to_repr() (datastore.pathelement method)": [[20, "datastore.PathElement.to_repr"]], "to_repr() (datastore.projection method)": [[20, "datastore.Projection.to_repr"]], "to_repr() (datastore.propertyfilter method)": [[20, "datastore.PropertyFilter.to_repr"]], "to_repr() (datastore.propertyorder method)": [[20, "datastore.PropertyOrder.to_repr"]], "to_repr() (datastore.query method)": [[20, "datastore.Query.to_repr"]], "to_repr() (datastore.queryresultbatch method)": [[20, "datastore.QueryResultBatch.to_repr"]], "to_repr() (datastore.readonly method)": [[20, "datastore.ReadOnly.to_repr"]], "to_repr() (datastore.readwrite method)": [[20, "datastore.ReadWrite.to_repr"]], "to_repr() (datastore.transactionoptions method)": [[20, "datastore.TransactionOptions.to_repr"]], "to_repr() (datastore.value method)": [[20, "datastore.Value.to_repr"]], "update() (datastore.datastore method)": [[20, "datastore.Datastore.update"]], "upsert() (datastore.datastore method)": [[20, "datastore.Datastore.upsert"]], "value_kind (datastore.datastore attribute)": [[20, "datastore.Datastore.value_kind"]], "value_kind (datastore.entity attribute)": [[20, "datastore.Entity.value_kind"]], "key (class in datastore.key)": [[21, "datastore.key.Key"]], "pathelement (class in datastore.key)": [[21, "datastore.key.PathElement"]], "__eq__() (datastore.key.key method)": [[21, "datastore.key.Key.__eq__"]], "__eq__() (datastore.key.pathelement method)": [[21, "datastore.key.PathElement.__eq__"]], "__repr__() (datastore.key.key method)": [[21, "datastore.key.Key.__repr__"]], "__repr__() (datastore.key.pathelement method)": [[21, "datastore.key.PathElement.__repr__"]], "datastore.key": [[21, "module-datastore.key"]], "from_repr() (datastore.key.key class method)": [[21, "datastore.key.Key.from_repr"]], "from_repr() (datastore.key.pathelement class method)": [[21, "datastore.key.PathElement.from_repr"]], "path_element_kind (datastore.key.key attribute)": [[21, "datastore.key.Key.path_element_kind"]], "to_repr() (datastore.key.key method)": [[21, "datastore.key.Key.to_repr"]], "to_repr() (datastore.key.pathelement method)": [[21, "datastore.key.PathElement.to_repr"]], "latlng (class in datastore.lat_lng)": [[22, "datastore.lat_lng.LatLng"]], "__eq__() (datastore.lat_lng.latlng method)": [[22, "datastore.lat_lng.LatLng.__eq__"]], "__repr__() (datastore.lat_lng.latlng method)": [[22, "datastore.lat_lng.LatLng.__repr__"]], "datastore.lat_lng": [[22, "module-datastore.lat_lng"]], "from_repr() (datastore.lat_lng.latlng class method)": [[22, "datastore.lat_lng.LatLng.from_repr"]], "to_repr() (datastore.lat_lng.latlng method)": [[22, "datastore.lat_lng.LatLng.to_repr"]], "mutation (class in datastore.mutation)": [[23, "datastore.mutation.Mutation"]], "mutationresult (class in datastore.mutation)": [[23, "datastore.mutation.MutationResult"]], "__eq__() (datastore.mutation.mutationresult method)": [[23, "datastore.mutation.MutationResult.__eq__"]], "__repr__() (datastore.mutation.mutationresult method)": [[23, "datastore.mutation.MutationResult.__repr__"]], "datastore.mutation": [[23, "module-datastore.mutation"]], "from_repr() (datastore.mutation.mutationresult class method)": [[23, "datastore.mutation.MutationResult.from_repr"]], "key_kind (datastore.mutation.mutationresult attribute)": [[23, "datastore.mutation.MutationResult.key_kind"]], "to_repr() (datastore.mutation.mutationresult method)": [[23, "datastore.mutation.MutationResult.to_repr"]], "projection (class in datastore.projection)": [[24, "datastore.projection.Projection"]], "__eq__() (datastore.projection.projection method)": [[24, "datastore.projection.Projection.__eq__"]], "__repr__() (datastore.projection.projection method)": [[24, "datastore.projection.Projection.__repr__"]], "datastore.projection": [[24, "module-datastore.projection"]], "from_repr() (datastore.projection.projection class method)": [[24, "datastore.projection.Projection.from_repr"]], "to_repr() (datastore.projection.projection method)": [[24, "datastore.projection.Projection.to_repr"]], "propertyorder (class in datastore.property_order)": [[25, "datastore.property_order.PropertyOrder"]], "__eq__() (datastore.property_order.propertyorder method)": [[25, "datastore.property_order.PropertyOrder.__eq__"]], "__repr__() (datastore.property_order.propertyorder method)": [[25, "datastore.property_order.PropertyOrder.__repr__"]], "datastore.property_order": [[25, "module-datastore.property_order"]], "from_repr() (datastore.property_order.propertyorder class method)": [[25, "datastore.property_order.PropertyOrder.from_repr"]], "to_repr() (datastore.property_order.propertyorder method)": [[25, "datastore.property_order.PropertyOrder.to_repr"]], "basequery (class in datastore.query)": [[26, "datastore.query.BaseQuery"]], "gqlcursor (class in datastore.query)": [[26, "datastore.query.GQLCursor"]], "gqlquery (class in datastore.query)": [[26, "datastore.query.GQLQuery"]], "query (class in datastore.query)": [[26, "datastore.query.Query"]], "queryresultbatch (class in datastore.query)": [[26, "datastore.query.QueryResultBatch"]], "__eq__() (datastore.query.gqlcursor method)": [[26, "datastore.query.GQLCursor.__eq__"]], "__eq__() (datastore.query.gqlquery method)": [[26, "datastore.query.GQLQuery.__eq__"]], "__eq__() (datastore.query.query method)": [[26, "datastore.query.Query.__eq__"]], "__eq__() (datastore.query.queryresultbatch method)": [[26, "datastore.query.QueryResultBatch.__eq__"]], "__repr__() (datastore.query.basequery method)": [[26, "datastore.query.BaseQuery.__repr__"]], "__repr__() (datastore.query.queryresultbatch method)": [[26, "datastore.query.QueryResultBatch.__repr__"]], "_param_from_repr() (datastore.query.gqlquery class method)": [[26, "datastore.query.GQLQuery._param_from_repr"]], "_param_to_repr() (datastore.query.gqlquery method)": [[26, "datastore.query.GQLQuery._param_to_repr"]], "datastore.query": [[26, "module-datastore.query"]], "entity_result_kind (datastore.query.queryresultbatch attribute)": [[26, "datastore.query.QueryResultBatch.entity_result_kind"]], "from_repr() (datastore.query.basequery class method)": [[26, "datastore.query.BaseQuery.from_repr"]], "from_repr() (datastore.query.gqlquery class method)": [[26, "datastore.query.GQLQuery.from_repr"]], "from_repr() (datastore.query.query class method)": [[26, "datastore.query.Query.from_repr"]], "from_repr() (datastore.query.queryresultbatch class method)": [[26, "datastore.query.QueryResultBatch.from_repr"]], "json_key (datastore.query.basequery attribute)": [[26, "datastore.query.BaseQuery.json_key"]], "json_key (datastore.query.gqlquery attribute)": [[26, "datastore.query.GQLQuery.json_key"]], "json_key (datastore.query.query attribute)": [[26, "datastore.query.Query.json_key"]], "to_repr() (datastore.query.basequery method)": [[26, "datastore.query.BaseQuery.to_repr"]], "to_repr() (datastore.query.gqlquery method)": [[26, "datastore.query.GQLQuery.to_repr"]], "to_repr() (datastore.query.query method)": [[26, "datastore.query.Query.to_repr"]], "to_repr() (datastore.query.queryresultbatch method)": [[26, "datastore.query.QueryResultBatch.to_repr"]], "value_kind (datastore.query.basequery attribute)": [[26, "datastore.query.BaseQuery.value_kind"]], "readonly (class in datastore.transaction_options)": [[27, "datastore.transaction_options.ReadOnly"]], "readwrite (class in datastore.transaction_options)": [[27, "datastore.transaction_options.ReadWrite"]], "transactionoptions (class in datastore.transaction_options)": [[27, "datastore.transaction_options.TransactionOptions"]], "datastore.transaction_options": [[27, "module-datastore.transaction_options"]], "to_repr() (datastore.transaction_options.readonly method)": [[27, "datastore.transaction_options.ReadOnly.to_repr"]], "to_repr() (datastore.transaction_options.readwrite method)": [[27, "datastore.transaction_options.ReadWrite.to_repr"]], "to_repr() (datastore.transaction_options.transactionoptions method)": [[27, "datastore.transaction_options.TransactionOptions.to_repr"]], "value (class in datastore.value)": [[28, "datastore.value.Value"]], "__eq__() (datastore.value.value method)": [[28, "datastore.value.Value.__eq__"]], "__repr__() (datastore.value.value method)": [[28, "datastore.value.Value.__repr__"]], "_get_supported_types() (datastore.value.value class method)": [[28, "datastore.value.Value._get_supported_types"]], "_infer_type() (datastore.value.value method)": [[28, "datastore.value.Value._infer_type"]], "datastore.value": [[28, "module-datastore.value"]], "from_repr() (datastore.value.value class method)": [[28, "datastore.value.Value.from_repr"]], "key_kind (datastore.value.value attribute)": [[28, "datastore.value.Value.key_kind"]], "to_repr() (datastore.value.value method)": [[28, "datastore.value.Value.to_repr"]], "kms (class in kms)": [[29, "kms.KMS"]], "scopes (in module kms)": [[29, "kms.SCOPES"]], "__aenter__() (kms.kms method)": [[29, "kms.KMS.__aenter__"]], "__aexit__() (kms.kms method)": [[29, "kms.KMS.__aexit__"]], "__version__ (in module kms)": [[29, "kms.__version__"]], "_api_is_dev (kms.kms attribute)": [[29, "kms.KMS._api_is_dev"]], "_api_root (kms.kms attribute)": [[29, "kms.KMS._api_root"]], "close() (kms.kms method)": [[29, "kms.KMS.close"]], "decode() (in module kms)": [[29, "kms.decode"]], "decrypt() (kms.kms method)": [[29, "kms.KMS.decrypt"]], "encode() (in module kms)": [[29, "kms.encode"]], "encrypt() (kms.kms method)": [[29, "kms.KMS.encrypt"]], "headers() (kms.kms method)": [[29, "kms.KMS.headers"]], "kms": [[29, "module-kms"]], "kms (class in kms.kms)": [[30, "kms.kms.KMS"]], "scopes (in module kms.kms)": [[30, "kms.kms.SCOPES"]], "__aenter__() (kms.kms.kms method)": [[30, "kms.kms.KMS.__aenter__"]], "__aexit__() (kms.kms.kms method)": [[30, "kms.kms.KMS.__aexit__"]], "_api_is_dev (kms.kms.kms attribute)": [[30, "kms.kms.KMS._api_is_dev"]], "_api_root (kms.kms.kms attribute)": [[30, "kms.kms.KMS._api_root"]], "close() (kms.kms.kms method)": [[30, "kms.kms.KMS.close"]], "decrypt() (kms.kms.kms method)": [[30, "kms.kms.KMS.decrypt"]], "encrypt() (kms.kms.kms method)": [[30, "kms.kms.KMS.encrypt"]], "headers() (kms.kms.kms method)": [[30, "kms.kms.KMS.headers"]], "init_api_root() (in module kms.kms)": [[30, "kms.kms.init_api_root"]], "kms.kms": [[30, "module-kms.kms"]], "decode() (in module kms.utils)": [[31, "kms.utils.decode"]], "encode() (in module kms.utils)": [[31, "kms.utils.encode"]], "kms.utils": [[31, "module-kms.utils"]], "publisherclient (class in pubsub)": [[32, "pubsub.PublisherClient"]], "pubsubmessage (class in pubsub)": [[32, "pubsub.PubsubMessage"]], "subscriberclient (class in pubsub)": [[32, "pubsub.SubscriberClient"]], "subscribermessage (class in pubsub)": [[32, "pubsub.SubscriberMessage"]], "__aenter__() (pubsub.publisherclient method)": [[32, "pubsub.PublisherClient.__aenter__"]], "__aenter__() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.__aenter__"]], "__aexit__() (pubsub.publisherclient method)": [[32, "pubsub.PublisherClient.__aexit__"]], "__aexit__() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.__aexit__"]], "__repr__() (pubsub.pubsubmessage method)": [[32, "pubsub.PubsubMessage.__repr__"]], "__version__ (in module pubsub)": [[32, "pubsub.__version__"]], "_api_is_dev (pubsub.publisherclient attribute)": [[32, "pubsub.PublisherClient._api_is_dev"]], "_api_is_dev (pubsub.subscriberclient attribute)": [[32, "pubsub.SubscriberClient._api_is_dev"]], "_api_root (pubsub.publisherclient attribute)": [[32, "pubsub.PublisherClient._api_root"]], "_api_root (pubsub.subscriberclient attribute)": [[32, "pubsub.SubscriberClient._api_root"]], "_headers() (pubsub.publisherclient method)": [[32, "pubsub.PublisherClient._headers"]], "_headers() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient._headers"]], "acknowledge() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.acknowledge"]], "close() (pubsub.publisherclient method)": [[32, "pubsub.PublisherClient.close"]], "close() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.close"]], "create_subscription() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.create_subscription"]], "create_topic() (pubsub.publisherclient method)": [[32, "pubsub.PublisherClient.create_topic"]], "delete_subscription() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.delete_subscription"]], "delete_topic() (pubsub.publisherclient method)": [[32, "pubsub.PublisherClient.delete_topic"]], "from_repr() (pubsub.subscribermessage static method)": [[32, "pubsub.SubscriberMessage.from_repr"]], "get_subscription() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.get_subscription"]], "list_subscriptions() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.list_subscriptions"]], "list_topics() (pubsub.publisherclient method)": [[32, "pubsub.PublisherClient.list_topics"]], "modify_ack_deadline() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.modify_ack_deadline"]], "patch_subscription() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.patch_subscription"]], "project_path() (pubsub.publisherclient static method)": [[32, "pubsub.PublisherClient.project_path"]], "project_path() (pubsub.subscriberclient static method)": [[32, "pubsub.SubscriberClient.project_path"]], "publish() (pubsub.publisherclient method)": [[32, "pubsub.PublisherClient.publish"]], "pubsub": [[32, "module-pubsub"]], "pull() (pubsub.subscriberclient method)": [[32, "pubsub.SubscriberClient.pull"]], "subscription_path() (pubsub.publisherclient class method)": [[32, "pubsub.PublisherClient.subscription_path"]], "subscription_path() (pubsub.subscriberclient class method)": [[32, "pubsub.SubscriberClient.subscription_path"]], "to_repr() (pubsub.pubsubmessage method)": [[32, "pubsub.PubsubMessage.to_repr"]], "to_repr() (pubsub.subscribermessage method)": [[32, "pubsub.SubscriberMessage.to_repr"]], "topic_path() (pubsub.publisherclient class method)": [[32, "pubsub.PublisherClient.topic_path"]], "topic_path() (pubsub.subscriberclient class method)": [[32, "pubsub.SubscriberClient.topic_path"]], "_namespace (in module pubsub.metrics)": [[33, "pubsub.metrics._NAMESPACE"]], "pubsub.metrics": [[33, "module-pubsub.metrics"]], "metricsagent (class in pubsub.metrics_agent)": [[34, "pubsub.metrics_agent.MetricsAgent"]], "histogram() (pubsub.metrics_agent.metricsagent method)": [[34, "pubsub.metrics_agent.MetricsAgent.histogram"]], "increment() (pubsub.metrics_agent.metricsagent method)": [[34, "pubsub.metrics_agent.MetricsAgent.increment"]], "pubsub.metrics_agent": [[34, "module-pubsub.metrics_agent"]], "publisherclient (class in pubsub.publisher_client)": [[35, "pubsub.publisher_client.PublisherClient"]], "scopes (in module pubsub.publisher_client)": [[35, "pubsub.publisher_client.SCOPES"]], "__aenter__() (pubsub.publisher_client.publisherclient method)": [[35, "pubsub.publisher_client.PublisherClient.__aenter__"]], "__aexit__() (pubsub.publisher_client.publisherclient method)": [[35, "pubsub.publisher_client.PublisherClient.__aexit__"]], "_api_is_dev (pubsub.publisher_client.publisherclient attribute)": [[35, "pubsub.publisher_client.PublisherClient._api_is_dev"]], "_api_root (pubsub.publisher_client.publisherclient attribute)": [[35, "pubsub.publisher_client.PublisherClient._api_root"]], "_headers() (pubsub.publisher_client.publisherclient method)": [[35, "pubsub.publisher_client.PublisherClient._headers"]], "close() (pubsub.publisher_client.publisherclient method)": [[35, "pubsub.publisher_client.PublisherClient.close"]], "create_topic() (pubsub.publisher_client.publisherclient method)": [[35, "pubsub.publisher_client.PublisherClient.create_topic"]], "delete_topic() (pubsub.publisher_client.publisherclient method)": [[35, "pubsub.publisher_client.PublisherClient.delete_topic"]], "init_api_root() (in module pubsub.publisher_client)": [[35, "pubsub.publisher_client.init_api_root"]], "list_topics() (pubsub.publisher_client.publisherclient method)": [[35, "pubsub.publisher_client.PublisherClient.list_topics"]], "log (in module pubsub.publisher_client)": [[35, "pubsub.publisher_client.log"]], "project_path() (pubsub.publisher_client.publisherclient static method)": [[35, "pubsub.publisher_client.PublisherClient.project_path"]], "publish() (pubsub.publisher_client.publisherclient method)": [[35, "pubsub.publisher_client.PublisherClient.publish"]], "pubsub.publisher_client": [[35, "module-pubsub.publisher_client"]], "subscription_path() (pubsub.publisher_client.publisherclient class method)": [[35, "pubsub.publisher_client.PublisherClient.subscription_path"]], "topic_path() (pubsub.publisher_client.publisherclient class method)": [[35, "pubsub.publisher_client.PublisherClient.topic_path"]], "log (in module pubsub.subscriber)": [[36, "pubsub.subscriber.log"]], "pubsub.subscriber": [[36, "module-pubsub.subscriber"]], "scopes (in module pubsub.subscriber_client)": [[37, "pubsub.subscriber_client.SCOPES"]], "subscriberclient (class in pubsub.subscriber_client)": [[37, "pubsub.subscriber_client.SubscriberClient"]], "__aenter__() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.__aenter__"]], "__aexit__() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.__aexit__"]], "_api_is_dev (pubsub.subscriber_client.subscriberclient attribute)": [[37, "pubsub.subscriber_client.SubscriberClient._api_is_dev"]], "_api_root (pubsub.subscriber_client.subscriberclient attribute)": [[37, "pubsub.subscriber_client.SubscriberClient._api_root"]], "_headers() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient._headers"]], "acknowledge() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.acknowledge"]], "close() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.close"]], "create_subscription() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.create_subscription"]], "delete_subscription() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.delete_subscription"]], "get_subscription() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.get_subscription"]], "init_api_root() (in module pubsub.subscriber_client)": [[37, "pubsub.subscriber_client.init_api_root"]], "list_subscriptions() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.list_subscriptions"]], "modify_ack_deadline() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.modify_ack_deadline"]], "patch_subscription() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.patch_subscription"]], "project_path() (pubsub.subscriber_client.subscriberclient static method)": [[37, "pubsub.subscriber_client.SubscriberClient.project_path"]], "pubsub.subscriber_client": [[37, "module-pubsub.subscriber_client"]], "pull() (pubsub.subscriber_client.subscriberclient method)": [[37, "pubsub.subscriber_client.SubscriberClient.pull"]], "subscription_path() (pubsub.subscriber_client.subscriberclient class method)": [[37, "pubsub.subscriber_client.SubscriberClient.subscription_path"]], "topic_path() (pubsub.subscriber_client.subscriberclient class method)": [[37, "pubsub.subscriber_client.SubscriberClient.topic_path"]], "subscribermessage (class in pubsub.subscriber_message)": [[38, "pubsub.subscriber_message.SubscriberMessage"]], "from_repr() (pubsub.subscriber_message.subscribermessage static method)": [[38, "pubsub.subscriber_message.SubscriberMessage.from_repr"]], "parse_publish_time() (in module pubsub.subscriber_message)": [[38, "pubsub.subscriber_message.parse_publish_time"]], "pubsub.subscriber_message": [[38, "module-pubsub.subscriber_message"]], "to_repr() (pubsub.subscriber_message.subscribermessage method)": [[38, "pubsub.subscriber_message.SubscriberMessage.to_repr"]], "pubsubmessage (class in pubsub.utils)": [[39, "pubsub.utils.PubsubMessage"]], "__repr__() (pubsub.utils.pubsubmessage method)": [[39, "pubsub.utils.PubsubMessage.__repr__"]], "pubsub.utils": [[39, "module-pubsub.utils"]], "to_repr() (pubsub.utils.pubsubmessage method)": [[39, "pubsub.utils.PubsubMessage.to_repr"]], "blob (class in storage.blob)": [[40, "storage.blob.Blob"]], "host (in module storage.blob)": [[40, "storage.blob.HOST"]], "invalid (storage.blob.pemkind attribute)": [[40, "storage.blob.PemKind.INVALID"]], "pkcs1 (storage.blob.pemkind attribute)": [[40, "storage.blob.PemKind.PKCS1"]], "pkcs1_marker (in module storage.blob)": [[40, "storage.blob.PKCS1_MARKER"]], "pkcs8 (storage.blob.pemkind attribute)": [[40, "storage.blob.PemKind.PKCS8"]], "pkcs8_marker (in module storage.blob)": [[40, "storage.blob.PKCS8_MARKER"]], "pkcs8_spec (in module storage.blob)": [[40, "storage.blob.PKCS8_SPEC"]], "pemkind (class in storage.blob)": [[40, "storage.blob.PemKind"]], "chunk_size (storage.blob.blob property)": [[40, "storage.blob.Blob.chunk_size"]], "download() (storage.blob.blob method)": [[40, "storage.blob.Blob.download"]], "get_signed_url() (storage.blob.blob method)": [[40, "storage.blob.Blob.get_signed_url"]], "storage.blob": [[40, "module-storage.blob"]], "upload() (storage.blob.blob method)": [[40, "storage.blob.Blob.upload"]], "bucket (class in storage.bucket)": [[41, "storage.bucket.Bucket"]], "blob_exists() (storage.bucket.bucket method)": [[41, "storage.bucket.Bucket.blob_exists"]], "get_blob() (storage.bucket.bucket method)": [[41, "storage.bucket.Bucket.get_blob"]], "get_metadata() (storage.bucket.bucket method)": [[41, "storage.bucket.Bucket.get_metadata"]], "list_blobs() (storage.bucket.bucket method)": [[41, "storage.bucket.Bucket.list_blobs"]], "log (in module storage.bucket)": [[41, "storage.bucket.log"]], "new_blob() (storage.bucket.bucket method)": [[41, "storage.bucket.Bucket.new_blob"]], "storage.bucket": [[41, "module-storage.bucket"]], "default_timeout (in module storage.constants)": [[42, "storage.constants.DEFAULT_TIMEOUT"]], "storage.constants": [[42, "module-storage.constants"]], "blob (class in storage)": [[43, "storage.Blob"]], "bucket (class in storage)": [[43, "storage.Bucket"]], "scopes (in module storage)": [[43, "storage.SCOPES"]], "storage (class in storage)": [[43, "storage.Storage"]], "streamresponse (class in storage)": [[43, "storage.StreamResponse"]], "__aenter__() (storage.storage method)": [[43, "storage.Storage.__aenter__"]], "__aenter__() (storage.streamresponse method)": [[43, "storage.StreamResponse.__aenter__"]], "__aexit__() (storage.storage method)": [[43, "storage.Storage.__aexit__"]], "__aexit__() (storage.streamresponse method)": [[43, "storage.StreamResponse.__aexit__"]], "__version__ (in module storage)": [[43, "storage.__version__"]], "_api_is_dev (storage.storage attribute)": [[43, "storage.Storage._api_is_dev"]], "_api_root (storage.storage attribute)": [[43, "storage.Storage._api_root"]], "_api_root_read (storage.storage attribute)": [[43, "storage.Storage._api_root_read"]], "_api_root_write (storage.storage attribute)": [[43, "storage.Storage._api_root_write"]], "_decide_upload_type() (storage.storage static method)": [[43, "storage.Storage._decide_upload_type"]], "_do_upload() (storage.storage method)": [[43, "storage.Storage._do_upload"]], "_download() (storage.storage method)": [[43, "storage.Storage._download"]], "_download_stream() (storage.storage method)": [[43, "storage.Storage._download_stream"]], "_format_metadata_key() (storage.storage static method)": [[43, "storage.Storage._format_metadata_key"]], "_get_stream_len() (storage.storage static method)": [[43, "storage.Storage._get_stream_len"]], "_headers() (storage.storage method)": [[43, "storage.Storage._headers"]], "_initiate_upload() (storage.storage method)": [[43, "storage.Storage._initiate_upload"]], "_preprocess_data() (storage.storage static method)": [[43, "storage.Storage._preprocess_data"]], "_split_content_type() (storage.storage static method)": [[43, "storage.Storage._split_content_type"]], "_upload_multipart() (storage.storage method)": [[43, "storage.Storage._upload_multipart"]], "_upload_resumable() (storage.storage method)": [[43, "storage.Storage._upload_resumable"]], "_upload_simple() (storage.storage method)": [[43, "storage.Storage._upload_simple"]], "blob_exists() (storage.bucket method)": [[43, "storage.Bucket.blob_exists"]], "chunk_size (storage.blob property)": [[43, "storage.Blob.chunk_size"]], "close() (storage.storage method)": [[43, "storage.Storage.close"]], "content_length (storage.streamresponse property)": [[43, "storage.StreamResponse.content_length"]], "copy() (storage.storage method)": [[43, "storage.Storage.copy"]], "delete() (storage.storage method)": [[43, "storage.Storage.delete"]], "download() (storage.blob method)": [[43, "storage.Blob.download"]], "download() (storage.storage method)": [[43, "storage.Storage.download"]], "download_metadata() (storage.storage method)": [[43, "storage.Storage.download_metadata"]], "download_stream() (storage.storage method)": [[43, "storage.Storage.download_stream"]], "download_to_filename() (storage.storage method)": [[43, "storage.Storage.download_to_filename"]], "get_blob() (storage.bucket method)": [[43, "storage.Bucket.get_blob"]], "get_bucket() (storage.storage method)": [[43, "storage.Storage.get_bucket"]], "get_bucket_metadata() (storage.storage method)": [[43, "storage.Storage.get_bucket_metadata"]], "get_metadata() (storage.bucket method)": [[43, "storage.Bucket.get_metadata"]], "get_signed_url() (storage.blob method)": [[43, "storage.Blob.get_signed_url"]], "list_blobs() (storage.bucket method)": [[43, "storage.Bucket.list_blobs"]], "list_buckets() (storage.storage method)": [[43, "storage.Storage.list_buckets"]], "list_objects() (storage.storage method)": [[43, "storage.Storage.list_objects"]], "new_blob() (storage.bucket method)": [[43, "storage.Bucket.new_blob"]], "patch_metadata() (storage.storage method)": [[43, "storage.Storage.patch_metadata"]], "read() (storage.streamresponse method)": [[43, "storage.StreamResponse.read"]], "storage": [[43, "module-storage"]], "upload() (storage.blob method)": [[43, "storage.Blob.upload"]], "upload() (storage.storage method)": [[43, "storage.Storage.upload"]], "upload_from_filename() (storage.storage method)": [[43, "storage.Storage.upload_from_filename"]], "max_content_length_simple_upload (in module storage.storage)": [[44, "storage.storage.MAX_CONTENT_LENGTH_SIMPLE_UPLOAD"]], "multipart (storage.storage.uploadtype attribute)": [[44, "storage.storage.UploadType.MULTIPART"]], "resumable (storage.storage.uploadtype attribute)": [[44, "storage.storage.UploadType.RESUMABLE"]], "scopes (in module storage.storage)": [[44, "storage.storage.SCOPES"]], "simple (storage.storage.uploadtype attribute)": [[44, "storage.storage.UploadType.SIMPLE"]], "storage (class in storage.storage)": [[44, "storage.storage.Storage"]], "streamresponse (class in storage.storage)": [[44, "storage.storage.StreamResponse"]], "uploadtype (class in storage.storage)": [[44, "storage.storage.UploadType"]], "__aenter__() (storage.storage.storage method)": [[44, "storage.storage.Storage.__aenter__"]], "__aenter__() (storage.storage.streamresponse method)": [[44, "storage.storage.StreamResponse.__aenter__"]], "__aexit__() (storage.storage.storage method)": [[44, "storage.storage.Storage.__aexit__"]], "__aexit__() (storage.storage.streamresponse method)": [[44, "storage.storage.StreamResponse.__aexit__"]], "_api_is_dev (storage.storage.storage attribute)": [[44, "storage.storage.Storage._api_is_dev"]], "_api_root (storage.storage.storage attribute)": [[44, "storage.storage.Storage._api_root"]], "_api_root_read (storage.storage.storage attribute)": [[44, "storage.storage.Storage._api_root_read"]], "_api_root_write (storage.storage.storage attribute)": [[44, "storage.storage.Storage._api_root_write"]], "_decide_upload_type() (storage.storage.storage static method)": [[44, "storage.storage.Storage._decide_upload_type"]], "_do_upload() (storage.storage.storage method)": [[44, "storage.storage.Storage._do_upload"]], "_download() (storage.storage.storage method)": [[44, "storage.storage.Storage._download"]], "_download_stream() (storage.storage.storage method)": [[44, "storage.storage.Storage._download_stream"]], "_format_metadata_key() (storage.storage.storage static method)": [[44, "storage.storage.Storage._format_metadata_key"]], "_get_stream_len() (storage.storage.storage static method)": [[44, "storage.storage.Storage._get_stream_len"]], "_headers() (storage.storage.storage method)": [[44, "storage.storage.Storage._headers"]], "_initiate_upload() (storage.storage.storage method)": [[44, "storage.storage.Storage._initiate_upload"]], "_preprocess_data() (storage.storage.storage static method)": [[44, "storage.storage.Storage._preprocess_data"]], "_split_content_type() (storage.storage.storage static method)": [[44, "storage.storage.Storage._split_content_type"]], "_upload_multipart() (storage.storage.storage method)": [[44, "storage.storage.Storage._upload_multipart"]], "_upload_resumable() (storage.storage.storage method)": [[44, "storage.storage.Storage._upload_resumable"]], "_upload_simple() (storage.storage.storage method)": [[44, "storage.storage.Storage._upload_simple"]], "choose_boundary() (in module storage.storage)": [[44, "storage.storage.choose_boundary"]], "close() (storage.storage.storage method)": [[44, "storage.storage.Storage.close"]], "content_length (storage.storage.streamresponse property)": [[44, "storage.storage.StreamResponse.content_length"]], "copy() (storage.storage.storage method)": [[44, "storage.storage.Storage.copy"]], "delete() (storage.storage.storage method)": [[44, "storage.storage.Storage.delete"]], "download() (storage.storage.storage method)": [[44, "storage.storage.Storage.download"]], "download_metadata() (storage.storage.storage method)": [[44, "storage.storage.Storage.download_metadata"]], "download_stream() (storage.storage.storage method)": [[44, "storage.storage.Storage.download_stream"]], "download_to_filename() (storage.storage.storage method)": [[44, "storage.storage.Storage.download_to_filename"]], "encode_multipart_formdata() (in module storage.storage)": [[44, "storage.storage.encode_multipart_formdata"]], "get_bucket() (storage.storage.storage method)": [[44, "storage.storage.Storage.get_bucket"]], "get_bucket_metadata() (storage.storage.storage method)": [[44, "storage.storage.Storage.get_bucket_metadata"]], "init_api_root() (in module storage.storage)": [[44, "storage.storage.init_api_root"]], "list_buckets() (storage.storage.storage method)": [[44, "storage.storage.Storage.list_buckets"]], "list_objects() (storage.storage.storage method)": [[44, "storage.storage.Storage.list_objects"]], "log (in module storage.storage)": [[44, "storage.storage.log"]], "patch_metadata() (storage.storage.storage method)": [[44, "storage.storage.Storage.patch_metadata"]], "read() (storage.storage.streamresponse method)": [[44, "storage.storage.StreamResponse.read"]], "storage.storage": [[44, "module-storage.storage"]], "upload() (storage.storage.storage method)": [[44, "storage.storage.Storage.upload"]], "upload_from_filename() (storage.storage.storage method)": [[44, "storage.storage.Storage.upload_from_filename"]], "pushqueue (class in taskqueue)": [[45, "taskqueue.PushQueue"]], "scopes (in module taskqueue)": [[45, "taskqueue.SCOPES"]], "__aenter__() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.__aenter__"]], "__aexit__() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.__aexit__"]], "__version__ (in module taskqueue)": [[45, "taskqueue.__version__"]], "_api_is_dev (taskqueue.pushqueue attribute)": [[45, "taskqueue.PushQueue._api_is_dev"]], "_api_root (taskqueue.pushqueue attribute)": [[45, "taskqueue.PushQueue._api_root"]], "_queue_path (taskqueue.pushqueue attribute)": [[45, "taskqueue.PushQueue._queue_path"]], "close() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.close"]], "create() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.create"]], "delete() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.delete"]], "get() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.get"]], "headers() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.headers"]], "list() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.list"]], "run() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.run"]], "task_name() (taskqueue.pushqueue method)": [[45, "taskqueue.PushQueue.task_name"]], "taskqueue": [[45, "module-taskqueue"]], "pushqueue (class in taskqueue.queue)": [[46, "taskqueue.queue.PushQueue"]], "scopes (in module taskqueue.queue)": [[46, "taskqueue.queue.SCOPES"]], "__aenter__() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.__aenter__"]], "__aexit__() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.__aexit__"]], "_api_is_dev (taskqueue.queue.pushqueue attribute)": [[46, "taskqueue.queue.PushQueue._api_is_dev"]], "_api_root (taskqueue.queue.pushqueue attribute)": [[46, "taskqueue.queue.PushQueue._api_root"]], "_queue_path (taskqueue.queue.pushqueue attribute)": [[46, "taskqueue.queue.PushQueue._queue_path"]], "close() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.close"]], "create() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.create"]], "delete() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.delete"]], "get() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.get"]], "headers() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.headers"]], "init_api_root() (in module taskqueue.queue)": [[46, "taskqueue.queue.init_api_root"]], "list() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.list"]], "log (in module taskqueue.queue)": [[46, "taskqueue.queue.log"]], "run() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.run"]], "task_name() (taskqueue.queue.pushqueue method)": [[46, "taskqueue.queue.PushQueue.task_name"]], "taskqueue.queue": [[46, "module-taskqueue.queue"]]}})